// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devproto.proto

package msginfo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 消息命令枚举
type CMD int32

const (
	CMD_STATUSREQ             CMD = 1
	CMD_STATUSRES             CMD = 2
	CMD_OPENDEV               CMD = 3
	CMD_OPENACK               CMD = 4
	CMD_SETUPWIFI             CMD = 5
	CMD_SETUPWIFIACK          CMD = 6
	CMD_UPGRADE               CMD = 7
	CMD_STARTINSTALLBATTERY   CMD = 8
	CMD_STOPINSTALLBATTERY    CMD = 9
	CMD_INSTALLBATTERYRESULT  CMD = 10
	CMD_GETBATTERYPASSWORD    CMD = 11
	CMD_GETBATTERYPASSWORDACK CMD = 12
	CMD_UPDATEDEVICEPARAMS    CMD = 13
	CMD_SETUPGSM              CMD = 14
	CMD_SETUPGSMACK           CMD = 15
	CMD_UPLOADGSMFLOW         CMD = 16
	CMD_UPLOADGSMFLOWACK      CMD = 17
	CMD_BACKBATTERY           CMD = 18
	CMD_CLEARWIFIINFO         CMD = 19
	CMD_CLEARWIFIACK          CMD = 20
	CMD_OFFLINESTATUS         CMD = 21
	CMD_OFFLINEACK            CMD = 22
	CMD_UPGRADEACK            CMD = 23
	CMD_REBOOTSYS             CMD = 24
	CMD_REBOOTSYSACK          CMD = 25
	CMD_SMART_LINK_AUTH_REQ   CMD = 26
	CMD_SMART_LINK_AUTH_ACK   CMD = 27
	CMD_SMART_LINK_RESULT     CMD = 28
	CMD_LOCKSLOT              CMD = 29
	CMD_LOCKSLOTACK           CMD = 30
	CMD_TIPS_IMAGES           CMD = 31
	CMD_TIPS_IMAGES_REPORT    CMD = 32
	CMD_HTTPDNS_UPDATE        CMD = 33
	CMD_HTTPDNS_UPDATEACK     CMD = 34
	CMD_GET_SERVER_TIME_REQ   CMD = 41
	CMD_GET_SERVER_TIME_ACK   CMD = 42
	CMD_GET_BATT_VERSION_REQ  CMD = 43
	CMD_GET_BATT_VERSION_ACK  CMD = 44
	CMD_BATT_VERSION_ACK      CMD = 45
	// 大柜机专用指令部份
	CMD_ADV_SCHEDULE_LIST        CMD = 1001
	CMD_ADV_SCHEDULE_LIST_REPORT CMD = 1002
	CMD_ADV_PLAY_COUNT           CMD = 1003
	CMD_ADV_PLAY_COUNT_Ack       CMD = 1004
	CMD_EXTINFO_REQUEST          CMD = 1022
)

var CMD_name = map[int32]string{
	1:    "STATUSREQ",
	2:    "STATUSRES",
	3:    "OPENDEV",
	4:    "OPENACK",
	5:    "SETUPWIFI",
	6:    "SETUPWIFIACK",
	7:    "UPGRADE",
	8:    "STARTINSTALLBATTERY",
	9:    "STOPINSTALLBATTERY",
	10:   "INSTALLBATTERYRESULT",
	11:   "GETBATTERYPASSWORD",
	12:   "GETBATTERYPASSWORDACK",
	13:   "UPDATEDEVICEPARAMS",
	14:   "SETUPGSM",
	15:   "SETUPGSMACK",
	16:   "UPLOADGSMFLOW",
	17:   "UPLOADGSMFLOWACK",
	18:   "BACKBATTERY",
	19:   "CLEARWIFIINFO",
	20:   "CLEARWIFIACK",
	21:   "OFFLINESTATUS",
	22:   "OFFLINEACK",
	23:   "UPGRADEACK",
	24:   "REBOOTSYS",
	25:   "REBOOTSYSACK",
	26:   "SMART_LINK_AUTH_REQ",
	27:   "SMART_LINK_AUTH_ACK",
	28:   "SMART_LINK_RESULT",
	29:   "LOCKSLOT",
	30:   "LOCKSLOTACK",
	31:   "TIPS_IMAGES",
	32:   "TIPS_IMAGES_REPORT",
	33:   "HTTPDNS_UPDATE",
	34:   "HTTPDNS_UPDATEACK",
	41:   "GET_SERVER_TIME_REQ",
	42:   "GET_SERVER_TIME_ACK",
	43:   "GET_BATT_VERSION_REQ",
	44:   "GET_BATT_VERSION_ACK",
	45:   "BATT_VERSION_ACK",
	1001: "ADV_SCHEDULE_LIST",
	1002: "ADV_SCHEDULE_LIST_REPORT",
	1003: "ADV_PLAY_COUNT",
	1004: "ADV_PLAY_COUNT_Ack",
	1022: "EXTINFO_REQUEST",
}

var CMD_value = map[string]int32{
	"STATUSREQ":                1,
	"STATUSRES":                2,
	"OPENDEV":                  3,
	"OPENACK":                  4,
	"SETUPWIFI":                5,
	"SETUPWIFIACK":             6,
	"UPGRADE":                  7,
	"STARTINSTALLBATTERY":      8,
	"STOPINSTALLBATTERY":       9,
	"INSTALLBATTERYRESULT":     10,
	"GETBATTERYPASSWORD":       11,
	"GETBATTERYPASSWORDACK":    12,
	"UPDATEDEVICEPARAMS":       13,
	"SETUPGSM":                 14,
	"SETUPGSMACK":              15,
	"UPLOADGSMFLOW":            16,
	"UPLOADGSMFLOWACK":         17,
	"BACKBATTERY":              18,
	"CLEARWIFIINFO":            19,
	"CLEARWIFIACK":             20,
	"OFFLINESTATUS":            21,
	"OFFLINEACK":               22,
	"UPGRADEACK":               23,
	"REBOOTSYS":                24,
	"REBOOTSYSACK":             25,
	"SMART_LINK_AUTH_REQ":      26,
	"SMART_LINK_AUTH_ACK":      27,
	"SMART_LINK_RESULT":        28,
	"LOCKSLOT":                 29,
	"LOCKSLOTACK":              30,
	"TIPS_IMAGES":              31,
	"TIPS_IMAGES_REPORT":       32,
	"HTTPDNS_UPDATE":           33,
	"HTTPDNS_UPDATEACK":        34,
	"GET_SERVER_TIME_REQ":      41,
	"GET_SERVER_TIME_ACK":      42,
	"GET_BATT_VERSION_REQ":     43,
	"GET_BATT_VERSION_ACK":     44,
	"BATT_VERSION_ACK":         45,
	"ADV_SCHEDULE_LIST":        1001,
	"ADV_SCHEDULE_LIST_REPORT": 1002,
	"ADV_PLAY_COUNT":           1003,
	"ADV_PLAY_COUNT_Ack":       1004,
	"EXTINFO_REQUEST":          1022,
}

func (x CMD) Enum() *CMD {
	p := new(CMD)
	*p = x
	return p
}

func (x CMD) String() string {
	return proto.EnumName(CMD_name, int32(x))
}

func (x *CMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMD_value, data, "CMD")
	if err != nil {
		return err
	}
	*x = CMD(value)
	return nil
}

func (CMD) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{0}
}

// 2.实体列表
// 2.1.卡槽
type HEART_BEAT_DEVICE_CODE int32

const (
	HEART_BEAT_DEVICE_CODE_HBD_STATUS_OK         HEART_BEAT_DEVICE_CODE = 0
	HEART_BEAT_DEVICE_CODE_HBD_TEMPERATURE_ERROR HEART_BEAT_DEVICE_CODE = 1
	HEART_BEAT_DEVICE_CODE_HBD_WIFI_ERROR        HEART_BEAT_DEVICE_CODE = 2
	HEART_BEAT_DEVICE_CODE_HBD_BLUE_ERROR        HEART_BEAT_DEVICE_CODE = 3
	HEART_BEAT_DEVICE_CODE_HBD_IBEACON_ERROR     HEART_BEAT_DEVICE_CODE = 4
	HEART_BEAT_DEVICE_CODE_HBD_CONFIG_FILE_ERROR HEART_BEAT_DEVICE_CODE = 5
	HEART_BEAT_DEVICE_CODE_HBD_SYSTEM_ERROR      HEART_BEAT_DEVICE_CODE = 6
	HEART_BEAT_DEVICE_CODE_HBD_OTHER_ERROR       HEART_BEAT_DEVICE_CODE = 7
)

var HEART_BEAT_DEVICE_CODE_name = map[int32]string{
	0: "HBD_STATUS_OK",
	1: "HBD_TEMPERATURE_ERROR",
	2: "HBD_WIFI_ERROR",
	3: "HBD_BLUE_ERROR",
	4: "HBD_IBEACON_ERROR",
	5: "HBD_CONFIG_FILE_ERROR",
	6: "HBD_SYSTEM_ERROR",
	7: "HBD_OTHER_ERROR",
}

var HEART_BEAT_DEVICE_CODE_value = map[string]int32{
	"HBD_STATUS_OK":         0,
	"HBD_TEMPERATURE_ERROR": 1,
	"HBD_WIFI_ERROR":        2,
	"HBD_BLUE_ERROR":        3,
	"HBD_IBEACON_ERROR":     4,
	"HBD_CONFIG_FILE_ERROR": 5,
	"HBD_SYSTEM_ERROR":      6,
	"HBD_OTHER_ERROR":       7,
}

func (x HEART_BEAT_DEVICE_CODE) Enum() *HEART_BEAT_DEVICE_CODE {
	p := new(HEART_BEAT_DEVICE_CODE)
	*p = x
	return p
}

func (x HEART_BEAT_DEVICE_CODE) String() string {
	return proto.EnumName(HEART_BEAT_DEVICE_CODE_name, int32(x))
}

func (x *HEART_BEAT_DEVICE_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HEART_BEAT_DEVICE_CODE_value, data, "HEART_BEAT_DEVICE_CODE")
	if err != nil {
		return err
	}
	*x = HEART_BEAT_DEVICE_CODE(value)
	return nil
}

func (HEART_BEAT_DEVICE_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{1}
}

type HEART_BEAT_SLOT_CODE int32

const (
	HEART_BEAT_SLOT_CODE_HBS_STATUS_OK                   HEART_BEAT_SLOT_CODE = 0
	HEART_BEAT_SLOT_CODE_HBS_REPAIR_OK                   HEART_BEAT_SLOT_CODE = 1
	HEART_BEAT_SLOT_CODE_HBS_VOLTAGE_ERROR               HEART_BEAT_SLOT_CODE = 2
	HEART_BEAT_SLOT_CODE_HBS_CURRENT_ERROR               HEART_BEAT_SLOT_CODE = 3
	HEART_BEAT_SLOT_CODE_HBS_OTHER_ERROR                 HEART_BEAT_SLOT_CODE = 4
	HEART_BEAT_SLOT_CODE_HBS_MCU_ERROR                   HEART_BEAT_SLOT_CODE = 5
	HEART_BEAT_SLOT_CODE_HBS_SN_N_CONTACT_Y_DOOR_Y_ERROR HEART_BEAT_SLOT_CODE = 6
	HEART_BEAT_SLOT_CODE_HBS_SN_N_CONTACT_Y_DOOR_N_ERROR HEART_BEAT_SLOT_CODE = 7
	HEART_BEAT_SLOT_CODE_HBS_SN_N_CONTACT_N_DOOR_Y_ERROR HEART_BEAT_SLOT_CODE = 8
	HEART_BEAT_SLOT_CODE_HBS_SN_N_CONTACT_N_DOOR_N_ERROR HEART_BEAT_SLOT_CODE = 9
	HEART_BEAT_SLOT_CODE_HBS_SN_Y_CONTACT_Y_DOOR_Y_ERROR HEART_BEAT_SLOT_CODE = 10
	HEART_BEAT_SLOT_CODE_HBS_SN_Y_CONTACT_Y_DOOR_N_ERROR HEART_BEAT_SLOT_CODE = 11
	HEART_BEAT_SLOT_CODE_HBS_SN_Y_CONTACT_N_DOOR_Y_ERROR HEART_BEAT_SLOT_CODE = 12
	HEART_BEAT_SLOT_CODE_HBS_SN_Y_CONTACT_N_DOOR_N_ERROR HEART_BEAT_SLOT_CODE = 13
	HEART_BEAT_SLOT_CODE_HBS_MOTOR_FUSE_ERROR            HEART_BEAT_SLOT_CODE = 16
	HEART_BEAT_SLOT_CODE_HBS_BATT_FUSE_ERROR             HEART_BEAT_SLOT_CODE = 17
	HEART_BEAT_SLOT_CODE_HBS_ELEC_FUSE_ERROR             HEART_BEAT_SLOT_CODE = 18
	HEART_BEAT_SLOT_CODE_HBS_MOTOR_BATT_FUSE_ERROR       HEART_BEAT_SLOT_CODE = 19
	HEART_BEAT_SLOT_CODE_HBS_MOTOR_ELEC_FUSE_ERROR       HEART_BEAT_SLOT_CODE = 20
	HEART_BEAT_SLOT_CODE_HBS_BATT_ELEC_FUSE_ERROR        HEART_BEAT_SLOT_CODE = 21
	HEART_BEAT_SLOT_CODE_HBS_MOTOR_BATT_ELEC_FUSE_ERROR  HEART_BEAT_SLOT_CODE = 22
)

var HEART_BEAT_SLOT_CODE_name = map[int32]string{
	0:  "HBS_STATUS_OK",
	1:  "HBS_REPAIR_OK",
	2:  "HBS_VOLTAGE_ERROR",
	3:  "HBS_CURRENT_ERROR",
	4:  "HBS_OTHER_ERROR",
	5:  "HBS_MCU_ERROR",
	6:  "HBS_SN_N_CONTACT_Y_DOOR_Y_ERROR",
	7:  "HBS_SN_N_CONTACT_Y_DOOR_N_ERROR",
	8:  "HBS_SN_N_CONTACT_N_DOOR_Y_ERROR",
	9:  "HBS_SN_N_CONTACT_N_DOOR_N_ERROR",
	10: "HBS_SN_Y_CONTACT_Y_DOOR_Y_ERROR",
	11: "HBS_SN_Y_CONTACT_Y_DOOR_N_ERROR",
	12: "HBS_SN_Y_CONTACT_N_DOOR_Y_ERROR",
	13: "HBS_SN_Y_CONTACT_N_DOOR_N_ERROR",
	16: "HBS_MOTOR_FUSE_ERROR",
	17: "HBS_BATT_FUSE_ERROR",
	18: "HBS_ELEC_FUSE_ERROR",
	19: "HBS_MOTOR_BATT_FUSE_ERROR",
	20: "HBS_MOTOR_ELEC_FUSE_ERROR",
	21: "HBS_BATT_ELEC_FUSE_ERROR",
	22: "HBS_MOTOR_BATT_ELEC_FUSE_ERROR",
}

var HEART_BEAT_SLOT_CODE_value = map[string]int32{
	"HBS_STATUS_OK":                   0,
	"HBS_REPAIR_OK":                   1,
	"HBS_VOLTAGE_ERROR":               2,
	"HBS_CURRENT_ERROR":               3,
	"HBS_OTHER_ERROR":                 4,
	"HBS_MCU_ERROR":                   5,
	"HBS_SN_N_CONTACT_Y_DOOR_Y_ERROR": 6,
	"HBS_SN_N_CONTACT_Y_DOOR_N_ERROR": 7,
	"HBS_SN_N_CONTACT_N_DOOR_Y_ERROR": 8,
	"HBS_SN_N_CONTACT_N_DOOR_N_ERROR": 9,
	"HBS_SN_Y_CONTACT_Y_DOOR_Y_ERROR": 10,
	"HBS_SN_Y_CONTACT_Y_DOOR_N_ERROR": 11,
	"HBS_SN_Y_CONTACT_N_DOOR_Y_ERROR": 12,
	"HBS_SN_Y_CONTACT_N_DOOR_N_ERROR": 13,
	"HBS_MOTOR_FUSE_ERROR":            16,
	"HBS_BATT_FUSE_ERROR":             17,
	"HBS_ELEC_FUSE_ERROR":             18,
	"HBS_MOTOR_BATT_FUSE_ERROR":       19,
	"HBS_MOTOR_ELEC_FUSE_ERROR":       20,
	"HBS_BATT_ELEC_FUSE_ERROR":        21,
	"HBS_MOTOR_BATT_ELEC_FUSE_ERROR":  22,
}

func (x HEART_BEAT_SLOT_CODE) Enum() *HEART_BEAT_SLOT_CODE {
	p := new(HEART_BEAT_SLOT_CODE)
	*p = x
	return p
}

func (x HEART_BEAT_SLOT_CODE) String() string {
	return proto.EnumName(HEART_BEAT_SLOT_CODE_name, int32(x))
}

func (x *HEART_BEAT_SLOT_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HEART_BEAT_SLOT_CODE_value, data, "HEART_BEAT_SLOT_CODE")
	if err != nil {
		return err
	}
	*x = HEART_BEAT_SLOT_CODE(value)
	return nil
}

func (HEART_BEAT_SLOT_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{2}
}

type HEART_BEAT_BATTERY_CODE int32

const (
	HEART_BEAT_BATTERY_CODE_HBB_STATUS_OK           HEART_BEAT_BATTERY_CODE = 0
	HEART_BEAT_BATTERY_CODE_HBB_OTHER_ERROR         HEART_BEAT_BATTERY_CODE = 1
	HEART_BEAT_BATTERY_CODE_HBB_TEMPERATURE_ERROR   HEART_BEAT_BATTERY_CODE = 2
	HEART_BEAT_BATTERY_CODE_HBB_VOLTAGE_ERROR       HEART_BEAT_BATTERY_CODE = 3
	HEART_BEAT_BATTERY_CODE_HBB_CURRENT_ERROR       HEART_BEAT_BATTERY_CODE = 4
	HEART_BEAT_BATTERY_CODE_HBB_CYCLECOUNT_ERROR    HEART_BEAT_BATTERY_CODE = 5
	HEART_BEAT_BATTERY_CODE_HBB_INTERFACE_ERROR     HEART_BEAT_BATTERY_CODE = 6
	HEART_BEAT_BATTERY_CODE_HBB_BODY_ERROR          HEART_BEAT_BATTERY_CODE = 7
	HEART_BEAT_BATTERY_CODE_HBB_LINE_ERROR          HEART_BEAT_BATTERY_CODE = 8
	HEART_BEAT_BATTERY_CODE_HBB_BODY_AND_LINE_ERROR HEART_BEAT_BATTERY_CODE = 9
)

var HEART_BEAT_BATTERY_CODE_name = map[int32]string{
	0: "HBB_STATUS_OK",
	1: "HBB_OTHER_ERROR",
	2: "HBB_TEMPERATURE_ERROR",
	3: "HBB_VOLTAGE_ERROR",
	4: "HBB_CURRENT_ERROR",
	5: "HBB_CYCLECOUNT_ERROR",
	6: "HBB_INTERFACE_ERROR",
	7: "HBB_BODY_ERROR",
	8: "HBB_LINE_ERROR",
	9: "HBB_BODY_AND_LINE_ERROR",
}

var HEART_BEAT_BATTERY_CODE_value = map[string]int32{
	"HBB_STATUS_OK":           0,
	"HBB_OTHER_ERROR":         1,
	"HBB_TEMPERATURE_ERROR":   2,
	"HBB_VOLTAGE_ERROR":       3,
	"HBB_CURRENT_ERROR":       4,
	"HBB_CYCLECOUNT_ERROR":    5,
	"HBB_INTERFACE_ERROR":     6,
	"HBB_BODY_ERROR":          7,
	"HBB_LINE_ERROR":          8,
	"HBB_BODY_AND_LINE_ERROR": 9,
}

func (x HEART_BEAT_BATTERY_CODE) Enum() *HEART_BEAT_BATTERY_CODE {
	p := new(HEART_BEAT_BATTERY_CODE)
	*p = x
	return p
}

func (x HEART_BEAT_BATTERY_CODE) String() string {
	return proto.EnumName(HEART_BEAT_BATTERY_CODE_name, int32(x))
}

func (x *HEART_BEAT_BATTERY_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HEART_BEAT_BATTERY_CODE_value, data, "HEART_BEAT_BATTERY_CODE")
	if err != nil {
		return err
	}
	*x = HEART_BEAT_BATTERY_CODE(value)
	return nil
}

func (HEART_BEAT_BATTERY_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{3}
}

type ENABLE_BORROW_STATUS int32

const (
	ENABLE_BORROW_STATUS_ENABLE_STATUS  ENABLE_BORROW_STATUS = 0
	ENABLE_BORROW_STATUS_DISABLE_STATUS ENABLE_BORROW_STATUS = 1
)

var ENABLE_BORROW_STATUS_name = map[int32]string{
	0: "ENABLE_STATUS",
	1: "DISABLE_STATUS",
}

var ENABLE_BORROW_STATUS_value = map[string]int32{
	"ENABLE_STATUS":  0,
	"DISABLE_STATUS": 1,
}

func (x ENABLE_BORROW_STATUS) Enum() *ENABLE_BORROW_STATUS {
	p := new(ENABLE_BORROW_STATUS)
	*p = x
	return p
}

func (x ENABLE_BORROW_STATUS) String() string {
	return proto.EnumName(ENABLE_BORROW_STATUS_name, int32(x))
}

func (x *ENABLE_BORROW_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ENABLE_BORROW_STATUS_value, data, "ENABLE_BORROW_STATUS")
	if err != nil {
		return err
	}
	*x = ENABLE_BORROW_STATUS(value)
	return nil
}

func (ENABLE_BORROW_STATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{4}
}

type SLOTLOCKFLAG int32

const (
	SLOTLOCKFLAG_UNLOCK        SLOTLOCKFLAG = 1
	SLOTLOCKFLAG_LOCK          SLOTLOCKFLAG = 2
	SLOTLOCKFLAG_LOCK_AUTO     SLOTLOCKFLAG = 3
	SLOTLOCKFLAG_LOCK_FUSE_OWN SLOTLOCKFLAG = 5
)

var SLOTLOCKFLAG_name = map[int32]string{
	1: "UNLOCK",
	2: "LOCK",
	3: "LOCK_AUTO",
	5: "LOCK_FUSE_OWN",
}

var SLOTLOCKFLAG_value = map[string]int32{
	"UNLOCK":        1,
	"LOCK":          2,
	"LOCK_AUTO":     3,
	"LOCK_FUSE_OWN": 5,
}

func (x SLOTLOCKFLAG) Enum() *SLOTLOCKFLAG {
	p := new(SLOTLOCKFLAG)
	*p = x
	return p
}

func (x SLOTLOCKFLAG) String() string {
	return proto.EnumName(SLOTLOCKFLAG_name, int32(x))
}

func (x *SLOTLOCKFLAG) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SLOTLOCKFLAG_value, data, "SLOTLOCKFLAG")
	if err != nil {
		return err
	}
	*x = SLOTLOCKFLAG(value)
	return nil
}

func (SLOTLOCKFLAG) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{5}
}

// message SlotLock
// {
//       required SLOTLOCKFLAG lockflag=1;
// }
// 柜机动作类型枚举
type PROJECTTYPE int32

const (
	PROJECTTYPE_Y153X PROJECTTYPE = 1
	PROJECTTYPE_Y1801 PROJECTTYPE = 2
)

var PROJECTTYPE_name = map[int32]string{
	1: "Y153X",
	2: "Y1801",
}

var PROJECTTYPE_value = map[string]int32{
	"Y153X": 1,
	"Y1801": 2,
}

func (x PROJECTTYPE) Enum() *PROJECTTYPE {
	p := new(PROJECTTYPE)
	*p = x
	return p
}

func (x PROJECTTYPE) String() string {
	return proto.EnumName(PROJECTTYPE_name, int32(x))
}

func (x *PROJECTTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PROJECTTYPE_value, data, "PROJECTTYPE")
	if err != nil {
		return err
	}
	*x = PROJECTTYPE(value)
	return nil
}

func (PROJECTTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{6}
}

// 3.2.借还
// 柜机动作类型枚举
type DEVACTION int32

const (
	DEVACTION_BORROW DEVACTION = 1
	DEVACTION_RETURN DEVACTION = 2
	DEVACTION_EJECT  DEVACTION = 3
)

var DEVACTION_name = map[int32]string{
	1: "BORROW",
	2: "RETURN",
	3: "EJECT",
}

var DEVACTION_value = map[string]int32{
	"BORROW": 1,
	"RETURN": 2,
	"EJECT":  3,
}

func (x DEVACTION) Enum() *DEVACTION {
	p := new(DEVACTION)
	*p = x
	return p
}

func (x DEVACTION) String() string {
	return proto.EnumName(DEVACTION_name, int32(x))
}

func (x *DEVACTION) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DEVACTION_value, data, "DEVACTION")
	if err != nil {
		return err
	}
	*x = DEVACTION(value)
	return nil
}

func (DEVACTION) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{7}
}

type BATTERY_BORROW_RETURN_CODE int32

const (
	BATTERY_BORROW_RETURN_CODE_BBR_STATUS_OK               BATTERY_BORROW_RETURN_CODE = 0
	BATTERY_BORROW_RETURN_CODE_BBR_REQUEST_INVALID         BATTERY_BORROW_RETURN_CODE = 1
	BATTERY_BORROW_RETURN_CODE_BBR_REQUEST_REPEAT          BATTERY_BORROW_RETURN_CODE = 2
	BATTERY_BORROW_RETURN_CODE_BBR_REQUEST_NEED_WAIT       BATTERY_BORROW_RETURN_CODE = 3
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_BLANK              BATTERY_BORROW_RETURN_CODE = 4
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_BLANK          BATTERY_BORROW_RETURN_CODE = 5
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_FETCH_BACK     BATTERY_BORROW_RETURN_CODE = 6
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_FETCH_NOT_BACK BATTERY_BORROW_RETURN_CODE = 7
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_PLUGIN         BATTERY_BORROW_RETURN_CODE = 8
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_RECOGNIZE      BATTERY_BORROW_RETURN_CODE = 9
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_LOCK               BATTERY_BORROW_RETURN_CODE = 10
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FETCH              BATTERY_BORROW_RETURN_CODE = 11
	BATTERY_BORROW_RETURN_CODE_BBR_SYSTIME_NOT_SET         BATTERY_BORROW_RETURN_CODE = 14
	// 技术性错误，需要重启MCU。卡槽坏的，能明确的需要单独命名，否则直接设置为
	// 服务器记录连续发生两次，则自动锁死该卡槽
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL                              BATTERY_BORROW_RETURN_CODE = 16
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_BMS                BATTERY_BORROW_RETURN_CODE = 17
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_LED                BATTERY_BORROW_RETURN_CODE = 18
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_MOTOR              BATTERY_BORROW_RETURN_CODE = 19
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_SWITCH_DOOR        BATTERY_BORROW_RETURN_CODE = 20
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_SWITCH_CONTACT     BATTERY_BORROW_RETURN_CODE = 21
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_ELECT              BATTERY_BORROW_RETURN_CODE = 22
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_OPEN  BATTERY_BORROW_RETURN_CODE = 23
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_CLOSE BATTERY_BORROW_RETURN_CODE = 24
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_NOT_FETCH_TIMEOUT_BACK            BATTERY_BORROW_RETURN_CODE = 27
	BATTERY_BORROW_RETURN_CODE_BBR_SLOT_PUSH_FAIL                         BATTERY_BORROW_RETURN_CODE = 28
)

var BATTERY_BORROW_RETURN_CODE_name = map[int32]string{
	0:  "BBR_STATUS_OK",
	1:  "BBR_REQUEST_INVALID",
	2:  "BBR_REQUEST_REPEAT",
	3:  "BBR_REQUEST_NEED_WAIT",
	4:  "BBR_SLOT_BLANK",
	5:  "BBR_SLOT_NOT_BLANK",
	6:  "BBR_SLOT_NOT_FETCH_BACK",
	7:  "BBR_SLOT_NOT_FETCH_NOT_BACK",
	8:  "BBR_SLOT_NOT_PLUGIN",
	9:  "BBR_SLOT_NOT_RECOGNIZE",
	10: "BBR_SLOT_LOCK",
	11: "BBR_SLOT_FETCH",
	14: "BBR_SYSTIME_NOT_SET",
	16: "BBR_SLOT_FAIL",
	17: "BBR_SLOT_FAIL_MCU_ERROR_BMS",
	18: "BBR_SLOT_FAIL_MCU_ERROR_LED",
	19: "BBR_SLOT_FAIL_MCU_ERROR_MOTOR",
	20: "BBR_SLOT_FAIL_MCU_ERROR_SWITCH_DOOR",
	21: "BBR_SLOT_FAIL_MCU_ERROR_SWITCH_CONTACT",
	22: "BBR_SLOT_FAIL_MCU_ERROR_ELECT",
	23: "BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_OPEN",
	24: "BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_CLOSE",
	27: "BBR_SLOT_NOT_FETCH_TIMEOUT_BACK",
	28: "BBR_SLOT_PUSH_FAIL",
}

var BATTERY_BORROW_RETURN_CODE_value = map[string]int32{
	"BBR_STATUS_OK":                              0,
	"BBR_REQUEST_INVALID":                        1,
	"BBR_REQUEST_REPEAT":                         2,
	"BBR_REQUEST_NEED_WAIT":                      3,
	"BBR_SLOT_BLANK":                             4,
	"BBR_SLOT_NOT_BLANK":                         5,
	"BBR_SLOT_NOT_FETCH_BACK":                    6,
	"BBR_SLOT_NOT_FETCH_NOT_BACK":                7,
	"BBR_SLOT_NOT_PLUGIN":                        8,
	"BBR_SLOT_NOT_RECOGNIZE":                     9,
	"BBR_SLOT_LOCK":                              10,
	"BBR_SLOT_FETCH":                             11,
	"BBR_SYSTIME_NOT_SET":                        14,
	"BBR_SLOT_FAIL":                              16,
	"BBR_SLOT_FAIL_MCU_ERROR_BMS":                17,
	"BBR_SLOT_FAIL_MCU_ERROR_LED":                18,
	"BBR_SLOT_FAIL_MCU_ERROR_MOTOR":              19,
	"BBR_SLOT_FAIL_MCU_ERROR_SWITCH_DOOR":        20,
	"BBR_SLOT_FAIL_MCU_ERROR_SWITCH_CONTACT":     21,
	"BBR_SLOT_FAIL_MCU_ERROR_ELECT":              22,
	"BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_OPEN":  23,
	"BBR_SLOT_FAIL_MCU_ERROR_MOBILE_POWER_CLOSE": 24,
	"BBR_SLOT_NOT_FETCH_TIMEOUT_BACK":            27,
	"BBR_SLOT_PUSH_FAIL":                         28,
}

func (x BATTERY_BORROW_RETURN_CODE) Enum() *BATTERY_BORROW_RETURN_CODE {
	p := new(BATTERY_BORROW_RETURN_CODE)
	*p = x
	return p
}

func (x BATTERY_BORROW_RETURN_CODE) String() string {
	return proto.EnumName(BATTERY_BORROW_RETURN_CODE_name, int32(x))
}

func (x *BATTERY_BORROW_RETURN_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BATTERY_BORROW_RETURN_CODE_value, data, "BATTERY_BORROW_RETURN_CODE")
	if err != nil {
		return err
	}
	*x = BATTERY_BORROW_RETURN_CODE(value)
	return nil
}

func (BATTERY_BORROW_RETURN_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{8}
}

// 3.3.柜机升级
type UPGRADESTATUS int32

const (
	UPGRADESTATUS_DOWNLOAD_OK   UPGRADESTATUS = 0
	UPGRADESTATUS_DOWNLOAD_FAIL UPGRADESTATUS = 1
)

var UPGRADESTATUS_name = map[int32]string{
	0: "DOWNLOAD_OK",
	1: "DOWNLOAD_FAIL",
}

var UPGRADESTATUS_value = map[string]int32{
	"DOWNLOAD_OK":   0,
	"DOWNLOAD_FAIL": 1,
}

func (x UPGRADESTATUS) Enum() *UPGRADESTATUS {
	p := new(UPGRADESTATUS)
	*p = x
	return p
}

func (x UPGRADESTATUS) String() string {
	return proto.EnumName(UPGRADESTATUS_name, int32(x))
}

func (x *UPGRADESTATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UPGRADESTATUS_value, data, "UPGRADESTATUS")
	if err != nil {
		return err
	}
	*x = UPGRADESTATUS(value)
	return nil
}

func (UPGRADESTATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{9}
}

// 3.4.安装WiFi
// Wifi密码类型
type WIFIAUTHMODE int32

const (
	WIFIAUTHMODE_WIFIAUTHMODENONE    WIFIAUTHMODE = 0
	WIFIAUTHMODE_WIFIAUTHMODEWPA     WIFIAUTHMODE = 1
	WIFIAUTHMODE_WIFIAUTHMODEWPAPSK  WIFIAUTHMODE = 2
	WIFIAUTHMODE_WIFIAUTHMODEWPA2    WIFIAUTHMODE = 3
	WIFIAUTHMODE_WIFIAUTHMODEWPA2PSK WIFIAUTHMODE = 4
	WIFIAUTHMODE_WIFIAUTHMODESHARED  WIFIAUTHMODE = 5
)

var WIFIAUTHMODE_name = map[int32]string{
	0: "WIFIAUTHMODENONE",
	1: "WIFIAUTHMODEWPA",
	2: "WIFIAUTHMODEWPAPSK",
	3: "WIFIAUTHMODEWPA2",
	4: "WIFIAUTHMODEWPA2PSK",
	5: "WIFIAUTHMODESHARED",
}

var WIFIAUTHMODE_value = map[string]int32{
	"WIFIAUTHMODENONE":    0,
	"WIFIAUTHMODEWPA":     1,
	"WIFIAUTHMODEWPAPSK":  2,
	"WIFIAUTHMODEWPA2":    3,
	"WIFIAUTHMODEWPA2PSK": 4,
	"WIFIAUTHMODESHARED":  5,
}

func (x WIFIAUTHMODE) Enum() *WIFIAUTHMODE {
	p := new(WIFIAUTHMODE)
	*p = x
	return p
}

func (x WIFIAUTHMODE) String() string {
	return proto.EnumName(WIFIAUTHMODE_name, int32(x))
}

func (x *WIFIAUTHMODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WIFIAUTHMODE_value, data, "WIFIAUTHMODE")
	if err != nil {
		return err
	}
	*x = WIFIAUTHMODE(value)
	return nil
}

func (WIFIAUTHMODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{10}
}

// Wifi密码加密方式
type WIFIENCRYPT int32

const (
	WIFIENCRYPT_WIFIENCRYPTNONE WIFIENCRYPT = 0
	WIFIENCRYPT_WIFIENCRYPTAES  WIFIENCRYPT = 1
	WIFIENCRYPT_WIFIENCRYPTTKIP WIFIENCRYPT = 2
	WIFIENCRYPT_WIFIENCRYPTWEP  WIFIENCRYPT = 3
)

var WIFIENCRYPT_name = map[int32]string{
	0: "WIFIENCRYPTNONE",
	1: "WIFIENCRYPTAES",
	2: "WIFIENCRYPTTKIP",
	3: "WIFIENCRYPTWEP",
}

var WIFIENCRYPT_value = map[string]int32{
	"WIFIENCRYPTNONE": 0,
	"WIFIENCRYPTAES":  1,
	"WIFIENCRYPTTKIP": 2,
	"WIFIENCRYPTWEP":  3,
}

func (x WIFIENCRYPT) Enum() *WIFIENCRYPT {
	p := new(WIFIENCRYPT)
	*p = x
	return p
}

func (x WIFIENCRYPT) String() string {
	return proto.EnumName(WIFIENCRYPT_name, int32(x))
}

func (x *WIFIENCRYPT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WIFIENCRYPT_value, data, "WIFIENCRYPT")
	if err != nil {
		return err
	}
	*x = WIFIENCRYPT(value)
	return nil
}

func (WIFIENCRYPT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{11}
}

// 联网方式（0:WiFi, 1:蓝牙, 2: 2G, 3: 4G）
type CONNECTNETTYPE int32

const (
	CONNECTNETTYPE_CONNECTNETWIFI CONNECTNETTYPE = 0
	CONNECTNETTYPE_CONNECTNETBLUE CONNECTNETTYPE = 1
	CONNECTNETTYPE_CONNECTNET2G   CONNECTNETTYPE = 2
	CONNECTNETTYPE_CONNECTNET3G   CONNECTNETTYPE = 3
	CONNECTNETTYPE_CONNECTNET4G   CONNECTNETTYPE = 4
)

var CONNECTNETTYPE_name = map[int32]string{
	0: "CONNECTNETWIFI",
	1: "CONNECTNETBLUE",
	2: "CONNECTNET2G",
	3: "CONNECTNET3G",
	4: "CONNECTNET4G",
}

var CONNECTNETTYPE_value = map[string]int32{
	"CONNECTNETWIFI": 0,
	"CONNECTNETBLUE": 1,
	"CONNECTNET2G":   2,
	"CONNECTNET3G":   3,
	"CONNECTNET4G":   4,
}

func (x CONNECTNETTYPE) Enum() *CONNECTNETTYPE {
	p := new(CONNECTNETTYPE)
	*p = x
	return p
}

func (x CONNECTNETTYPE) String() string {
	return proto.EnumName(CONNECTNETTYPE_name, int32(x))
}

func (x *CONNECTNETTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CONNECTNETTYPE_value, data, "CONNECTNETTYPE")
	if err != nil {
		return err
	}
	*x = CONNECTNETTYPE(value)
	return nil
}

func (CONNECTNETTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{12}
}

type CURRENTNETSTATE int32

const (
	CURRENTNETSTATE_CURRENTNETDISABLE CURRENTNETSTATE = 1
	CURRENTNETSTATE_CURRENTNETENABLE  CURRENTNETSTATE = 2
)

var CURRENTNETSTATE_name = map[int32]string{
	1: "CURRENTNETDISABLE",
	2: "CURRENTNETENABLE",
}

var CURRENTNETSTATE_value = map[string]int32{
	"CURRENTNETDISABLE": 1,
	"CURRENTNETENABLE":  2,
}

func (x CURRENTNETSTATE) Enum() *CURRENTNETSTATE {
	p := new(CURRENTNETSTATE)
	*p = x
	return p
}

func (x CURRENTNETSTATE) String() string {
	return proto.EnumName(CURRENTNETSTATE_name, int32(x))
}

func (x *CURRENTNETSTATE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CURRENTNETSTATE_value, data, "CURRENTNETSTATE")
	if err != nil {
		return err
	}
	*x = CURRENTNETSTATE(value)
	return nil
}

func (CURRENTNETSTATE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{13}
}

type REALPLMN int32

const (
	REALPLMN_REALPLMNMOBILEGSM REALPLMN = 46000
	REALPLMN_REALPLMNUNICOMGSM REALPLMN = 46001
	REALPLMN_REALPLMNMOBILETD  REALPLMN = 46002
	REALPLMN_REALPLMNCTCCDMA   REALPLMN = 46003
	REALPLMN_REALPLMNCTC4G     REALPLMN = 46005
	REALPLMN_REALPLMNUNICOM4G  REALPLMN = 46006
	REALPLMN_REALPLMNMOBILE4G  REALPLMN = 46007
)

var REALPLMN_name = map[int32]string{
	46000: "REALPLMNMOBILEGSM",
	46001: "REALPLMNUNICOMGSM",
	46002: "REALPLMNMOBILETD",
	46003: "REALPLMNCTCCDMA",
	46005: "REALPLMNCTC4G",
	46006: "REALPLMNUNICOM4G",
	46007: "REALPLMNMOBILE4G",
}

var REALPLMN_value = map[string]int32{
	"REALPLMNMOBILEGSM": 46000,
	"REALPLMNUNICOMGSM": 46001,
	"REALPLMNMOBILETD":  46002,
	"REALPLMNCTCCDMA":   46003,
	"REALPLMNCTC4G":     46005,
	"REALPLMNUNICOM4G":  46006,
	"REALPLMNMOBILE4G":  46007,
}

func (x REALPLMN) Enum() *REALPLMN {
	p := new(REALPLMN)
	*p = x
	return p
}

func (x REALPLMN) String() string {
	return proto.EnumName(REALPLMN_name, int32(x))
}

func (x *REALPLMN) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(REALPLMN_value, data, "REALPLMN")
	if err != nil {
		return err
	}
	*x = REALPLMN(value)
	return nil
}

func (REALPLMN) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{14}
}

// server 返回状态码 0网路配置失败,1网路配置成功
type RESCODE int32

const (
	RESCODE_RESCODEFAIL RESCODE = 0
	RESCODE_RESCODESUC  RESCODE = 1
)

var RESCODE_name = map[int32]string{
	0: "RESCODEFAIL",
	1: "RESCODESUC",
}

var RESCODE_value = map[string]int32{
	"RESCODEFAIL": 0,
	"RESCODESUC":  1,
}

func (x RESCODE) Enum() *RESCODE {
	p := new(RESCODE)
	*p = x
	return p
}

func (x RESCODE) String() string {
	return proto.EnumName(RESCODE_name, int32(x))
}

func (x *RESCODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RESCODE_value, data, "RESCODE")
	if err != nil {
		return err
	}
	*x = RESCODE(value)
	return nil
}

func (RESCODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{15}
}

type InstallBatteryOpenCode int32

const (
	InstallBatteryOpenCode_OPENCODEOK   InstallBatteryOpenCode = 1
	InstallBatteryOpenCode_OPENCODEFULL InstallBatteryOpenCode = 2
	InstallBatteryOpenCode_OPENCODEFAIL InstallBatteryOpenCode = 3
)

var InstallBatteryOpenCode_name = map[int32]string{
	1: "OPENCODEOK",
	2: "OPENCODEFULL",
	3: "OPENCODEFAIL",
}

var InstallBatteryOpenCode_value = map[string]int32{
	"OPENCODEOK":   1,
	"OPENCODEFULL": 2,
	"OPENCODEFAIL": 3,
}

func (x InstallBatteryOpenCode) Enum() *InstallBatteryOpenCode {
	p := new(InstallBatteryOpenCode)
	*p = x
	return p
}

func (x InstallBatteryOpenCode) String() string {
	return proto.EnumName(InstallBatteryOpenCode_name, int32(x))
}

func (x *InstallBatteryOpenCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InstallBatteryOpenCode_value, data, "InstallBatteryOpenCode")
	if err != nil {
		return err
	}
	*x = InstallBatteryOpenCode(value)
	return nil
}

func (InstallBatteryOpenCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{16}
}

type InstallBatteryResCode int32

const (
	InstallBatteryResCode_RESCODEOK        InstallBatteryResCode = 1
	InstallBatteryResCode_RESCODENOTPLUGIN InstallBatteryResCode = 2
	InstallBatteryResCode_RESCODEERROR     InstallBatteryResCode = 3
)

var InstallBatteryResCode_name = map[int32]string{
	1: "RESCODEOK",
	2: "RESCODENOTPLUGIN",
	3: "RESCODEERROR",
}

var InstallBatteryResCode_value = map[string]int32{
	"RESCODEOK":        1,
	"RESCODENOTPLUGIN": 2,
	"RESCODEERROR":     3,
}

func (x InstallBatteryResCode) Enum() *InstallBatteryResCode {
	p := new(InstallBatteryResCode)
	*p = x
	return p
}

func (x InstallBatteryResCode) String() string {
	return proto.EnumName(InstallBatteryResCode_name, int32(x))
}

func (x *InstallBatteryResCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InstallBatteryResCode_value, data, "InstallBatteryResCode")
	if err != nil {
		return err
	}
	*x = InstallBatteryResCode(value)
	return nil
}

func (InstallBatteryResCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{17}
}

type DEVICE_OFFLINE_STATUS_CODE int32

const (
	DEVICE_OFFLINE_STATUS_CODE_DOS_SOFT_RESET DEVICE_OFFLINE_STATUS_CODE = 1
	DEVICE_OFFLINE_STATUS_CODE_DOS_HARD_RESET DEVICE_OFFLINE_STATUS_CODE = 2
)

var DEVICE_OFFLINE_STATUS_CODE_name = map[int32]string{
	1: "DOS_SOFT_RESET",
	2: "DOS_HARD_RESET",
}

var DEVICE_OFFLINE_STATUS_CODE_value = map[string]int32{
	"DOS_SOFT_RESET": 1,
	"DOS_HARD_RESET": 2,
}

func (x DEVICE_OFFLINE_STATUS_CODE) Enum() *DEVICE_OFFLINE_STATUS_CODE {
	p := new(DEVICE_OFFLINE_STATUS_CODE)
	*p = x
	return p
}

func (x DEVICE_OFFLINE_STATUS_CODE) String() string {
	return proto.EnumName(DEVICE_OFFLINE_STATUS_CODE_name, int32(x))
}

func (x *DEVICE_OFFLINE_STATUS_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DEVICE_OFFLINE_STATUS_CODE_value, data, "DEVICE_OFFLINE_STATUS_CODE")
	if err != nil {
		return err
	}
	*x = DEVICE_OFFLINE_STATUS_CODE(value)
	return nil
}

func (DEVICE_OFFLINE_STATUS_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{18}
}

type DEVICE_REBOOT_CODE int32

const (
	DEVICE_REBOOT_CODE_DRC_UPGRADE_REBOOT DEVICE_REBOOT_CODE = 1
)

var DEVICE_REBOOT_CODE_name = map[int32]string{
	1: "DRC_UPGRADE_REBOOT",
}

var DEVICE_REBOOT_CODE_value = map[string]int32{
	"DRC_UPGRADE_REBOOT": 1,
}

func (x DEVICE_REBOOT_CODE) Enum() *DEVICE_REBOOT_CODE {
	p := new(DEVICE_REBOOT_CODE)
	*p = x
	return p
}

func (x DEVICE_REBOOT_CODE) String() string {
	return proto.EnumName(DEVICE_REBOOT_CODE_name, int32(x))
}

func (x *DEVICE_REBOOT_CODE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DEVICE_REBOOT_CODE_value, data, "DEVICE_REBOOT_CODE")
	if err != nil {
		return err
	}
	*x = DEVICE_REBOOT_CODE(value)
	return nil
}

func (DEVICE_REBOOT_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{19}
}

// 大柜机专用指令部份
type MaterialType int32

const (
	MaterialType_IMG   MaterialType = 1
	MaterialType_VIDEO MaterialType = 2
)

var MaterialType_name = map[int32]string{
	1: "IMG",
	2: "VIDEO",
}

var MaterialType_value = map[string]int32{
	"IMG":   1,
	"VIDEO": 2,
}

func (x MaterialType) Enum() *MaterialType {
	p := new(MaterialType)
	*p = x
	return p
}

func (x MaterialType) String() string {
	return proto.EnumName(MaterialType_name, int32(x))
}

func (x *MaterialType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MaterialType_value, data, "MaterialType")
	if err != nil {
		return err
	}
	*x = MaterialType(value)
	return nil
}

func (MaterialType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{20}
}

// 素材状态
type AdvScheduleResCode int32

const (
	AdvScheduleResCode_RESCODE_RECIVE  AdvScheduleResCode = 1
	AdvScheduleResCode_RESCOD_DOWNLOAD AdvScheduleResCode = 2
	AdvScheduleResCode_RESCOD_PLAYED   AdvScheduleResCode = 3
)

var AdvScheduleResCode_name = map[int32]string{
	1: "RESCODE_RECIVE",
	2: "RESCOD_DOWNLOAD",
	3: "RESCOD_PLAYED",
}

var AdvScheduleResCode_value = map[string]int32{
	"RESCODE_RECIVE":  1,
	"RESCOD_DOWNLOAD": 2,
	"RESCOD_PLAYED":   3,
}

func (x AdvScheduleResCode) Enum() *AdvScheduleResCode {
	p := new(AdvScheduleResCode)
	*p = x
	return p
}

func (x AdvScheduleResCode) String() string {
	return proto.EnumName(AdvScheduleResCode_name, int32(x))
}

func (x *AdvScheduleResCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdvScheduleResCode_value, data, "AdvScheduleResCode")
	if err != nil {
		return err
	}
	*x = AdvScheduleResCode(value)
	return nil
}

func (AdvScheduleResCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{21}
}

// 1.2.模板
// 消息模版
type CMsg struct {
	MsgHead                   *CMsHead                       `protobuf:"bytes,1,req,name=msgHead" json:"msgHead,omitempty"`
	DeviceStatusBody          *CMsgBodyDeviceStatus          `protobuf:"bytes,2,opt,name=deviceStatusBody" json:"deviceStatusBody,omitempty"`
	OpenDeviceBody            *CMsgBodyDeviceOpen            `protobuf:"bytes,3,opt,name=openDeviceBody" json:"openDeviceBody,omitempty"`
	OpenDeviceAckBody         *CMsgBodyDeviceAck             `protobuf:"bytes,4,opt,name=openDeviceAckBody" json:"openDeviceAckBody,omitempty"`
	WifiSetupInfoBody         *CMsgBodyWifiSetupInfo         `protobuf:"bytes,5,opt,name=wifiSetupInfoBody" json:"wifiSetupInfoBody,omitempty"`
	WifiSetupAckBody          *CMsgBodyWifiSetupAck          `protobuf:"bytes,6,opt,name=wifiSetupAckBody" json:"wifiSetupAckBody,omitempty"`
	Upgrade                   *CMsgBodyUpgrade               `protobuf:"bytes,7,opt,name=upgrade" json:"upgrade,omitempty"`
	InstallBatteryResult      *CMsgBodyInstallBatteryResult  `protobuf:"bytes,8,opt,name=installBatteryResult" json:"installBatteryResult,omitempty"`
	GetBatteryPasswordBody    *CMsgBodyGetBatteryPassword    `protobuf:"bytes,9,opt,name=getBatteryPasswordBody" json:"getBatteryPasswordBody,omitempty"`
	GetBatteryPasswordAckBody *CMsgBodyGetBatteryPasswordAck `protobuf:"bytes,10,opt,name=getBatteryPasswordAckBody" json:"getBatteryPasswordAckBody,omitempty"`
	UpgradeAck                *CMsgBodyUpgradeAck            `protobuf:"bytes,11,opt,name=upgradeAck" json:"upgradeAck,omitempty"`
	UpdateDeviceBody          *CMsgBodyDeviceUpdate          `protobuf:"bytes,12,opt,name=updateDeviceBody" json:"updateDeviceBody,omitempty"`
	GsmSetupInfoBody          *CMsgBodyGsmSetupInfo          `protobuf:"bytes,13,opt,name=gsmSetupInfoBody" json:"gsmSetupInfoBody,omitempty"`
	GsmSetupAckBody           *CMsgBodyGsmSetupAck           `protobuf:"bytes,14,opt,name=gsmSetupAckBody" json:"gsmSetupAckBody,omitempty"`
	GsmFlowInfoBody           *CMsgBodyGsmFlowInfo           `protobuf:"bytes,15,opt,name=gsmFlowInfoBody" json:"gsmFlowInfoBody,omitempty"`
	GsmFlowAckBody            *CMsgBodyGsmFlowAck            `protobuf:"bytes,16,opt,name=gsmFlowAckBody" json:"gsmFlowAckBody,omitempty"`
	BackBatteryBody           *CMsgBodyBatteryBack           `protobuf:"bytes,17,opt,name=backBatteryBody" json:"backBatteryBody,omitempty"`
	ClearwifiInfoBody         *CMsgBodyWifiClearInfo         `protobuf:"bytes,18,opt,name=clearwifiInfoBody" json:"clearwifiInfoBody,omitempty"`
	ClearWifiAckBody          *CMsgBodyWifiClearAck          `protobuf:"bytes,19,opt,name=clearWifiAckBody" json:"clearWifiAckBody,omitempty"`
	OfflineStatusBody         *CMsgBodyDeviceOfflineStatus   `protobuf:"bytes,20,opt,name=OfflineStatusBody" json:"OfflineStatusBody,omitempty"`
	OfflineAckBody            *CMsgBodyDeviceOfflineAck      `protobuf:"bytes,21,opt,name=OfflineAckBody" json:"OfflineAckBody,omitempty"`
	RebootSysBody             *CMsgBodyDeviceRebootSys       `protobuf:"bytes,22,opt,name=rebootSysBody" json:"rebootSysBody,omitempty"`
	RebootSysAckBody          *CMsgBodyDeviceRebootSysAck    `protobuf:"bytes,23,opt,name=rebootSysAckBody" json:"rebootSysAckBody,omitempty"`
	SmartLinkAuthReq          *CMsgBodySmartLinkAuthReq      `protobuf:"bytes,26,opt,name=smartLinkAuthReq" json:"smartLinkAuthReq,omitempty"`
	SmartLinkAuthAck          *CMsgBodySmartLinkAuthAck      `protobuf:"bytes,27,opt,name=smartLinkAuthAck" json:"smartLinkAuthAck,omitempty"`
	SmartLinkResult           *CMsgBodySmartLinkResult       `protobuf:"bytes,28,opt,name=smartLinkResult" json:"smartLinkResult,omitempty"`
	LockSlotBody              *CMsgBodySlotLock              `protobuf:"bytes,29,opt,name=lockSlotBody" json:"lockSlotBody,omitempty"`
	LockSlotAckBody           *CMsgBodySlotLockAck           `protobuf:"bytes,30,opt,name=lockSlotAckBody" json:"lockSlotAckBody,omitempty"`
	TipsImagesBody            *CMsgBodyTipsImages            `protobuf:"bytes,31,opt,name=tipsImagesBody" json:"tipsImagesBody,omitempty"`
	TipsImagesReportBody      *CMsgBodyTipsImagesReport      `protobuf:"bytes,32,opt,name=tipsImagesReportBody" json:"tipsImagesReportBody,omitempty"`
	HttpDnsUpdateBody         *CMsgBodyHttpDnsUpdate         `protobuf:"bytes,33,opt,name=httpDnsUpdateBody" json:"httpDnsUpdateBody,omitempty"`
	HttpDnsUpdateAckBody      *CMsgBodyHttpDnsUpdateAck      `protobuf:"bytes,34,opt,name=httpDnsUpdateAckBody" json:"httpDnsUpdateAckBody,omitempty"`
	GetServerTimeReq          *CMsgBodyGetServerTimeReq      `protobuf:"bytes,41,opt,name=getServerTimeReq" json:"getServerTimeReq,omitempty"`
	GetServerTimeAck          *CMsgBodyGetServerTimeAck      `protobuf:"bytes,42,opt,name=getServerTimeAck" json:"getServerTimeAck,omitempty"`
	GetBattVersionReq         *CMsgBodyGetBattVersionReq     `protobuf:"bytes,43,opt,name=getBattVersionReq" json:"getBattVersionReq,omitempty"`
	GetBattVersionAck         *CMsgBodyGetBattVersionAck     `protobuf:"bytes,44,opt,name=getBattVersionAck" json:"getBattVersionAck,omitempty"`
	BattVersionAckBody        *CMsgBodyBattVersionAck        `protobuf:"bytes,45,opt,name=battVersionAckBody" json:"battVersionAckBody,omitempty"`
	AdvScheduleListBody       *CMsgBodyAdvScheduleList       `protobuf:"bytes,1001,opt,name=advScheduleListBody" json:"advScheduleListBody,omitempty"`
	AdvScheduleListAck        *CMsgBodyAdvScheduleListReport `protobuf:"bytes,1002,opt,name=advScheduleListAck" json:"advScheduleListAck,omitempty"`
	AdvPlayCount              *CMsgBodyAdvPlayCount          `protobuf:"bytes,1003,opt,name=advPlayCount" json:"advPlayCount,omitempty"`
	AdvPlayCountAck           *CMsgBodyAdvPlayCountAck       `protobuf:"bytes,1004,opt,name=advPlayCountAck" json:"advPlayCountAck,omitempty"`
	ExtInfoRequest            *CMsgBodyExtInfoRequest        `protobuf:"bytes,1022,opt,name=extInfoRequest" json:"extInfoRequest,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                       `json:"-"`
	XXX_unrecognized          []byte                         `json:"-"`
	XXX_sizecache             int32                          `json:"-"`
}

func (m *CMsg) Reset()         { *m = CMsg{} }
func (m *CMsg) String() string { return proto.CompactTextString(m) }
func (*CMsg) ProtoMessage()    {}
func (*CMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{0}
}

func (m *CMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsg.Unmarshal(m, b)
}
func (m *CMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsg.Marshal(b, m, deterministic)
}
func (m *CMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsg.Merge(m, src)
}
func (m *CMsg) XXX_Size() int {
	return xxx_messageInfo_CMsg.Size(m)
}
func (m *CMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CMsg proto.InternalMessageInfo

func (m *CMsg) GetMsgHead() *CMsHead {
	if m != nil {
		return m.MsgHead
	}
	return nil
}

func (m *CMsg) GetDeviceStatusBody() *CMsgBodyDeviceStatus {
	if m != nil {
		return m.DeviceStatusBody
	}
	return nil
}

func (m *CMsg) GetOpenDeviceBody() *CMsgBodyDeviceOpen {
	if m != nil {
		return m.OpenDeviceBody
	}
	return nil
}

func (m *CMsg) GetOpenDeviceAckBody() *CMsgBodyDeviceAck {
	if m != nil {
		return m.OpenDeviceAckBody
	}
	return nil
}

func (m *CMsg) GetWifiSetupInfoBody() *CMsgBodyWifiSetupInfo {
	if m != nil {
		return m.WifiSetupInfoBody
	}
	return nil
}

func (m *CMsg) GetWifiSetupAckBody() *CMsgBodyWifiSetupAck {
	if m != nil {
		return m.WifiSetupAckBody
	}
	return nil
}

func (m *CMsg) GetUpgrade() *CMsgBodyUpgrade {
	if m != nil {
		return m.Upgrade
	}
	return nil
}

func (m *CMsg) GetInstallBatteryResult() *CMsgBodyInstallBatteryResult {
	if m != nil {
		return m.InstallBatteryResult
	}
	return nil
}

func (m *CMsg) GetGetBatteryPasswordBody() *CMsgBodyGetBatteryPassword {
	if m != nil {
		return m.GetBatteryPasswordBody
	}
	return nil
}

func (m *CMsg) GetGetBatteryPasswordAckBody() *CMsgBodyGetBatteryPasswordAck {
	if m != nil {
		return m.GetBatteryPasswordAckBody
	}
	return nil
}

func (m *CMsg) GetUpgradeAck() *CMsgBodyUpgradeAck {
	if m != nil {
		return m.UpgradeAck
	}
	return nil
}

func (m *CMsg) GetUpdateDeviceBody() *CMsgBodyDeviceUpdate {
	if m != nil {
		return m.UpdateDeviceBody
	}
	return nil
}

func (m *CMsg) GetGsmSetupInfoBody() *CMsgBodyGsmSetupInfo {
	if m != nil {
		return m.GsmSetupInfoBody
	}
	return nil
}

func (m *CMsg) GetGsmSetupAckBody() *CMsgBodyGsmSetupAck {
	if m != nil {
		return m.GsmSetupAckBody
	}
	return nil
}

func (m *CMsg) GetGsmFlowInfoBody() *CMsgBodyGsmFlowInfo {
	if m != nil {
		return m.GsmFlowInfoBody
	}
	return nil
}

func (m *CMsg) GetGsmFlowAckBody() *CMsgBodyGsmFlowAck {
	if m != nil {
		return m.GsmFlowAckBody
	}
	return nil
}

func (m *CMsg) GetBackBatteryBody() *CMsgBodyBatteryBack {
	if m != nil {
		return m.BackBatteryBody
	}
	return nil
}

func (m *CMsg) GetClearwifiInfoBody() *CMsgBodyWifiClearInfo {
	if m != nil {
		return m.ClearwifiInfoBody
	}
	return nil
}

func (m *CMsg) GetClearWifiAckBody() *CMsgBodyWifiClearAck {
	if m != nil {
		return m.ClearWifiAckBody
	}
	return nil
}

func (m *CMsg) GetOfflineStatusBody() *CMsgBodyDeviceOfflineStatus {
	if m != nil {
		return m.OfflineStatusBody
	}
	return nil
}

func (m *CMsg) GetOfflineAckBody() *CMsgBodyDeviceOfflineAck {
	if m != nil {
		return m.OfflineAckBody
	}
	return nil
}

func (m *CMsg) GetRebootSysBody() *CMsgBodyDeviceRebootSys {
	if m != nil {
		return m.RebootSysBody
	}
	return nil
}

func (m *CMsg) GetRebootSysAckBody() *CMsgBodyDeviceRebootSysAck {
	if m != nil {
		return m.RebootSysAckBody
	}
	return nil
}

func (m *CMsg) GetSmartLinkAuthReq() *CMsgBodySmartLinkAuthReq {
	if m != nil {
		return m.SmartLinkAuthReq
	}
	return nil
}

func (m *CMsg) GetSmartLinkAuthAck() *CMsgBodySmartLinkAuthAck {
	if m != nil {
		return m.SmartLinkAuthAck
	}
	return nil
}

func (m *CMsg) GetSmartLinkResult() *CMsgBodySmartLinkResult {
	if m != nil {
		return m.SmartLinkResult
	}
	return nil
}

func (m *CMsg) GetLockSlotBody() *CMsgBodySlotLock {
	if m != nil {
		return m.LockSlotBody
	}
	return nil
}

func (m *CMsg) GetLockSlotAckBody() *CMsgBodySlotLockAck {
	if m != nil {
		return m.LockSlotAckBody
	}
	return nil
}

func (m *CMsg) GetTipsImagesBody() *CMsgBodyTipsImages {
	if m != nil {
		return m.TipsImagesBody
	}
	return nil
}

func (m *CMsg) GetTipsImagesReportBody() *CMsgBodyTipsImagesReport {
	if m != nil {
		return m.TipsImagesReportBody
	}
	return nil
}

func (m *CMsg) GetHttpDnsUpdateBody() *CMsgBodyHttpDnsUpdate {
	if m != nil {
		return m.HttpDnsUpdateBody
	}
	return nil
}

func (m *CMsg) GetHttpDnsUpdateAckBody() *CMsgBodyHttpDnsUpdateAck {
	if m != nil {
		return m.HttpDnsUpdateAckBody
	}
	return nil
}

func (m *CMsg) GetGetServerTimeReq() *CMsgBodyGetServerTimeReq {
	if m != nil {
		return m.GetServerTimeReq
	}
	return nil
}

func (m *CMsg) GetGetServerTimeAck() *CMsgBodyGetServerTimeAck {
	if m != nil {
		return m.GetServerTimeAck
	}
	return nil
}

func (m *CMsg) GetGetBattVersionReq() *CMsgBodyGetBattVersionReq {
	if m != nil {
		return m.GetBattVersionReq
	}
	return nil
}

func (m *CMsg) GetGetBattVersionAck() *CMsgBodyGetBattVersionAck {
	if m != nil {
		return m.GetBattVersionAck
	}
	return nil
}

func (m *CMsg) GetBattVersionAckBody() *CMsgBodyBattVersionAck {
	if m != nil {
		return m.BattVersionAckBody
	}
	return nil
}

func (m *CMsg) GetAdvScheduleListBody() *CMsgBodyAdvScheduleList {
	if m != nil {
		return m.AdvScheduleListBody
	}
	return nil
}

func (m *CMsg) GetAdvScheduleListAck() *CMsgBodyAdvScheduleListReport {
	if m != nil {
		return m.AdvScheduleListAck
	}
	return nil
}

func (m *CMsg) GetAdvPlayCount() *CMsgBodyAdvPlayCount {
	if m != nil {
		return m.AdvPlayCount
	}
	return nil
}

func (m *CMsg) GetAdvPlayCountAck() *CMsgBodyAdvPlayCountAck {
	if m != nil {
		return m.AdvPlayCountAck
	}
	return nil
}

func (m *CMsg) GetExtInfoRequest() *CMsgBodyExtInfoRequest {
	if m != nil {
		return m.ExtInfoRequest
	}
	return nil
}

// 消息头
type CMsHead struct {
	Cmd                  *CMD     `protobuf:"varint,1,req,name=cmd,enum=msginfo.CMD" json:"cmd,omitempty"`
	Version              *string  `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Tranid               *string  `protobuf:"bytes,3,opt,name=tranid" json:"tranid,omitempty"`
	Groupid              *int32   `protobuf:"varint,4,opt,name=groupid" json:"groupid,omitempty"`
	Errcode              *int32   `protobuf:"varint,5,opt,name=errcode" json:"errcode,omitempty"`
	HeartBeatFlag        *bool    `protobuf:"varint,6,opt,name=heart_beat_flag,json=heartBeatFlag" json:"heart_beat_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsHead) Reset()         { *m = CMsHead{} }
func (m *CMsHead) String() string { return proto.CompactTextString(m) }
func (*CMsHead) ProtoMessage()    {}
func (*CMsHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{1}
}

func (m *CMsHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsHead.Unmarshal(m, b)
}
func (m *CMsHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsHead.Marshal(b, m, deterministic)
}
func (m *CMsHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsHead.Merge(m, src)
}
func (m *CMsHead) XXX_Size() int {
	return xxx_messageInfo_CMsHead.Size(m)
}
func (m *CMsHead) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsHead.DiscardUnknown(m)
}

var xxx_messageInfo_CMsHead proto.InternalMessageInfo

func (m *CMsHead) GetCmd() CMD {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return CMD_STATUSREQ
}

func (m *CMsHead) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *CMsHead) GetTranid() string {
	if m != nil && m.Tranid != nil {
		return *m.Tranid
	}
	return ""
}

func (m *CMsHead) GetGroupid() int32 {
	if m != nil && m.Groupid != nil {
		return *m.Groupid
	}
	return 0
}

func (m *CMsHead) GetErrcode() int32 {
	if m != nil && m.Errcode != nil {
		return *m.Errcode
	}
	return 0
}

func (m *CMsHead) GetHeartBeatFlag() bool {
	if m != nil && m.HeartBeatFlag != nil {
		return *m.HeartBeatFlag
	}
	return false
}

type Slot struct {
	Num                  *int32                `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	Status               *HEART_BEAT_SLOT_CODE `protobuf:"varint,2,req,name=status,enum=msginfo.HEART_BEAT_SLOT_CODE" json:"status,omitempty"`
	Batterysn            *string               `protobuf:"bytes,3,opt,name=batterysn" json:"batterysn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Slot) Reset()         { *m = Slot{} }
func (m *Slot) String() string { return proto.CompactTextString(m) }
func (*Slot) ProtoMessage()    {}
func (*Slot) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{2}
}

func (m *Slot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slot.Unmarshal(m, b)
}
func (m *Slot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slot.Marshal(b, m, deterministic)
}
func (m *Slot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slot.Merge(m, src)
}
func (m *Slot) XXX_Size() int {
	return xxx_messageInfo_Slot.Size(m)
}
func (m *Slot) XXX_DiscardUnknown() {
	xxx_messageInfo_Slot.DiscardUnknown(m)
}

var xxx_messageInfo_Slot proto.InternalMessageInfo

func (m *Slot) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *Slot) GetStatus() HEART_BEAT_SLOT_CODE {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return HEART_BEAT_SLOT_CODE_HBS_STATUS_OK
}

func (m *Slot) GetBatterysn() string {
	if m != nil && m.Batterysn != nil {
		return *m.Batterysn
	}
	return ""
}

// 2.2.电源
type Battery struct {
	Batterysn            *string                  `protobuf:"bytes,1,req,name=batterysn" json:"batterysn,omitempty"`
	Temprature           *float32                 `protobuf:"fixed32,2,req,name=temprature" json:"temprature,omitempty"`
	Voltage              *int32                   `protobuf:"varint,3,req,name=voltage" json:"voltage,omitempty"`
	FullChargeCapacity   *int32                   `protobuf:"varint,4,req,name=fullChargeCapacity" json:"fullChargeCapacity,omitempty"`
	RemainingCapacity    *int32                   `protobuf:"varint,5,req,name=remainingCapacity" json:"remainingCapacity,omitempty"`
	AverageCurrent       *int32                   `protobuf:"varint,6,req,name=averageCurrent" json:"averageCurrent,omitempty"`
	CycleCount           *int32                   `protobuf:"varint,7,req,name=cycleCount" json:"cycleCount,omitempty"`
	BmsSafetyStatus      *int32                   `protobuf:"varint,8,req,name=bmsSafetyStatus" json:"bmsSafetyStatus,omitempty"`
	BmsFlags             *int32                   `protobuf:"varint,9,req,name=bmsFlags" json:"bmsFlags,omitempty"`
	Status               *HEART_BEAT_BATTERY_CODE `protobuf:"varint,10,req,name=status,enum=msginfo.HEART_BEAT_BATTERY_CODE" json:"status,omitempty"`
	EnableStatus         *ENABLE_BORROW_STATUS    `protobuf:"varint,11,req,name=enableStatus,enum=msginfo.ENABLE_BORROW_STATUS" json:"enableStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Battery) Reset()         { *m = Battery{} }
func (m *Battery) String() string { return proto.CompactTextString(m) }
func (*Battery) ProtoMessage()    {}
func (*Battery) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{3}
}

func (m *Battery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Battery.Unmarshal(m, b)
}
func (m *Battery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Battery.Marshal(b, m, deterministic)
}
func (m *Battery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Battery.Merge(m, src)
}
func (m *Battery) XXX_Size() int {
	return xxx_messageInfo_Battery.Size(m)
}
func (m *Battery) XXX_DiscardUnknown() {
	xxx_messageInfo_Battery.DiscardUnknown(m)
}

var xxx_messageInfo_Battery proto.InternalMessageInfo

func (m *Battery) GetBatterysn() string {
	if m != nil && m.Batterysn != nil {
		return *m.Batterysn
	}
	return ""
}

func (m *Battery) GetTemprature() float32 {
	if m != nil && m.Temprature != nil {
		return *m.Temprature
	}
	return 0
}

func (m *Battery) GetVoltage() int32 {
	if m != nil && m.Voltage != nil {
		return *m.Voltage
	}
	return 0
}

func (m *Battery) GetFullChargeCapacity() int32 {
	if m != nil && m.FullChargeCapacity != nil {
		return *m.FullChargeCapacity
	}
	return 0
}

func (m *Battery) GetRemainingCapacity() int32 {
	if m != nil && m.RemainingCapacity != nil {
		return *m.RemainingCapacity
	}
	return 0
}

func (m *Battery) GetAverageCurrent() int32 {
	if m != nil && m.AverageCurrent != nil {
		return *m.AverageCurrent
	}
	return 0
}

func (m *Battery) GetCycleCount() int32 {
	if m != nil && m.CycleCount != nil {
		return *m.CycleCount
	}
	return 0
}

func (m *Battery) GetBmsSafetyStatus() int32 {
	if m != nil && m.BmsSafetyStatus != nil {
		return *m.BmsSafetyStatus
	}
	return 0
}

func (m *Battery) GetBmsFlags() int32 {
	if m != nil && m.BmsFlags != nil {
		return *m.BmsFlags
	}
	return 0
}

func (m *Battery) GetStatus() HEART_BEAT_BATTERY_CODE {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return HEART_BEAT_BATTERY_CODE_HBB_STATUS_OK
}

func (m *Battery) GetEnableStatus() ENABLE_BORROW_STATUS {
	if m != nil && m.EnableStatus != nil {
		return *m.EnableStatus
	}
	return ENABLE_BORROW_STATUS_ENABLE_STATUS
}

// 2.3.柜机
type Device struct {
	Deviceid              *string                 `protobuf:"bytes,1,req,name=deviceid" json:"deviceid,omitempty"`
	ArmTemprature         *float32                `protobuf:"fixed32,2,opt,name=armTemprature" json:"armTemprature,omitempty"`
	EnvironmentTemprature *float32                `protobuf:"fixed32,3,opt,name=environmentTemprature" json:"environmentTemprature,omitempty"`
	SoftwareVersion       *string                 `protobuf:"bytes,4,opt,name=softwareVersion" json:"softwareVersion,omitempty"`
	IpAddr                *string                 `protobuf:"bytes,5,opt,name=ipAddr" json:"ipAddr,omitempty"`
	Status                *HEART_BEAT_DEVICE_CODE `protobuf:"varint,6,req,name=status,enum=msginfo.HEART_BEAT_DEVICE_CODE" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{4}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *Device) GetArmTemprature() float32 {
	if m != nil && m.ArmTemprature != nil {
		return *m.ArmTemprature
	}
	return 0
}

func (m *Device) GetEnvironmentTemprature() float32 {
	if m != nil && m.EnvironmentTemprature != nil {
		return *m.EnvironmentTemprature
	}
	return 0
}

func (m *Device) GetSoftwareVersion() string {
	if m != nil && m.SoftwareVersion != nil {
		return *m.SoftwareVersion
	}
	return ""
}

func (m *Device) GetIpAddr() string {
	if m != nil && m.IpAddr != nil {
		return *m.IpAddr
	}
	return ""
}

func (m *Device) GetStatus() HEART_BEAT_DEVICE_CODE {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return HEART_BEAT_DEVICE_CODE_HBD_STATUS_OK
}

// 广告屏
type J182J_Device struct {
	Deviceid             *string  `protobuf:"bytes,1,req,name=deviceid" json:"deviceid,omitempty"`
	SoftwareVersion      *string  `protobuf:"bytes,2,opt,name=softwareVersion" json:"softwareVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *J182J_Device) Reset()         { *m = J182J_Device{} }
func (m *J182J_Device) String() string { return proto.CompactTextString(m) }
func (*J182J_Device) ProtoMessage()    {}
func (*J182J_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{5}
}

func (m *J182J_Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_J182J_Device.Unmarshal(m, b)
}
func (m *J182J_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_J182J_Device.Marshal(b, m, deterministic)
}
func (m *J182J_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_J182J_Device.Merge(m, src)
}
func (m *J182J_Device) XXX_Size() int {
	return xxx_messageInfo_J182J_Device.Size(m)
}
func (m *J182J_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_J182J_Device.DiscardUnknown(m)
}

var xxx_messageInfo_J182J_Device proto.InternalMessageInfo

func (m *J182J_Device) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *J182J_Device) GetSoftwareVersion() string {
	if m != nil && m.SoftwareVersion != nil {
		return *m.SoftwareVersion
	}
	return ""
}

type Extended struct {
	Type                 *PROJECTTYPE   `protobuf:"varint,1,opt,name=type,enum=msginfo.PROJECTTYPE" json:"type,omitempty"`
	Lockstatus           []SLOTLOCKFLAG `protobuf:"varint,2,rep,name=lockstatus,enum=msginfo.SLOTLOCKFLAG" json:"lockstatus,omitempty"`
	ActionTime           []int32        `protobuf:"varint,3,rep,name=action_time,json=actionTime" json:"action_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Extended) Reset()         { *m = Extended{} }
func (m *Extended) String() string { return proto.CompactTextString(m) }
func (*Extended) ProtoMessage()    {}
func (*Extended) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{6}
}

func (m *Extended) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Extended.Unmarshal(m, b)
}
func (m *Extended) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Extended.Marshal(b, m, deterministic)
}
func (m *Extended) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Extended.Merge(m, src)
}
func (m *Extended) XXX_Size() int {
	return xxx_messageInfo_Extended.Size(m)
}
func (m *Extended) XXX_DiscardUnknown() {
	xxx_messageInfo_Extended.DiscardUnknown(m)
}

var xxx_messageInfo_Extended proto.InternalMessageInfo

func (m *Extended) GetType() PROJECTTYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PROJECTTYPE_Y153X
}

func (m *Extended) GetLockstatus() []SLOTLOCKFLAG {
	if m != nil {
		return m.Lockstatus
	}
	return nil
}

func (m *Extended) GetActionTime() []int32 {
	if m != nil {
		return m.ActionTime
	}
	return nil
}

// 柜机状态
type CMsgBodyDeviceStatus struct {
	Device               *Device       `protobuf:"bytes,1,req,name=device" json:"device,omitempty"`
	Battery              []*Battery    `protobuf:"bytes,2,rep,name=battery" json:"battery,omitempty"`
	Slot                 []*Slot       `protobuf:"bytes,3,rep,name=slot" json:"slot,omitempty"`
	Extended             *Extended     `protobuf:"bytes,4,opt,name=extended" json:"extended,omitempty"`
	J182JDevice          *J182J_Device `protobuf:"bytes,5,opt,name=j182j_device,json=j182jDevice" json:"j182j_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgBodyDeviceStatus) Reset()         { *m = CMsgBodyDeviceStatus{} }
func (m *CMsgBodyDeviceStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceStatus) ProtoMessage()    {}
func (*CMsgBodyDeviceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{7}
}

func (m *CMsgBodyDeviceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceStatus.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceStatus.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceStatus.Merge(m, src)
}
func (m *CMsgBodyDeviceStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceStatus.Size(m)
}
func (m *CMsgBodyDeviceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceStatus proto.InternalMessageInfo

func (m *CMsgBodyDeviceStatus) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CMsgBodyDeviceStatus) GetBattery() []*Battery {
	if m != nil {
		return m.Battery
	}
	return nil
}

func (m *CMsgBodyDeviceStatus) GetSlot() []*Slot {
	if m != nil {
		return m.Slot
	}
	return nil
}

func (m *CMsgBodyDeviceStatus) GetExtended() *Extended {
	if m != nil {
		return m.Extended
	}
	return nil
}

func (m *CMsgBodyDeviceStatus) GetJ182JDevice() *J182J_Device {
	if m != nil {
		return m.J182JDevice
	}
	return nil
}

// 柜机动作
type CMsgBodyDeviceOpen struct {
	Action               *DEVACTION `protobuf:"varint,1,req,name=action,enum=msginfo.DEVACTION" json:"action,omitempty"`
	Num                  *int32     `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	Password             *string    `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
	ActionTime           *int32     `protobuf:"varint,4,opt,name=action_time,json=actionTime" json:"action_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CMsgBodyDeviceOpen) Reset()         { *m = CMsgBodyDeviceOpen{} }
func (m *CMsgBodyDeviceOpen) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceOpen) ProtoMessage()    {}
func (*CMsgBodyDeviceOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{8}
}

func (m *CMsgBodyDeviceOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceOpen.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceOpen.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceOpen.Merge(m, src)
}
func (m *CMsgBodyDeviceOpen) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceOpen.Size(m)
}
func (m *CMsgBodyDeviceOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceOpen.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceOpen proto.InternalMessageInfo

func (m *CMsgBodyDeviceOpen) GetAction() DEVACTION {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return DEVACTION_BORROW
}

func (m *CMsgBodyDeviceOpen) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CMsgBodyDeviceOpen) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgBodyDeviceOpen) GetActionTime() int32 {
	if m != nil && m.ActionTime != nil {
		return *m.ActionTime
	}
	return 0
}

type CMsgBodyBatteryBack struct {
	Deviceid             *string                     `protobuf:"bytes,1,req,name=deviceid" json:"deviceid,omitempty"`
	Num                  *int32                      `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	Batterysn            *string                     `protobuf:"bytes,3,req,name=batterysn" json:"batterysn,omitempty"`
	State                *BATTERY_BORROW_RETURN_CODE `protobuf:"varint,4,req,name=state,enum=msginfo.BATTERY_BORROW_RETURN_CODE" json:"state,omitempty"`
	ActionTime           *int32                      `protobuf:"varint,5,opt,name=action_time,json=actionTime" json:"action_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBodyBatteryBack) Reset()         { *m = CMsgBodyBatteryBack{} }
func (m *CMsgBodyBatteryBack) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyBatteryBack) ProtoMessage()    {}
func (*CMsgBodyBatteryBack) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{9}
}

func (m *CMsgBodyBatteryBack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyBatteryBack.Unmarshal(m, b)
}
func (m *CMsgBodyBatteryBack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyBatteryBack.Marshal(b, m, deterministic)
}
func (m *CMsgBodyBatteryBack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyBatteryBack.Merge(m, src)
}
func (m *CMsgBodyBatteryBack) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyBatteryBack.Size(m)
}
func (m *CMsgBodyBatteryBack) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyBatteryBack.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyBatteryBack proto.InternalMessageInfo

func (m *CMsgBodyBatteryBack) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *CMsgBodyBatteryBack) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CMsgBodyBatteryBack) GetBatterysn() string {
	if m != nil && m.Batterysn != nil {
		return *m.Batterysn
	}
	return ""
}

func (m *CMsgBodyBatteryBack) GetState() BATTERY_BORROW_RETURN_CODE {
	if m != nil && m.State != nil {
		return *m.State
	}
	return BATTERY_BORROW_RETURN_CODE_BBR_STATUS_OK
}

func (m *CMsgBodyBatteryBack) GetActionTime() int32 {
	if m != nil && m.ActionTime != nil {
		return *m.ActionTime
	}
	return 0
}

// 电源取走或插入响应
type CMsgBodyDeviceAck struct {
	Action               *DEVACTION                  `protobuf:"varint,1,req,name=action,enum=msginfo.DEVACTION" json:"action,omitempty"`
	Deviceid             *string                     `protobuf:"bytes,2,req,name=deviceid" json:"deviceid,omitempty"`
	Num                  *int32                      `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	Batterysn            *string                     `protobuf:"bytes,4,req,name=batterysn" json:"batterysn,omitempty"`
	State                *BATTERY_BORROW_RETURN_CODE `protobuf:"varint,5,req,name=state,enum=msginfo.BATTERY_BORROW_RETURN_CODE" json:"state,omitempty"`
	ActionTime           *int32                      `protobuf:"varint,6,opt,name=action_time,json=actionTime" json:"action_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBodyDeviceAck) Reset()         { *m = CMsgBodyDeviceAck{} }
func (m *CMsgBodyDeviceAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceAck) ProtoMessage()    {}
func (*CMsgBodyDeviceAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{10}
}

func (m *CMsgBodyDeviceAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceAck.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceAck.Merge(m, src)
}
func (m *CMsgBodyDeviceAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceAck.Size(m)
}
func (m *CMsgBodyDeviceAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceAck proto.InternalMessageInfo

func (m *CMsgBodyDeviceAck) GetAction() DEVACTION {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return DEVACTION_BORROW
}

func (m *CMsgBodyDeviceAck) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *CMsgBodyDeviceAck) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CMsgBodyDeviceAck) GetBatterysn() string {
	if m != nil && m.Batterysn != nil {
		return *m.Batterysn
	}
	return ""
}

func (m *CMsgBodyDeviceAck) GetState() BATTERY_BORROW_RETURN_CODE {
	if m != nil && m.State != nil {
		return *m.State
	}
	return BATTERY_BORROW_RETURN_CODE_BBR_STATUS_OK
}

func (m *CMsgBodyDeviceAck) GetActionTime() int32 {
	if m != nil && m.ActionTime != nil {
		return *m.ActionTime
	}
	return 0
}

// 柜机升级软件
type CMsgBodyUpgrade struct {
	Version              *string  `protobuf:"bytes,1,req,name=version" json:"version,omitempty"`
	ServerUrl            *string  `protobuf:"bytes,2,req,name=serverUrl" json:"serverUrl,omitempty"`
	FileMd5Sum           *string  `protobuf:"bytes,3,req,name=fileMd5sum" json:"fileMd5sum,omitempty"`
	ForceTime            *string  `protobuf:"bytes,4,opt,name=force_time,json=forceTime" json:"force_time,omitempty"`
	Strategy             *int32   `protobuf:"varint,5,opt,name=strategy" json:"strategy,omitempty"`
	TriggerTimeMin       *string  `protobuf:"bytes,6,opt,name=trigger_time_min,json=triggerTimeMin" json:"trigger_time_min,omitempty"`
	TriggerTimeMax       *string  `protobuf:"bytes,7,opt,name=trigger_time_max,json=triggerTimeMax" json:"trigger_time_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyUpgrade) Reset()         { *m = CMsgBodyUpgrade{} }
func (m *CMsgBodyUpgrade) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyUpgrade) ProtoMessage()    {}
func (*CMsgBodyUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{11}
}

func (m *CMsgBodyUpgrade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyUpgrade.Unmarshal(m, b)
}
func (m *CMsgBodyUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyUpgrade.Marshal(b, m, deterministic)
}
func (m *CMsgBodyUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyUpgrade.Merge(m, src)
}
func (m *CMsgBodyUpgrade) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyUpgrade.Size(m)
}
func (m *CMsgBodyUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyUpgrade proto.InternalMessageInfo

func (m *CMsgBodyUpgrade) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *CMsgBodyUpgrade) GetServerUrl() string {
	if m != nil && m.ServerUrl != nil {
		return *m.ServerUrl
	}
	return ""
}

func (m *CMsgBodyUpgrade) GetFileMd5Sum() string {
	if m != nil && m.FileMd5Sum != nil {
		return *m.FileMd5Sum
	}
	return ""
}

func (m *CMsgBodyUpgrade) GetForceTime() string {
	if m != nil && m.ForceTime != nil {
		return *m.ForceTime
	}
	return ""
}

func (m *CMsgBodyUpgrade) GetStrategy() int32 {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return 0
}

func (m *CMsgBodyUpgrade) GetTriggerTimeMin() string {
	if m != nil && m.TriggerTimeMin != nil {
		return *m.TriggerTimeMin
	}
	return ""
}

func (m *CMsgBodyUpgrade) GetTriggerTimeMax() string {
	if m != nil && m.TriggerTimeMax != nil {
		return *m.TriggerTimeMax
	}
	return ""
}

// 柜机升级响应
type CMsgBodyUpgradeAck struct {
	UpgradeStatus        *UPGRADESTATUS `protobuf:"varint,1,req,name=upgradeStatus,enum=msginfo.UPGRADESTATUS" json:"upgradeStatus,omitempty"`
	Lastfail             *string        `protobuf:"bytes,2,opt,name=lastfail" json:"lastfail,omitempty"`
	Deviceid             *string        `protobuf:"bytes,3,req,name=deviceid" json:"deviceid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CMsgBodyUpgradeAck) Reset()         { *m = CMsgBodyUpgradeAck{} }
func (m *CMsgBodyUpgradeAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyUpgradeAck) ProtoMessage()    {}
func (*CMsgBodyUpgradeAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{12}
}

func (m *CMsgBodyUpgradeAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyUpgradeAck.Unmarshal(m, b)
}
func (m *CMsgBodyUpgradeAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyUpgradeAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyUpgradeAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyUpgradeAck.Merge(m, src)
}
func (m *CMsgBodyUpgradeAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyUpgradeAck.Size(m)
}
func (m *CMsgBodyUpgradeAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyUpgradeAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyUpgradeAck proto.InternalMessageInfo

func (m *CMsgBodyUpgradeAck) GetUpgradeStatus() UPGRADESTATUS {
	if m != nil && m.UpgradeStatus != nil {
		return *m.UpgradeStatus
	}
	return UPGRADESTATUS_DOWNLOAD_OK
}

func (m *CMsgBodyUpgradeAck) GetLastfail() string {
	if m != nil && m.Lastfail != nil {
		return *m.Lastfail
	}
	return ""
}

func (m *CMsgBodyUpgradeAck) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

// 服务器发送更新参数命令
type CMsgBodyDeviceUpdate struct {
	Cmd                  *string  `protobuf:"bytes,1,req,name=cmd" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyDeviceUpdate) Reset()         { *m = CMsgBodyDeviceUpdate{} }
func (m *CMsgBodyDeviceUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceUpdate) ProtoMessage()    {}
func (*CMsgBodyDeviceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{13}
}

func (m *CMsgBodyDeviceUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceUpdate.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceUpdate.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceUpdate.Merge(m, src)
}
func (m *CMsgBodyDeviceUpdate) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceUpdate.Size(m)
}
func (m *CMsgBodyDeviceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceUpdate proto.InternalMessageInfo

func (m *CMsgBodyDeviceUpdate) GetCmd() string {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return ""
}

// 柜机设置wifi信息
type CMsgBodyWifiSetupInfo struct {
	Ssid                 *string          `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Password             *string          `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	ConnectNetworkType   *CONNECTNETTYPE  `protobuf:"varint,3,req,name=connectNetworkType,enum=msginfo.CONNECTNETTYPE" json:"connectNetworkType,omitempty"`
	WifiAuthMode         *WIFIAUTHMODE    `protobuf:"varint,4,opt,name=wifiAuthMode,enum=msginfo.WIFIAUTHMODE" json:"wifiAuthMode,omitempty"`
	WifiEncrypt          *WIFIENCRYPT     `protobuf:"varint,5,opt,name=WifiEncrypt,enum=msginfo.WIFIENCRYPT" json:"WifiEncrypt,omitempty"`
	Deviceid             *string          `protobuf:"bytes,6,req,name=deviceid" json:"deviceid,omitempty"`
	ModulesName          *string          `protobuf:"bytes,7,opt,name=modules_name,json=modulesName" json:"modules_name,omitempty"`
	Ipaddr               *string          `protobuf:"bytes,8,opt,name=ipaddr" json:"ipaddr,omitempty"`
	CurrentNetState      *CURRENTNETSTATE `protobuf:"varint,9,opt,name=currentNetState,enum=msginfo.CURRENTNETSTATE" json:"currentNetState,omitempty"`
	Bssid                *string          `protobuf:"bytes,10,opt,name=bssid" json:"bssid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CMsgBodyWifiSetupInfo) Reset()         { *m = CMsgBodyWifiSetupInfo{} }
func (m *CMsgBodyWifiSetupInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyWifiSetupInfo) ProtoMessage()    {}
func (*CMsgBodyWifiSetupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{14}
}

func (m *CMsgBodyWifiSetupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyWifiSetupInfo.Unmarshal(m, b)
}
func (m *CMsgBodyWifiSetupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyWifiSetupInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBodyWifiSetupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyWifiSetupInfo.Merge(m, src)
}
func (m *CMsgBodyWifiSetupInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyWifiSetupInfo.Size(m)
}
func (m *CMsgBodyWifiSetupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyWifiSetupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyWifiSetupInfo proto.InternalMessageInfo

func (m *CMsgBodyWifiSetupInfo) GetSsid() string {
	if m != nil && m.Ssid != nil {
		return *m.Ssid
	}
	return ""
}

func (m *CMsgBodyWifiSetupInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgBodyWifiSetupInfo) GetConnectNetworkType() CONNECTNETTYPE {
	if m != nil && m.ConnectNetworkType != nil {
		return *m.ConnectNetworkType
	}
	return CONNECTNETTYPE_CONNECTNETWIFI
}

func (m *CMsgBodyWifiSetupInfo) GetWifiAuthMode() WIFIAUTHMODE {
	if m != nil && m.WifiAuthMode != nil {
		return *m.WifiAuthMode
	}
	return WIFIAUTHMODE_WIFIAUTHMODENONE
}

func (m *CMsgBodyWifiSetupInfo) GetWifiEncrypt() WIFIENCRYPT {
	if m != nil && m.WifiEncrypt != nil {
		return *m.WifiEncrypt
	}
	return WIFIENCRYPT_WIFIENCRYPTNONE
}

func (m *CMsgBodyWifiSetupInfo) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *CMsgBodyWifiSetupInfo) GetModulesName() string {
	if m != nil && m.ModulesName != nil {
		return *m.ModulesName
	}
	return ""
}

func (m *CMsgBodyWifiSetupInfo) GetIpaddr() string {
	if m != nil && m.Ipaddr != nil {
		return *m.Ipaddr
	}
	return ""
}

func (m *CMsgBodyWifiSetupInfo) GetCurrentNetState() CURRENTNETSTATE {
	if m != nil && m.CurrentNetState != nil {
		return *m.CurrentNetState
	}
	return CURRENTNETSTATE_CURRENTNETDISABLE
}

func (m *CMsgBodyWifiSetupInfo) GetBssid() string {
	if m != nil && m.Bssid != nil {
		return *m.Bssid
	}
	return ""
}

// 柜机设置wifi结果反馈
type CMsgBodyWifiSetupAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyWifiSetupAck) Reset()         { *m = CMsgBodyWifiSetupAck{} }
func (m *CMsgBodyWifiSetupAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyWifiSetupAck) ProtoMessage()    {}
func (*CMsgBodyWifiSetupAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{15}
}

func (m *CMsgBodyWifiSetupAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyWifiSetupAck.Unmarshal(m, b)
}
func (m *CMsgBodyWifiSetupAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyWifiSetupAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyWifiSetupAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyWifiSetupAck.Merge(m, src)
}
func (m *CMsgBodyWifiSetupAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyWifiSetupAck.Size(m)
}
func (m *CMsgBodyWifiSetupAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyWifiSetupAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyWifiSetupAck proto.InternalMessageInfo

func (m *CMsgBodyWifiSetupAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

// 柜机设置2G信息
type CMsgBodyGsmSetupInfo struct {
	ConnectNetworkType   *CONNECTNETTYPE  `protobuf:"varint,1,req,name=connectNetworkType,enum=msginfo.CONNECTNETTYPE" json:"connectNetworkType,omitempty"`
	Deviceid             *string          `protobuf:"bytes,2,req,name=deviceid" json:"deviceid,omitempty"`
	Imei                 *string          `protobuf:"bytes,3,opt,name=imei" json:"imei,omitempty"`
	Iccid                *string          `protobuf:"bytes,4,opt,name=iccid" json:"iccid,omitempty"`
	Imsi                 *string          `protobuf:"bytes,5,opt,name=imsi" json:"imsi,omitempty"`
	ModulesName          *string          `protobuf:"bytes,6,opt,name=modules_name,json=modulesName" json:"modules_name,omitempty"`
	Ipaddr               *string          `protobuf:"bytes,7,opt,name=ipaddr" json:"ipaddr,omitempty"`
	RealPLMN             *REALPLMN        `protobuf:"varint,8,opt,name=RealPLMN,enum=msginfo.REALPLMN" json:"RealPLMN,omitempty"`
	CurrentNetState      *CURRENTNETSTATE `protobuf:"varint,9,opt,name=currentNetState,enum=msginfo.CURRENTNETSTATE" json:"currentNetState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CMsgBodyGsmSetupInfo) Reset()         { *m = CMsgBodyGsmSetupInfo{} }
func (m *CMsgBodyGsmSetupInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGsmSetupInfo) ProtoMessage()    {}
func (*CMsgBodyGsmSetupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{16}
}

func (m *CMsgBodyGsmSetupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGsmSetupInfo.Unmarshal(m, b)
}
func (m *CMsgBodyGsmSetupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGsmSetupInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGsmSetupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGsmSetupInfo.Merge(m, src)
}
func (m *CMsgBodyGsmSetupInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGsmSetupInfo.Size(m)
}
func (m *CMsgBodyGsmSetupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGsmSetupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGsmSetupInfo proto.InternalMessageInfo

func (m *CMsgBodyGsmSetupInfo) GetConnectNetworkType() CONNECTNETTYPE {
	if m != nil && m.ConnectNetworkType != nil {
		return *m.ConnectNetworkType
	}
	return CONNECTNETTYPE_CONNECTNETWIFI
}

func (m *CMsgBodyGsmSetupInfo) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetImei() string {
	if m != nil && m.Imei != nil {
		return *m.Imei
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetIccid() string {
	if m != nil && m.Iccid != nil {
		return *m.Iccid
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetImsi() string {
	if m != nil && m.Imsi != nil {
		return *m.Imsi
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetModulesName() string {
	if m != nil && m.ModulesName != nil {
		return *m.ModulesName
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetIpaddr() string {
	if m != nil && m.Ipaddr != nil {
		return *m.Ipaddr
	}
	return ""
}

func (m *CMsgBodyGsmSetupInfo) GetRealPLMN() REALPLMN {
	if m != nil && m.RealPLMN != nil {
		return *m.RealPLMN
	}
	return REALPLMN_REALPLMNMOBILEGSM
}

func (m *CMsgBodyGsmSetupInfo) GetCurrentNetState() CURRENTNETSTATE {
	if m != nil && m.CurrentNetState != nil {
		return *m.CurrentNetState
	}
	return CURRENTNETSTATE_CURRENTNETDISABLE
}

// 柜机设置2G结果反馈
type CMsgBodyGsmSetupAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGsmSetupAck) Reset()         { *m = CMsgBodyGsmSetupAck{} }
func (m *CMsgBodyGsmSetupAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGsmSetupAck) ProtoMessage()    {}
func (*CMsgBodyGsmSetupAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{17}
}

func (m *CMsgBodyGsmSetupAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGsmSetupAck.Unmarshal(m, b)
}
func (m *CMsgBodyGsmSetupAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGsmSetupAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGsmSetupAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGsmSetupAck.Merge(m, src)
}
func (m *CMsgBodyGsmSetupAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGsmSetupAck.Size(m)
}
func (m *CMsgBodyGsmSetupAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGsmSetupAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGsmSetupAck proto.InternalMessageInfo

func (m *CMsgBodyGsmSetupAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

// 柜机2G损耗流量上报到服务器
type CMsgBodyGsmFlowInfo struct {
	Deviceid             *string  `protobuf:"bytes,1,req,name=deviceid" json:"deviceid,omitempty"`
	DevUnixTime          *int64   `protobuf:"varint,2,req,name=devUnixTime" json:"devUnixTime,omitempty"`
	GsmFlowBytes         *int64   `protobuf:"varint,3,req,name=gsmFlowBytes" json:"gsmFlowBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGsmFlowInfo) Reset()         { *m = CMsgBodyGsmFlowInfo{} }
func (m *CMsgBodyGsmFlowInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGsmFlowInfo) ProtoMessage()    {}
func (*CMsgBodyGsmFlowInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{18}
}

func (m *CMsgBodyGsmFlowInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGsmFlowInfo.Unmarshal(m, b)
}
func (m *CMsgBodyGsmFlowInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGsmFlowInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGsmFlowInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGsmFlowInfo.Merge(m, src)
}
func (m *CMsgBodyGsmFlowInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGsmFlowInfo.Size(m)
}
func (m *CMsgBodyGsmFlowInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGsmFlowInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGsmFlowInfo proto.InternalMessageInfo

func (m *CMsgBodyGsmFlowInfo) GetDeviceid() string {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return ""
}

func (m *CMsgBodyGsmFlowInfo) GetDevUnixTime() int64 {
	if m != nil && m.DevUnixTime != nil {
		return *m.DevUnixTime
	}
	return 0
}

func (m *CMsgBodyGsmFlowInfo) GetGsmFlowBytes() int64 {
	if m != nil && m.GsmFlowBytes != nil {
		return *m.GsmFlowBytes
	}
	return 0
}

// 服务器返回收到流量的确认信息
type CMsgBodyGsmFlowAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGsmFlowAck) Reset()         { *m = CMsgBodyGsmFlowAck{} }
func (m *CMsgBodyGsmFlowAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGsmFlowAck) ProtoMessage()    {}
func (*CMsgBodyGsmFlowAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{19}
}

func (m *CMsgBodyGsmFlowAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGsmFlowAck.Unmarshal(m, b)
}
func (m *CMsgBodyGsmFlowAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGsmFlowAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGsmFlowAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGsmFlowAck.Merge(m, src)
}
func (m *CMsgBodyGsmFlowAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGsmFlowAck.Size(m)
}
func (m *CMsgBodyGsmFlowAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGsmFlowAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGsmFlowAck proto.InternalMessageInfo

func (m *CMsgBodyGsmFlowAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

// 3.5.安装电源
type CMsgBodyInstallBatteryResult struct {
	DeviceId             *string                 `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	SlotNum              *int32                  `protobuf:"varint,2,req,name=slotNum" json:"slotNum,omitempty"`
	ResCode              *InstallBatteryResCode  `protobuf:"varint,3,req,name=resCode,enum=msginfo.InstallBatteryResCode" json:"resCode,omitempty"`
	NextSlotNum          *int32                  `protobuf:"varint,4,req,name=nextSlotNum" json:"nextSlotNum,omitempty"`
	OpenCode             *InstallBatteryOpenCode `protobuf:"varint,5,req,name=openCode,enum=msginfo.InstallBatteryOpenCode" json:"openCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgBodyInstallBatteryResult) Reset()         { *m = CMsgBodyInstallBatteryResult{} }
func (m *CMsgBodyInstallBatteryResult) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyInstallBatteryResult) ProtoMessage()    {}
func (*CMsgBodyInstallBatteryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{20}
}

func (m *CMsgBodyInstallBatteryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyInstallBatteryResult.Unmarshal(m, b)
}
func (m *CMsgBodyInstallBatteryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyInstallBatteryResult.Marshal(b, m, deterministic)
}
func (m *CMsgBodyInstallBatteryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyInstallBatteryResult.Merge(m, src)
}
func (m *CMsgBodyInstallBatteryResult) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyInstallBatteryResult.Size(m)
}
func (m *CMsgBodyInstallBatteryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyInstallBatteryResult.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyInstallBatteryResult proto.InternalMessageInfo

func (m *CMsgBodyInstallBatteryResult) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyInstallBatteryResult) GetSlotNum() int32 {
	if m != nil && m.SlotNum != nil {
		return *m.SlotNum
	}
	return 0
}

func (m *CMsgBodyInstallBatteryResult) GetResCode() InstallBatteryResCode {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return InstallBatteryResCode_RESCODEOK
}

func (m *CMsgBodyInstallBatteryResult) GetNextSlotNum() int32 {
	if m != nil && m.NextSlotNum != nil {
		return *m.NextSlotNum
	}
	return 0
}

func (m *CMsgBodyInstallBatteryResult) GetOpenCode() InstallBatteryOpenCode {
	if m != nil && m.OpenCode != nil {
		return *m.OpenCode
	}
	return InstallBatteryOpenCode_OPENCODEOK
}

type CMsgBodyGetBatteryPassword struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	BatterySn            *string  `protobuf:"bytes,2,req,name=batterySn" json:"batterySn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGetBatteryPassword) Reset()         { *m = CMsgBodyGetBatteryPassword{} }
func (m *CMsgBodyGetBatteryPassword) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetBatteryPassword) ProtoMessage()    {}
func (*CMsgBodyGetBatteryPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{21}
}

func (m *CMsgBodyGetBatteryPassword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetBatteryPassword.Unmarshal(m, b)
}
func (m *CMsgBodyGetBatteryPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetBatteryPassword.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetBatteryPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetBatteryPassword.Merge(m, src)
}
func (m *CMsgBodyGetBatteryPassword) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetBatteryPassword.Size(m)
}
func (m *CMsgBodyGetBatteryPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetBatteryPassword.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetBatteryPassword proto.InternalMessageInfo

func (m *CMsgBodyGetBatteryPassword) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyGetBatteryPassword) GetBatterySn() string {
	if m != nil && m.BatterySn != nil {
		return *m.BatterySn
	}
	return ""
}

type CMsgBodyGetBatteryPasswordAck struct {
	ResCode              *int32   `protobuf:"varint,1,req,name=resCode" json:"resCode,omitempty"`
	DeviceId             *string  `protobuf:"bytes,2,req,name=deviceId" json:"deviceId,omitempty"`
	BatterySn            *string  `protobuf:"bytes,3,req,name=batterySn" json:"batterySn,omitempty"`
	BatteryPassword      *string  `protobuf:"bytes,4,req,name=batteryPassword" json:"batteryPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGetBatteryPasswordAck) Reset()         { *m = CMsgBodyGetBatteryPasswordAck{} }
func (m *CMsgBodyGetBatteryPasswordAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetBatteryPasswordAck) ProtoMessage()    {}
func (*CMsgBodyGetBatteryPasswordAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{22}
}

func (m *CMsgBodyGetBatteryPasswordAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetBatteryPasswordAck.Unmarshal(m, b)
}
func (m *CMsgBodyGetBatteryPasswordAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetBatteryPasswordAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetBatteryPasswordAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetBatteryPasswordAck.Merge(m, src)
}
func (m *CMsgBodyGetBatteryPasswordAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetBatteryPasswordAck.Size(m)
}
func (m *CMsgBodyGetBatteryPasswordAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetBatteryPasswordAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetBatteryPasswordAck proto.InternalMessageInfo

func (m *CMsgBodyGetBatteryPasswordAck) GetResCode() int32 {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return 0
}

func (m *CMsgBodyGetBatteryPasswordAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyGetBatteryPasswordAck) GetBatterySn() string {
	if m != nil && m.BatterySn != nil {
		return *m.BatterySn
	}
	return ""
}

func (m *CMsgBodyGetBatteryPasswordAck) GetBatteryPassword() string {
	if m != nil && m.BatteryPassword != nil {
		return *m.BatteryPassword
	}
	return ""
}

type CMsgBodyWifiClearInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyWifiClearInfo) Reset()         { *m = CMsgBodyWifiClearInfo{} }
func (m *CMsgBodyWifiClearInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyWifiClearInfo) ProtoMessage()    {}
func (*CMsgBodyWifiClearInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{23}
}

func (m *CMsgBodyWifiClearInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyWifiClearInfo.Unmarshal(m, b)
}
func (m *CMsgBodyWifiClearInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyWifiClearInfo.Marshal(b, m, deterministic)
}
func (m *CMsgBodyWifiClearInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyWifiClearInfo.Merge(m, src)
}
func (m *CMsgBodyWifiClearInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyWifiClearInfo.Size(m)
}
func (m *CMsgBodyWifiClearInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyWifiClearInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyWifiClearInfo proto.InternalMessageInfo

type CMsgBodyWifiClearAck struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	ResCode              *RESCODE `protobuf:"varint,2,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyWifiClearAck) Reset()         { *m = CMsgBodyWifiClearAck{} }
func (m *CMsgBodyWifiClearAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyWifiClearAck) ProtoMessage()    {}
func (*CMsgBodyWifiClearAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{24}
}

func (m *CMsgBodyWifiClearAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyWifiClearAck.Unmarshal(m, b)
}
func (m *CMsgBodyWifiClearAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyWifiClearAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyWifiClearAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyWifiClearAck.Merge(m, src)
}
func (m *CMsgBodyWifiClearAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyWifiClearAck.Size(m)
}
func (m *CMsgBodyWifiClearAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyWifiClearAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyWifiClearAck proto.InternalMessageInfo

func (m *CMsgBodyWifiClearAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyWifiClearAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type CMsgBodyDeviceOfflineStatus struct {
	DeviceId             *string                     `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	DevUnixtimestamp     *int64                      `protobuf:"varint,2,req,name=devUnixtimestamp" json:"devUnixtimestamp,omitempty"`
	State                *DEVICE_OFFLINE_STATUS_CODE `protobuf:"varint,3,opt,name=state,enum=msginfo.DEVICE_OFFLINE_STATUS_CODE" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CMsgBodyDeviceOfflineStatus) Reset()         { *m = CMsgBodyDeviceOfflineStatus{} }
func (m *CMsgBodyDeviceOfflineStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceOfflineStatus) ProtoMessage()    {}
func (*CMsgBodyDeviceOfflineStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{25}
}

func (m *CMsgBodyDeviceOfflineStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceOfflineStatus.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceOfflineStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceOfflineStatus.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceOfflineStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceOfflineStatus.Merge(m, src)
}
func (m *CMsgBodyDeviceOfflineStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceOfflineStatus.Size(m)
}
func (m *CMsgBodyDeviceOfflineStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceOfflineStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceOfflineStatus proto.InternalMessageInfo

func (m *CMsgBodyDeviceOfflineStatus) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyDeviceOfflineStatus) GetDevUnixtimestamp() int64 {
	if m != nil && m.DevUnixtimestamp != nil {
		return *m.DevUnixtimestamp
	}
	return 0
}

func (m *CMsgBodyDeviceOfflineStatus) GetState() DEVICE_OFFLINE_STATUS_CODE {
	if m != nil && m.State != nil {
		return *m.State
	}
	return DEVICE_OFFLINE_STATUS_CODE_DOS_SOFT_RESET
}

type CMsgBodyDeviceOfflineAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyDeviceOfflineAck) Reset()         { *m = CMsgBodyDeviceOfflineAck{} }
func (m *CMsgBodyDeviceOfflineAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceOfflineAck) ProtoMessage()    {}
func (*CMsgBodyDeviceOfflineAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{26}
}

func (m *CMsgBodyDeviceOfflineAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceOfflineAck.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceOfflineAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceOfflineAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceOfflineAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceOfflineAck.Merge(m, src)
}
func (m *CMsgBodyDeviceOfflineAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceOfflineAck.Size(m)
}
func (m *CMsgBodyDeviceOfflineAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceOfflineAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceOfflineAck proto.InternalMessageInfo

func (m *CMsgBodyDeviceOfflineAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type CMsgBodyDeviceRebootSys struct {
	DeviceId             *string             `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	State                *DEVICE_REBOOT_CODE `protobuf:"varint,2,req,name=state,enum=msginfo.DEVICE_REBOOT_CODE" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgBodyDeviceRebootSys) Reset()         { *m = CMsgBodyDeviceRebootSys{} }
func (m *CMsgBodyDeviceRebootSys) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceRebootSys) ProtoMessage()    {}
func (*CMsgBodyDeviceRebootSys) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{27}
}

func (m *CMsgBodyDeviceRebootSys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceRebootSys.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceRebootSys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceRebootSys.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceRebootSys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceRebootSys.Merge(m, src)
}
func (m *CMsgBodyDeviceRebootSys) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceRebootSys.Size(m)
}
func (m *CMsgBodyDeviceRebootSys) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceRebootSys.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceRebootSys proto.InternalMessageInfo

func (m *CMsgBodyDeviceRebootSys) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyDeviceRebootSys) GetState() DEVICE_REBOOT_CODE {
	if m != nil && m.State != nil {
		return *m.State
	}
	return DEVICE_REBOOT_CODE_DRC_UPGRADE_REBOOT
}

type CMsgBodyDeviceRebootSysAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyDeviceRebootSysAck) Reset()         { *m = CMsgBodyDeviceRebootSysAck{} }
func (m *CMsgBodyDeviceRebootSysAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyDeviceRebootSysAck) ProtoMessage()    {}
func (*CMsgBodyDeviceRebootSysAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{28}
}

func (m *CMsgBodyDeviceRebootSysAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyDeviceRebootSysAck.Unmarshal(m, b)
}
func (m *CMsgBodyDeviceRebootSysAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyDeviceRebootSysAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyDeviceRebootSysAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyDeviceRebootSysAck.Merge(m, src)
}
func (m *CMsgBodyDeviceRebootSysAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyDeviceRebootSysAck.Size(m)
}
func (m *CMsgBodyDeviceRebootSysAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyDeviceRebootSysAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyDeviceRebootSysAck proto.InternalMessageInfo

func (m *CMsgBodyDeviceRebootSysAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

// smart link
type CMsgBodySmartLinkAuthReq struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodySmartLinkAuthReq) Reset()         { *m = CMsgBodySmartLinkAuthReq{} }
func (m *CMsgBodySmartLinkAuthReq) String() string { return proto.CompactTextString(m) }
func (*CMsgBodySmartLinkAuthReq) ProtoMessage()    {}
func (*CMsgBodySmartLinkAuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{29}
}

func (m *CMsgBodySmartLinkAuthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodySmartLinkAuthReq.Unmarshal(m, b)
}
func (m *CMsgBodySmartLinkAuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodySmartLinkAuthReq.Marshal(b, m, deterministic)
}
func (m *CMsgBodySmartLinkAuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodySmartLinkAuthReq.Merge(m, src)
}
func (m *CMsgBodySmartLinkAuthReq) XXX_Size() int {
	return xxx_messageInfo_CMsgBodySmartLinkAuthReq.Size(m)
}
func (m *CMsgBodySmartLinkAuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodySmartLinkAuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodySmartLinkAuthReq proto.InternalMessageInfo

func (m *CMsgBodySmartLinkAuthReq) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

// smart link
type CMsgBodySmartLinkAuthAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodySmartLinkAuthAck) Reset()         { *m = CMsgBodySmartLinkAuthAck{} }
func (m *CMsgBodySmartLinkAuthAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodySmartLinkAuthAck) ProtoMessage()    {}
func (*CMsgBodySmartLinkAuthAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{30}
}

func (m *CMsgBodySmartLinkAuthAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodySmartLinkAuthAck.Unmarshal(m, b)
}
func (m *CMsgBodySmartLinkAuthAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodySmartLinkAuthAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodySmartLinkAuthAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodySmartLinkAuthAck.Merge(m, src)
}
func (m *CMsgBodySmartLinkAuthAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodySmartLinkAuthAck.Size(m)
}
func (m *CMsgBodySmartLinkAuthAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodySmartLinkAuthAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodySmartLinkAuthAck proto.InternalMessageInfo

func (m *CMsgBodySmartLinkAuthAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type CMsgBodySmartLinkResult struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	ResCode              *RESCODE `protobuf:"varint,2,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodySmartLinkResult) Reset()         { *m = CMsgBodySmartLinkResult{} }
func (m *CMsgBodySmartLinkResult) String() string { return proto.CompactTextString(m) }
func (*CMsgBodySmartLinkResult) ProtoMessage()    {}
func (*CMsgBodySmartLinkResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{31}
}

func (m *CMsgBodySmartLinkResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodySmartLinkResult.Unmarshal(m, b)
}
func (m *CMsgBodySmartLinkResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodySmartLinkResult.Marshal(b, m, deterministic)
}
func (m *CMsgBodySmartLinkResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodySmartLinkResult.Merge(m, src)
}
func (m *CMsgBodySmartLinkResult) XXX_Size() int {
	return xxx_messageInfo_CMsgBodySmartLinkResult.Size(m)
}
func (m *CMsgBodySmartLinkResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodySmartLinkResult.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodySmartLinkResult proto.InternalMessageInfo

func (m *CMsgBodySmartLinkResult) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodySmartLinkResult) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type CMsgBodySlotLock struct {
	Num                  *int32        `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	SlotlockAction       *SLOTLOCKFLAG `protobuf:"varint,2,req,name=slotlockAction,enum=msginfo.SLOTLOCKFLAG" json:"slotlockAction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgBodySlotLock) Reset()         { *m = CMsgBodySlotLock{} }
func (m *CMsgBodySlotLock) String() string { return proto.CompactTextString(m) }
func (*CMsgBodySlotLock) ProtoMessage()    {}
func (*CMsgBodySlotLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{32}
}

func (m *CMsgBodySlotLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodySlotLock.Unmarshal(m, b)
}
func (m *CMsgBodySlotLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodySlotLock.Marshal(b, m, deterministic)
}
func (m *CMsgBodySlotLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodySlotLock.Merge(m, src)
}
func (m *CMsgBodySlotLock) XXX_Size() int {
	return xxx_messageInfo_CMsgBodySlotLock.Size(m)
}
func (m *CMsgBodySlotLock) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodySlotLock.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodySlotLock proto.InternalMessageInfo

func (m *CMsgBodySlotLock) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CMsgBodySlotLock) GetSlotlockAction() SLOTLOCKFLAG {
	if m != nil && m.SlotlockAction != nil {
		return *m.SlotlockAction
	}
	return SLOTLOCKFLAG_UNLOCK
}

type CMsgBodySlotLockAck struct {
	Num                  *int32        `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	LockStatus           *SLOTLOCKFLAG `protobuf:"varint,2,req,name=lockStatus,enum=msginfo.SLOTLOCKFLAG" json:"lockStatus,omitempty"`
	DeviceId             *string       `protobuf:"bytes,3,req,name=deviceId" json:"deviceId,omitempty"`
	ResCode              *RESCODE      `protobuf:"varint,4,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgBodySlotLockAck) Reset()         { *m = CMsgBodySlotLockAck{} }
func (m *CMsgBodySlotLockAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodySlotLockAck) ProtoMessage()    {}
func (*CMsgBodySlotLockAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{33}
}

func (m *CMsgBodySlotLockAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodySlotLockAck.Unmarshal(m, b)
}
func (m *CMsgBodySlotLockAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodySlotLockAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodySlotLockAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodySlotLockAck.Merge(m, src)
}
func (m *CMsgBodySlotLockAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodySlotLockAck.Size(m)
}
func (m *CMsgBodySlotLockAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodySlotLockAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodySlotLockAck proto.InternalMessageInfo

func (m *CMsgBodySlotLockAck) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CMsgBodySlotLockAck) GetLockStatus() SLOTLOCKFLAG {
	if m != nil && m.LockStatus != nil {
		return *m.LockStatus
	}
	return SLOTLOCKFLAG_UNLOCK
}

func (m *CMsgBodySlotLockAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodySlotLockAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type TipsImages struct {
	Code                 *string       `protobuf:"bytes,1,req,name=code" json:"code,omitempty"`
	MaterialId           *int32        `protobuf:"varint,2,req,name=materialId" json:"materialId,omitempty"`
	Type                 *MaterialType `protobuf:"varint,3,req,name=type,enum=msginfo.MaterialType" json:"type,omitempty"`
	Title                *string       `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Url                  *string       `protobuf:"bytes,5,req,name=url" json:"url,omitempty"`
	Md5                  *string       `protobuf:"bytes,6,req,name=md5" json:"md5,omitempty"`
	ShowTime             *int32        `protobuf:"varint,7,req,name=showTime" json:"showTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TipsImages) Reset()         { *m = TipsImages{} }
func (m *TipsImages) String() string { return proto.CompactTextString(m) }
func (*TipsImages) ProtoMessage()    {}
func (*TipsImages) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{34}
}

func (m *TipsImages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TipsImages.Unmarshal(m, b)
}
func (m *TipsImages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TipsImages.Marshal(b, m, deterministic)
}
func (m *TipsImages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TipsImages.Merge(m, src)
}
func (m *TipsImages) XXX_Size() int {
	return xxx_messageInfo_TipsImages.Size(m)
}
func (m *TipsImages) XXX_DiscardUnknown() {
	xxx_messageInfo_TipsImages.DiscardUnknown(m)
}

var xxx_messageInfo_TipsImages proto.InternalMessageInfo

func (m *TipsImages) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *TipsImages) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

func (m *TipsImages) GetType() MaterialType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MaterialType_IMG
}

func (m *TipsImages) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *TipsImages) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *TipsImages) GetMd5() string {
	if m != nil && m.Md5 != nil {
		return *m.Md5
	}
	return ""
}

func (m *TipsImages) GetShowTime() int32 {
	if m != nil && m.ShowTime != nil {
		return *m.ShowTime
	}
	return 0
}

type CMsgBodyTipsImages struct {
	TipsImages           []*TipsImages `protobuf:"bytes,4,rep,name=tipsImages" json:"tipsImages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CMsgBodyTipsImages) Reset()         { *m = CMsgBodyTipsImages{} }
func (m *CMsgBodyTipsImages) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyTipsImages) ProtoMessage()    {}
func (*CMsgBodyTipsImages) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{35}
}

func (m *CMsgBodyTipsImages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyTipsImages.Unmarshal(m, b)
}
func (m *CMsgBodyTipsImages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyTipsImages.Marshal(b, m, deterministic)
}
func (m *CMsgBodyTipsImages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyTipsImages.Merge(m, src)
}
func (m *CMsgBodyTipsImages) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyTipsImages.Size(m)
}
func (m *CMsgBodyTipsImages) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyTipsImages.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyTipsImages proto.InternalMessageInfo

func (m *CMsgBodyTipsImages) GetTipsImages() []*TipsImages {
	if m != nil {
		return m.TipsImages
	}
	return nil
}

// 提示图片回执
type TipsImagesAck struct {
	MaterialId           *int32              `protobuf:"varint,1,req,name=materialId" json:"materialId,omitempty"`
	Code                 *string             `protobuf:"bytes,2,req,name=code" json:"code,omitempty"`
	ResCode              *AdvScheduleResCode `protobuf:"varint,3,req,name=resCode,enum=msginfo.AdvScheduleResCode" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TipsImagesAck) Reset()         { *m = TipsImagesAck{} }
func (m *TipsImagesAck) String() string { return proto.CompactTextString(m) }
func (*TipsImagesAck) ProtoMessage()    {}
func (*TipsImagesAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{36}
}

func (m *TipsImagesAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TipsImagesAck.Unmarshal(m, b)
}
func (m *TipsImagesAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TipsImagesAck.Marshal(b, m, deterministic)
}
func (m *TipsImagesAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TipsImagesAck.Merge(m, src)
}
func (m *TipsImagesAck) XXX_Size() int {
	return xxx_messageInfo_TipsImagesAck.Size(m)
}
func (m *TipsImagesAck) XXX_DiscardUnknown() {
	xxx_messageInfo_TipsImagesAck.DiscardUnknown(m)
}

var xxx_messageInfo_TipsImagesAck proto.InternalMessageInfo

func (m *TipsImagesAck) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

func (m *TipsImagesAck) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *TipsImagesAck) GetResCode() AdvScheduleResCode {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return AdvScheduleResCode_RESCODE_RECIVE
}

// 柜机上报提示图片状态回执
type CMsgBodyTipsImagesReport struct {
	DeviceId             *string          `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	TipsImagesAck        []*TipsImagesAck `protobuf:"bytes,2,rep,name=tipsImagesAck" json:"tipsImagesAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CMsgBodyTipsImagesReport) Reset()         { *m = CMsgBodyTipsImagesReport{} }
func (m *CMsgBodyTipsImagesReport) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyTipsImagesReport) ProtoMessage()    {}
func (*CMsgBodyTipsImagesReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{37}
}

func (m *CMsgBodyTipsImagesReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyTipsImagesReport.Unmarshal(m, b)
}
func (m *CMsgBodyTipsImagesReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyTipsImagesReport.Marshal(b, m, deterministic)
}
func (m *CMsgBodyTipsImagesReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyTipsImagesReport.Merge(m, src)
}
func (m *CMsgBodyTipsImagesReport) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyTipsImagesReport.Size(m)
}
func (m *CMsgBodyTipsImagesReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyTipsImagesReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyTipsImagesReport proto.InternalMessageInfo

func (m *CMsgBodyTipsImagesReport) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyTipsImagesReport) GetTipsImagesAck() []*TipsImagesAck {
	if m != nil {
		return m.TipsImagesAck
	}
	return nil
}

// 广告素材
type Material struct {
	MaterialId           *int32        `protobuf:"varint,1,req,name=materialId" json:"materialId,omitempty"`
	Type                 *MaterialType `protobuf:"varint,2,req,name=type,enum=msginfo.MaterialType" json:"type,omitempty"`
	Title                *string       `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Url                  *string       `protobuf:"bytes,4,req,name=url" json:"url,omitempty"`
	PlayTime             *int32        `protobuf:"varint,5,opt,name=playTime" json:"playTime,omitempty"`
	AnimationMode        *string       `protobuf:"bytes,6,req,name=animationMode" json:"animationMode,omitempty"`
	Md5                  *string       `protobuf:"bytes,7,opt,name=md5" json:"md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Material) Reset()         { *m = Material{} }
func (m *Material) String() string { return proto.CompactTextString(m) }
func (*Material) ProtoMessage()    {}
func (*Material) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{38}
}

func (m *Material) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Material.Unmarshal(m, b)
}
func (m *Material) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Material.Marshal(b, m, deterministic)
}
func (m *Material) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Material.Merge(m, src)
}
func (m *Material) XXX_Size() int {
	return xxx_messageInfo_Material.Size(m)
}
func (m *Material) XXX_DiscardUnknown() {
	xxx_messageInfo_Material.DiscardUnknown(m)
}

var xxx_messageInfo_Material proto.InternalMessageInfo

func (m *Material) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

func (m *Material) GetType() MaterialType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return MaterialType_IMG
}

func (m *Material) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Material) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Material) GetPlayTime() int32 {
	if m != nil && m.PlayTime != nil {
		return *m.PlayTime
	}
	return 0
}

func (m *Material) GetAnimationMode() string {
	if m != nil && m.AnimationMode != nil {
		return *m.AnimationMode
	}
	return ""
}

func (m *Material) GetMd5() string {
	if m != nil && m.Md5 != nil {
		return *m.Md5
	}
	return ""
}

// 播放列表
type PlayView struct {
	PlayId               *int32      `protobuf:"varint,1,req,name=playId" json:"playId,omitempty"`
	Title                *string     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Position             *string     `protobuf:"bytes,3,req,name=position" json:"position,omitempty"`
	Material             []*Material `protobuf:"bytes,4,rep,name=material" json:"material,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PlayView) Reset()         { *m = PlayView{} }
func (m *PlayView) String() string { return proto.CompactTextString(m) }
func (*PlayView) ProtoMessage()    {}
func (*PlayView) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{39}
}

func (m *PlayView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayView.Unmarshal(m, b)
}
func (m *PlayView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayView.Marshal(b, m, deterministic)
}
func (m *PlayView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayView.Merge(m, src)
}
func (m *PlayView) XXX_Size() int {
	return xxx_messageInfo_PlayView.Size(m)
}
func (m *PlayView) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayView.DiscardUnknown(m)
}

var xxx_messageInfo_PlayView proto.InternalMessageInfo

func (m *PlayView) GetPlayId() int32 {
	if m != nil && m.PlayId != nil {
		return *m.PlayId
	}
	return 0
}

func (m *PlayView) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PlayView) GetPosition() string {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return ""
}

func (m *PlayView) GetMaterial() []*Material {
	if m != nil {
		return m.Material
	}
	return nil
}

// 排期消息体
type CMsgBodyAdvScheduleList struct {
	ScheduleId           *int32      `protobuf:"varint,1,req,name=scheduleId" json:"scheduleId,omitempty"`
	StartTime            *int32      `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	EndTime              *int32      `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	PlayView             []*PlayView `protobuf:"bytes,4,rep,name=playView" json:"playView,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CMsgBodyAdvScheduleList) Reset()         { *m = CMsgBodyAdvScheduleList{} }
func (m *CMsgBodyAdvScheduleList) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyAdvScheduleList) ProtoMessage()    {}
func (*CMsgBodyAdvScheduleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{40}
}

func (m *CMsgBodyAdvScheduleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyAdvScheduleList.Unmarshal(m, b)
}
func (m *CMsgBodyAdvScheduleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyAdvScheduleList.Marshal(b, m, deterministic)
}
func (m *CMsgBodyAdvScheduleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyAdvScheduleList.Merge(m, src)
}
func (m *CMsgBodyAdvScheduleList) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyAdvScheduleList.Size(m)
}
func (m *CMsgBodyAdvScheduleList) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyAdvScheduleList.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyAdvScheduleList proto.InternalMessageInfo

func (m *CMsgBodyAdvScheduleList) GetScheduleId() int32 {
	if m != nil && m.ScheduleId != nil {
		return *m.ScheduleId
	}
	return 0
}

func (m *CMsgBodyAdvScheduleList) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgBodyAdvScheduleList) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *CMsgBodyAdvScheduleList) GetPlayView() []*PlayView {
	if m != nil {
		return m.PlayView
	}
	return nil
}

// 广告排期回执
type AdvScheduleListAck struct {
	ScheduleId           *int32              `protobuf:"varint,1,req,name=scheduleId" json:"scheduleId,omitempty"`
	PlayId               *int32              `protobuf:"varint,2,req,name=playId" json:"playId,omitempty"`
	MaterialId           *int32              `protobuf:"varint,3,req,name=materialId" json:"materialId,omitempty"`
	ResCode              *AdvScheduleResCode `protobuf:"varint,4,req,name=resCode,enum=msginfo.AdvScheduleResCode" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AdvScheduleListAck) Reset()         { *m = AdvScheduleListAck{} }
func (m *AdvScheduleListAck) String() string { return proto.CompactTextString(m) }
func (*AdvScheduleListAck) ProtoMessage()    {}
func (*AdvScheduleListAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{41}
}

func (m *AdvScheduleListAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvScheduleListAck.Unmarshal(m, b)
}
func (m *AdvScheduleListAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvScheduleListAck.Marshal(b, m, deterministic)
}
func (m *AdvScheduleListAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvScheduleListAck.Merge(m, src)
}
func (m *AdvScheduleListAck) XXX_Size() int {
	return xxx_messageInfo_AdvScheduleListAck.Size(m)
}
func (m *AdvScheduleListAck) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvScheduleListAck.DiscardUnknown(m)
}

var xxx_messageInfo_AdvScheduleListAck proto.InternalMessageInfo

func (m *AdvScheduleListAck) GetScheduleId() int32 {
	if m != nil && m.ScheduleId != nil {
		return *m.ScheduleId
	}
	return 0
}

func (m *AdvScheduleListAck) GetPlayId() int32 {
	if m != nil && m.PlayId != nil {
		return *m.PlayId
	}
	return 0
}

func (m *AdvScheduleListAck) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

func (m *AdvScheduleListAck) GetResCode() AdvScheduleResCode {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return AdvScheduleResCode_RESCODE_RECIVE
}

// 扩展信息，用来下发柜机端的提示文案等信息
type ExtInfo struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtInfo) Reset()         { *m = ExtInfo{} }
func (m *ExtInfo) String() string { return proto.CompactTextString(m) }
func (*ExtInfo) ProtoMessage()    {}
func (*ExtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{42}
}

func (m *ExtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtInfo.Unmarshal(m, b)
}
func (m *ExtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtInfo.Marshal(b, m, deterministic)
}
func (m *ExtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtInfo.Merge(m, src)
}
func (m *ExtInfo) XXX_Size() int {
	return xxx_messageInfo_ExtInfo.Size(m)
}
func (m *ExtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExtInfo proto.InternalMessageInfo

func (m *ExtInfo) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *ExtInfo) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// 柜机上报广告排期状态回执
type CMsgBodyAdvScheduleListReport struct {
	DeviceId             *string               `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	AdvScheduleListAck   []*AdvScheduleListAck `protobuf:"bytes,2,rep,name=advScheduleListAck" json:"advScheduleListAck,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgBodyAdvScheduleListReport) Reset()         { *m = CMsgBodyAdvScheduleListReport{} }
func (m *CMsgBodyAdvScheduleListReport) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyAdvScheduleListReport) ProtoMessage()    {}
func (*CMsgBodyAdvScheduleListReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{43}
}

func (m *CMsgBodyAdvScheduleListReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyAdvScheduleListReport.Unmarshal(m, b)
}
func (m *CMsgBodyAdvScheduleListReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyAdvScheduleListReport.Marshal(b, m, deterministic)
}
func (m *CMsgBodyAdvScheduleListReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyAdvScheduleListReport.Merge(m, src)
}
func (m *CMsgBodyAdvScheduleListReport) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyAdvScheduleListReport.Size(m)
}
func (m *CMsgBodyAdvScheduleListReport) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyAdvScheduleListReport.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyAdvScheduleListReport proto.InternalMessageInfo

func (m *CMsgBodyAdvScheduleListReport) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyAdvScheduleListReport) GetAdvScheduleListAck() []*AdvScheduleListAck {
	if m != nil {
		return m.AdvScheduleListAck
	}
	return nil
}

// 广告播放统计数据上报
type CMsgBodyAdvPlayCount struct {
	DeviceId             *string         `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	CountStartTime       *int32          `protobuf:"varint,2,req,name=countStartTime" json:"countStartTime,omitempty"`
	CountReportTime      *int32          `protobuf:"varint,3,req,name=countReportTime" json:"countReportTime,omitempty"`
	AdvPlayCount         []*AdvPlayCount `protobuf:"bytes,4,rep,name=advPlayCount" json:"advPlayCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CMsgBodyAdvPlayCount) Reset()         { *m = CMsgBodyAdvPlayCount{} }
func (m *CMsgBodyAdvPlayCount) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyAdvPlayCount) ProtoMessage()    {}
func (*CMsgBodyAdvPlayCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{44}
}

func (m *CMsgBodyAdvPlayCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyAdvPlayCount.Unmarshal(m, b)
}
func (m *CMsgBodyAdvPlayCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyAdvPlayCount.Marshal(b, m, deterministic)
}
func (m *CMsgBodyAdvPlayCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyAdvPlayCount.Merge(m, src)
}
func (m *CMsgBodyAdvPlayCount) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyAdvPlayCount.Size(m)
}
func (m *CMsgBodyAdvPlayCount) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyAdvPlayCount.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyAdvPlayCount proto.InternalMessageInfo

func (m *CMsgBodyAdvPlayCount) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyAdvPlayCount) GetCountStartTime() int32 {
	if m != nil && m.CountStartTime != nil {
		return *m.CountStartTime
	}
	return 0
}

func (m *CMsgBodyAdvPlayCount) GetCountReportTime() int32 {
	if m != nil && m.CountReportTime != nil {
		return *m.CountReportTime
	}
	return 0
}

func (m *CMsgBodyAdvPlayCount) GetAdvPlayCount() []*AdvPlayCount {
	if m != nil {
		return m.AdvPlayCount
	}
	return nil
}

type AdvPlayCount struct {
	ScheduleId           *int32   `protobuf:"varint,2,req,name=scheduleId" json:"scheduleId,omitempty"`
	PlayId               *int32   `protobuf:"varint,3,req,name=playId" json:"playId,omitempty"`
	MaterialId           *int32   `protobuf:"varint,4,req,name=materialId" json:"materialId,omitempty"`
	PlayCount            *int32   `protobuf:"varint,5,req,name=playCount" json:"playCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdvPlayCount) Reset()         { *m = AdvPlayCount{} }
func (m *AdvPlayCount) String() string { return proto.CompactTextString(m) }
func (*AdvPlayCount) ProtoMessage()    {}
func (*AdvPlayCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{45}
}

func (m *AdvPlayCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvPlayCount.Unmarshal(m, b)
}
func (m *AdvPlayCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvPlayCount.Marshal(b, m, deterministic)
}
func (m *AdvPlayCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvPlayCount.Merge(m, src)
}
func (m *AdvPlayCount) XXX_Size() int {
	return xxx_messageInfo_AdvPlayCount.Size(m)
}
func (m *AdvPlayCount) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvPlayCount.DiscardUnknown(m)
}

var xxx_messageInfo_AdvPlayCount proto.InternalMessageInfo

func (m *AdvPlayCount) GetScheduleId() int32 {
	if m != nil && m.ScheduleId != nil {
		return *m.ScheduleId
	}
	return 0
}

func (m *AdvPlayCount) GetPlayId() int32 {
	if m != nil && m.PlayId != nil {
		return *m.PlayId
	}
	return 0
}

func (m *AdvPlayCount) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

func (m *AdvPlayCount) GetPlayCount() int32 {
	if m != nil && m.PlayCount != nil {
		return *m.PlayCount
	}
	return 0
}

// 广告播放统计数据上报服务器回执
type CMsgBodyAdvPlayCountAck struct {
	ScheduleId           *int32   `protobuf:"varint,1,req,name=scheduleId" json:"scheduleId,omitempty"`
	PlayId               *int32   `protobuf:"varint,2,req,name=playId" json:"playId,omitempty"`
	MaterialId           *int32   `protobuf:"varint,3,req,name=materialId" json:"materialId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyAdvPlayCountAck) Reset()         { *m = CMsgBodyAdvPlayCountAck{} }
func (m *CMsgBodyAdvPlayCountAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyAdvPlayCountAck) ProtoMessage()    {}
func (*CMsgBodyAdvPlayCountAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{46}
}

func (m *CMsgBodyAdvPlayCountAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyAdvPlayCountAck.Unmarshal(m, b)
}
func (m *CMsgBodyAdvPlayCountAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyAdvPlayCountAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyAdvPlayCountAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyAdvPlayCountAck.Merge(m, src)
}
func (m *CMsgBodyAdvPlayCountAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyAdvPlayCountAck.Size(m)
}
func (m *CMsgBodyAdvPlayCountAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyAdvPlayCountAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyAdvPlayCountAck proto.InternalMessageInfo

func (m *CMsgBodyAdvPlayCountAck) GetScheduleId() int32 {
	if m != nil && m.ScheduleId != nil {
		return *m.ScheduleId
	}
	return 0
}

func (m *CMsgBodyAdvPlayCountAck) GetPlayId() int32 {
	if m != nil && m.PlayId != nil {
		return *m.PlayId
	}
	return 0
}

func (m *CMsgBodyAdvPlayCountAck) GetMaterialId() int32 {
	if m != nil && m.MaterialId != nil {
		return *m.MaterialId
	}
	return 0
}

// 柜机上报柜机通用数据
type CMsgBodyExtInfoRequest struct {
	DeviceId             *string    `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	Volume               *int32     `protobuf:"varint,2,opt,name=volume,def=-1" json:"volume,omitempty"`
	ExtInfo              []*ExtInfo `protobuf:"bytes,3,rep,name=extInfo" json:"extInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CMsgBodyExtInfoRequest) Reset()         { *m = CMsgBodyExtInfoRequest{} }
func (m *CMsgBodyExtInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyExtInfoRequest) ProtoMessage()    {}
func (*CMsgBodyExtInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{47}
}

func (m *CMsgBodyExtInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyExtInfoRequest.Unmarshal(m, b)
}
func (m *CMsgBodyExtInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyExtInfoRequest.Marshal(b, m, deterministic)
}
func (m *CMsgBodyExtInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyExtInfoRequest.Merge(m, src)
}
func (m *CMsgBodyExtInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyExtInfoRequest.Size(m)
}
func (m *CMsgBodyExtInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyExtInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyExtInfoRequest proto.InternalMessageInfo

const Default_CMsgBodyExtInfoRequest_Volume int32 = -1

func (m *CMsgBodyExtInfoRequest) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyExtInfoRequest) GetVolume() int32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return Default_CMsgBodyExtInfoRequest_Volume
}

func (m *CMsgBodyExtInfoRequest) GetExtInfo() []*ExtInfo {
	if m != nil {
		return m.ExtInfo
	}
	return nil
}

type CMsgBodyHttpDnsUpdate struct {
	MqttList             []string `protobuf:"bytes,1,rep,name=mqttList" json:"mqttList,omitempty"`
	HttpList             []string `protobuf:"bytes,2,rep,name=httpList" json:"httpList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyHttpDnsUpdate) Reset()         { *m = CMsgBodyHttpDnsUpdate{} }
func (m *CMsgBodyHttpDnsUpdate) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyHttpDnsUpdate) ProtoMessage()    {}
func (*CMsgBodyHttpDnsUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{48}
}

func (m *CMsgBodyHttpDnsUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdate.Unmarshal(m, b)
}
func (m *CMsgBodyHttpDnsUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdate.Marshal(b, m, deterministic)
}
func (m *CMsgBodyHttpDnsUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyHttpDnsUpdate.Merge(m, src)
}
func (m *CMsgBodyHttpDnsUpdate) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdate.Size(m)
}
func (m *CMsgBodyHttpDnsUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyHttpDnsUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyHttpDnsUpdate proto.InternalMessageInfo

func (m *CMsgBodyHttpDnsUpdate) GetMqttList() []string {
	if m != nil {
		return m.MqttList
	}
	return nil
}

func (m *CMsgBodyHttpDnsUpdate) GetHttpList() []string {
	if m != nil {
		return m.HttpList
	}
	return nil
}

type CMsgBodyHttpDnsUpdateAck struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	ResCode              *RESCODE `protobuf:"varint,2,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyHttpDnsUpdateAck) Reset()         { *m = CMsgBodyHttpDnsUpdateAck{} }
func (m *CMsgBodyHttpDnsUpdateAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyHttpDnsUpdateAck) ProtoMessage()    {}
func (*CMsgBodyHttpDnsUpdateAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{49}
}

func (m *CMsgBodyHttpDnsUpdateAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdateAck.Unmarshal(m, b)
}
func (m *CMsgBodyHttpDnsUpdateAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdateAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyHttpDnsUpdateAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyHttpDnsUpdateAck.Merge(m, src)
}
func (m *CMsgBodyHttpDnsUpdateAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyHttpDnsUpdateAck.Size(m)
}
func (m *CMsgBodyHttpDnsUpdateAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyHttpDnsUpdateAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyHttpDnsUpdateAck proto.InternalMessageInfo

func (m *CMsgBodyHttpDnsUpdateAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyHttpDnsUpdateAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

type CMsgBodyGetServerTimeReq struct {
	MsgId                *int32   `protobuf:"varint,1,req,name=msgId" json:"msgId,omitempty"`
	DeviceId             *string  `protobuf:"bytes,2,req,name=deviceId" json:"deviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGetServerTimeReq) Reset()         { *m = CMsgBodyGetServerTimeReq{} }
func (m *CMsgBodyGetServerTimeReq) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetServerTimeReq) ProtoMessage()    {}
func (*CMsgBodyGetServerTimeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{50}
}

func (m *CMsgBodyGetServerTimeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetServerTimeReq.Unmarshal(m, b)
}
func (m *CMsgBodyGetServerTimeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetServerTimeReq.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetServerTimeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetServerTimeReq.Merge(m, src)
}
func (m *CMsgBodyGetServerTimeReq) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetServerTimeReq.Size(m)
}
func (m *CMsgBodyGetServerTimeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetServerTimeReq.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetServerTimeReq proto.InternalMessageInfo

func (m *CMsgBodyGetServerTimeReq) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *CMsgBodyGetServerTimeReq) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type CMsgBodyGetServerTimeAck struct {
	MsgId                *int32   `protobuf:"varint,1,req,name=msgId" json:"msgId,omitempty"`
	DeviceId             *string  `protobuf:"bytes,2,req,name=deviceId" json:"deviceId,omitempty"`
	ReqRecvTimeSec       *int32   `protobuf:"varint,3,req,name=reqRecvTimeSec" json:"reqRecvTimeSec,omitempty"`
	ReqRecvTimeMSec      *int32   `protobuf:"varint,4,req,name=reqRecvTimeMSec" json:"reqRecvTimeMSec,omitempty"`
	AckSendTimeSec       *int32   `protobuf:"varint,5,req,name=ackSendTimeSec" json:"ackSendTimeSec,omitempty"`
	AckSendTimeMSec      *int32   `protobuf:"varint,6,req,name=ackSendTimeMSec" json:"ackSendTimeMSec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGetServerTimeAck) Reset()         { *m = CMsgBodyGetServerTimeAck{} }
func (m *CMsgBodyGetServerTimeAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetServerTimeAck) ProtoMessage()    {}
func (*CMsgBodyGetServerTimeAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{51}
}

func (m *CMsgBodyGetServerTimeAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetServerTimeAck.Unmarshal(m, b)
}
func (m *CMsgBodyGetServerTimeAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetServerTimeAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetServerTimeAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetServerTimeAck.Merge(m, src)
}
func (m *CMsgBodyGetServerTimeAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetServerTimeAck.Size(m)
}
func (m *CMsgBodyGetServerTimeAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetServerTimeAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetServerTimeAck proto.InternalMessageInfo

func (m *CMsgBodyGetServerTimeAck) GetMsgId() int32 {
	if m != nil && m.MsgId != nil {
		return *m.MsgId
	}
	return 0
}

func (m *CMsgBodyGetServerTimeAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyGetServerTimeAck) GetReqRecvTimeSec() int32 {
	if m != nil && m.ReqRecvTimeSec != nil {
		return *m.ReqRecvTimeSec
	}
	return 0
}

func (m *CMsgBodyGetServerTimeAck) GetReqRecvTimeMSec() int32 {
	if m != nil && m.ReqRecvTimeMSec != nil {
		return *m.ReqRecvTimeMSec
	}
	return 0
}

func (m *CMsgBodyGetServerTimeAck) GetAckSendTimeSec() int32 {
	if m != nil && m.AckSendTimeSec != nil {
		return *m.AckSendTimeSec
	}
	return 0
}

func (m *CMsgBodyGetServerTimeAck) GetAckSendTimeMSec() int32 {
	if m != nil && m.AckSendTimeMSec != nil {
		return *m.AckSendTimeMSec
	}
	return 0
}

type Battversion struct {
	Num                  *int32   `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	Battversion          *string  `protobuf:"bytes,2,opt,name=battversion" json:"battversion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Battversion) Reset()         { *m = Battversion{} }
func (m *Battversion) String() string { return proto.CompactTextString(m) }
func (*Battversion) ProtoMessage()    {}
func (*Battversion) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{52}
}

func (m *Battversion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Battversion.Unmarshal(m, b)
}
func (m *Battversion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Battversion.Marshal(b, m, deterministic)
}
func (m *Battversion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Battversion.Merge(m, src)
}
func (m *Battversion) XXX_Size() int {
	return xxx_messageInfo_Battversion.Size(m)
}
func (m *Battversion) XXX_DiscardUnknown() {
	xxx_messageInfo_Battversion.DiscardUnknown(m)
}

var xxx_messageInfo_Battversion proto.InternalMessageInfo

func (m *Battversion) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *Battversion) GetBattversion() string {
	if m != nil && m.Battversion != nil {
		return *m.Battversion
	}
	return ""
}

type CMsgBodyGetBattVersionReq struct {
	DeviceId             *string  `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyGetBattVersionReq) Reset()         { *m = CMsgBodyGetBattVersionReq{} }
func (m *CMsgBodyGetBattVersionReq) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetBattVersionReq) ProtoMessage()    {}
func (*CMsgBodyGetBattVersionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{53}
}

func (m *CMsgBodyGetBattVersionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetBattVersionReq.Unmarshal(m, b)
}
func (m *CMsgBodyGetBattVersionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetBattVersionReq.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetBattVersionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetBattVersionReq.Merge(m, src)
}
func (m *CMsgBodyGetBattVersionReq) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetBattVersionReq.Size(m)
}
func (m *CMsgBodyGetBattVersionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetBattVersionReq.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetBattVersionReq proto.InternalMessageInfo

func (m *CMsgBodyGetBattVersionReq) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

type CMsgBodyGetBattVersionAck struct {
	DeviceId             *string        `protobuf:"bytes,1,req,name=deviceId" json:"deviceId,omitempty"`
	BattVersion          []*Battversion `protobuf:"bytes,2,rep,name=battVersion" json:"battVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CMsgBodyGetBattVersionAck) Reset()         { *m = CMsgBodyGetBattVersionAck{} }
func (m *CMsgBodyGetBattVersionAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyGetBattVersionAck) ProtoMessage()    {}
func (*CMsgBodyGetBattVersionAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{54}
}

func (m *CMsgBodyGetBattVersionAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyGetBattVersionAck.Unmarshal(m, b)
}
func (m *CMsgBodyGetBattVersionAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyGetBattVersionAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyGetBattVersionAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyGetBattVersionAck.Merge(m, src)
}
func (m *CMsgBodyGetBattVersionAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyGetBattVersionAck.Size(m)
}
func (m *CMsgBodyGetBattVersionAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyGetBattVersionAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyGetBattVersionAck proto.InternalMessageInfo

func (m *CMsgBodyGetBattVersionAck) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CMsgBodyGetBattVersionAck) GetBattVersion() []*Battversion {
	if m != nil {
		return m.BattVersion
	}
	return nil
}

type CMsgBodyBattVersionAck struct {
	ResCode              *RESCODE `protobuf:"varint,1,req,name=resCode,enum=msginfo.RESCODE" json:"resCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgBodyBattVersionAck) Reset()         { *m = CMsgBodyBattVersionAck{} }
func (m *CMsgBodyBattVersionAck) String() string { return proto.CompactTextString(m) }
func (*CMsgBodyBattVersionAck) ProtoMessage()    {}
func (*CMsgBodyBattVersionAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_641f46f779a29aa9, []int{55}
}

func (m *CMsgBodyBattVersionAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgBodyBattVersionAck.Unmarshal(m, b)
}
func (m *CMsgBodyBattVersionAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgBodyBattVersionAck.Marshal(b, m, deterministic)
}
func (m *CMsgBodyBattVersionAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgBodyBattVersionAck.Merge(m, src)
}
func (m *CMsgBodyBattVersionAck) XXX_Size() int {
	return xxx_messageInfo_CMsgBodyBattVersionAck.Size(m)
}
func (m *CMsgBodyBattVersionAck) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgBodyBattVersionAck.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgBodyBattVersionAck proto.InternalMessageInfo

func (m *CMsgBodyBattVersionAck) GetResCode() RESCODE {
	if m != nil && m.ResCode != nil {
		return *m.ResCode
	}
	return RESCODE_RESCODEFAIL
}

func init() {
	proto.RegisterType((*CMsg)(nil), "msginfo.CMsg")
	proto.RegisterType((*CMsHead)(nil), "msginfo.CMsHead")
	proto.RegisterType((*Slot)(nil), "msginfo.Slot")
	proto.RegisterType((*Battery)(nil), "msginfo.Battery")
	proto.RegisterType((*Device)(nil), "msginfo.Device")
	proto.RegisterType((*J182J_Device)(nil), "msginfo.J182J_Device")
	proto.RegisterType((*Extended)(nil), "msginfo.Extended")
	proto.RegisterType((*CMsgBodyDeviceStatus)(nil), "msginfo.CMsgBodyDeviceStatus")
	proto.RegisterType((*CMsgBodyDeviceOpen)(nil), "msginfo.CMsgBodyDeviceOpen")
	proto.RegisterType((*CMsgBodyBatteryBack)(nil), "msginfo.CMsgBodyBatteryBack")
	proto.RegisterType((*CMsgBodyDeviceAck)(nil), "msginfo.CMsgBodyDeviceAck")
	proto.RegisterType((*CMsgBodyUpgrade)(nil), "msginfo.CMsgBodyUpgrade")
	proto.RegisterType((*CMsgBodyUpgradeAck)(nil), "msginfo.CMsgBodyUpgradeAck")
	proto.RegisterType((*CMsgBodyDeviceUpdate)(nil), "msginfo.CMsgBodyDeviceUpdate")
	proto.RegisterType((*CMsgBodyWifiSetupInfo)(nil), "msginfo.CMsgBodyWifiSetupInfo")
	proto.RegisterType((*CMsgBodyWifiSetupAck)(nil), "msginfo.CMsgBodyWifiSetupAck")
	proto.RegisterType((*CMsgBodyGsmSetupInfo)(nil), "msginfo.CMsgBodyGsmSetupInfo")
	proto.RegisterType((*CMsgBodyGsmSetupAck)(nil), "msginfo.CMsgBodyGsmSetupAck")
	proto.RegisterType((*CMsgBodyGsmFlowInfo)(nil), "msginfo.CMsgBodyGsmFlowInfo")
	proto.RegisterType((*CMsgBodyGsmFlowAck)(nil), "msginfo.CMsgBodyGsmFlowAck")
	proto.RegisterType((*CMsgBodyInstallBatteryResult)(nil), "msginfo.CMsgBodyInstallBatteryResult")
	proto.RegisterType((*CMsgBodyGetBatteryPassword)(nil), "msginfo.CMsgBodyGetBatteryPassword")
	proto.RegisterType((*CMsgBodyGetBatteryPasswordAck)(nil), "msginfo.CMsgBodyGetBatteryPasswordAck")
	proto.RegisterType((*CMsgBodyWifiClearInfo)(nil), "msginfo.CMsgBodyWifiClearInfo")
	proto.RegisterType((*CMsgBodyWifiClearAck)(nil), "msginfo.CMsgBodyWifiClearAck")
	proto.RegisterType((*CMsgBodyDeviceOfflineStatus)(nil), "msginfo.CMsgBodyDeviceOfflineStatus")
	proto.RegisterType((*CMsgBodyDeviceOfflineAck)(nil), "msginfo.CMsgBodyDeviceOfflineAck")
	proto.RegisterType((*CMsgBodyDeviceRebootSys)(nil), "msginfo.CMsgBodyDeviceRebootSys")
	proto.RegisterType((*CMsgBodyDeviceRebootSysAck)(nil), "msginfo.CMsgBodyDeviceRebootSysAck")
	proto.RegisterType((*CMsgBodySmartLinkAuthReq)(nil), "msginfo.CMsgBodySmartLinkAuthReq")
	proto.RegisterType((*CMsgBodySmartLinkAuthAck)(nil), "msginfo.CMsgBodySmartLinkAuthAck")
	proto.RegisterType((*CMsgBodySmartLinkResult)(nil), "msginfo.CMsgBodySmartLinkResult")
	proto.RegisterType((*CMsgBodySlotLock)(nil), "msginfo.CMsgBodySlotLock")
	proto.RegisterType((*CMsgBodySlotLockAck)(nil), "msginfo.CMsgBodySlotLockAck")
	proto.RegisterType((*TipsImages)(nil), "msginfo.TipsImages")
	proto.RegisterType((*CMsgBodyTipsImages)(nil), "msginfo.CMsgBodyTipsImages")
	proto.RegisterType((*TipsImagesAck)(nil), "msginfo.TipsImagesAck")
	proto.RegisterType((*CMsgBodyTipsImagesReport)(nil), "msginfo.CMsgBodyTipsImagesReport")
	proto.RegisterType((*Material)(nil), "msginfo.Material")
	proto.RegisterType((*PlayView)(nil), "msginfo.PlayView")
	proto.RegisterType((*CMsgBodyAdvScheduleList)(nil), "msginfo.CMsgBodyAdvScheduleList")
	proto.RegisterType((*AdvScheduleListAck)(nil), "msginfo.AdvScheduleListAck")
	proto.RegisterType((*ExtInfo)(nil), "msginfo.extInfo")
	proto.RegisterType((*CMsgBodyAdvScheduleListReport)(nil), "msginfo.CMsgBodyAdvScheduleListReport")
	proto.RegisterType((*CMsgBodyAdvPlayCount)(nil), "msginfo.CMsgBodyAdvPlayCount")
	proto.RegisterType((*AdvPlayCount)(nil), "msginfo.AdvPlayCount")
	proto.RegisterType((*CMsgBodyAdvPlayCountAck)(nil), "msginfo.CMsgBodyAdvPlayCountAck")
	proto.RegisterType((*CMsgBodyExtInfoRequest)(nil), "msginfo.CMsgBodyExtInfoRequest")
	proto.RegisterType((*CMsgBodyHttpDnsUpdate)(nil), "msginfo.CMsgBodyHttpDnsUpdate")
	proto.RegisterType((*CMsgBodyHttpDnsUpdateAck)(nil), "msginfo.CMsgBodyHttpDnsUpdateAck")
	proto.RegisterType((*CMsgBodyGetServerTimeReq)(nil), "msginfo.CMsgBodyGetServerTimeReq")
	proto.RegisterType((*CMsgBodyGetServerTimeAck)(nil), "msginfo.CMsgBodyGetServerTimeAck")
	proto.RegisterType((*Battversion)(nil), "msginfo.Battversion")
	proto.RegisterType((*CMsgBodyGetBattVersionReq)(nil), "msginfo.CMsgBodyGetBattVersionReq")
	proto.RegisterType((*CMsgBodyGetBattVersionAck)(nil), "msginfo.CMsgBodyGetBattVersionAck")
	proto.RegisterType((*CMsgBodyBattVersionAck)(nil), "msginfo.CMsgBodyBattVersionAck")
	proto.RegisterEnum("msginfo.CMD", CMD_name, CMD_value)
	proto.RegisterEnum("msginfo.HEART_BEAT_DEVICE_CODE", HEART_BEAT_DEVICE_CODE_name, HEART_BEAT_DEVICE_CODE_value)
	proto.RegisterEnum("msginfo.HEART_BEAT_SLOT_CODE", HEART_BEAT_SLOT_CODE_name, HEART_BEAT_SLOT_CODE_value)
	proto.RegisterEnum("msginfo.HEART_BEAT_BATTERY_CODE", HEART_BEAT_BATTERY_CODE_name, HEART_BEAT_BATTERY_CODE_value)
	proto.RegisterEnum("msginfo.ENABLE_BORROW_STATUS", ENABLE_BORROW_STATUS_name, ENABLE_BORROW_STATUS_value)
	proto.RegisterEnum("msginfo.SLOTLOCKFLAG", SLOTLOCKFLAG_name, SLOTLOCKFLAG_value)
	proto.RegisterEnum("msginfo.PROJECTTYPE", PROJECTTYPE_name, PROJECTTYPE_value)
	proto.RegisterEnum("msginfo.DEVACTION", DEVACTION_name, DEVACTION_value)
	proto.RegisterEnum("msginfo.BATTERY_BORROW_RETURN_CODE", BATTERY_BORROW_RETURN_CODE_name, BATTERY_BORROW_RETURN_CODE_value)
	proto.RegisterEnum("msginfo.UPGRADESTATUS", UPGRADESTATUS_name, UPGRADESTATUS_value)
	proto.RegisterEnum("msginfo.WIFIAUTHMODE", WIFIAUTHMODE_name, WIFIAUTHMODE_value)
	proto.RegisterEnum("msginfo.WIFIENCRYPT", WIFIENCRYPT_name, WIFIENCRYPT_value)
	proto.RegisterEnum("msginfo.CONNECTNETTYPE", CONNECTNETTYPE_name, CONNECTNETTYPE_value)
	proto.RegisterEnum("msginfo.CURRENTNETSTATE", CURRENTNETSTATE_name, CURRENTNETSTATE_value)
	proto.RegisterEnum("msginfo.REALPLMN", REALPLMN_name, REALPLMN_value)
	proto.RegisterEnum("msginfo.RESCODE", RESCODE_name, RESCODE_value)
	proto.RegisterEnum("msginfo.InstallBatteryOpenCode", InstallBatteryOpenCode_name, InstallBatteryOpenCode_value)
	proto.RegisterEnum("msginfo.InstallBatteryResCode", InstallBatteryResCode_name, InstallBatteryResCode_value)
	proto.RegisterEnum("msginfo.DEVICE_OFFLINE_STATUS_CODE", DEVICE_OFFLINE_STATUS_CODE_name, DEVICE_OFFLINE_STATUS_CODE_value)
	proto.RegisterEnum("msginfo.DEVICE_REBOOT_CODE", DEVICE_REBOOT_CODE_name, DEVICE_REBOOT_CODE_value)
	proto.RegisterEnum("msginfo.MaterialType", MaterialType_name, MaterialType_value)
	proto.RegisterEnum("msginfo.AdvScheduleResCode", AdvScheduleResCode_name, AdvScheduleResCode_value)
}

func init() { proto.RegisterFile("devproto.proto", fileDescriptor_641f46f779a29aa9) }

var fileDescriptor_641f46f779a29aa9 = []byte{
	// 4848 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0xcd, 0x6f, 0xe3, 0x48,
	0x76, 0x1f, 0x4a, 0x96, 0x65, 0x3d, 0xdb, 0x32, 0x5d, 0x76, 0xdb, 0xea, 0xef, 0x6e, 0xce, 0x66,
	0xb6, 0x47, 0x3b, 0xdd, 0x48, 0x7b, 0xa6, 0x67, 0x7b, 0xb3, 0x3b, 0x41, 0x28, 0x89, 0x96, 0x35,
	0x2d, 0x89, 0x4a, 0x91, 0xb2, 0xd7, 0x09, 0x10, 0x82, 0x96, 0x68, 0xb7, 0xd6, 0xfa, 0xf0, 0x48,
	0xb4, 0xbb, 0x1d, 0xe4, 0x94, 0x04, 0x83, 0x20, 0x08, 0x90, 0x6b, 0x2e, 0x01, 0x02, 0x04, 0xc8,
	0x79, 0xf3, 0xb9, 0xa7, 0x20, 0xc8, 0x35, 0x39, 0xe5, 0x9f, 0x48, 0x63, 0x3f, 0x02, 0xe4, 0x96,
	0x00, 0x01, 0x16, 0xc1, 0x2b, 0x16, 0xc9, 0x22, 0x29, 0xaa, 0xbb, 0x91, 0xc9, 0xc5, 0x50, 0xfd,
	0xea, 0xbd, 0xc7, 0x57, 0xef, 0xab, 0xaa, 0x5e, 0x19, 0x8a, 0x7d, 0xe7, 0xea, 0x62, 0x3a, 0x71,
	0x27, 0x4f, 0xd8, 0x5f, 0x92, 0x1f, 0xcd, 0xce, 0x06, 0xe3, 0xd3, 0x89, 0xf2, 0xf5, 0x4d, 0x58,
	0xaa, 0xb6, 0x66, 0x67, 0xa4, 0x0c, 0x88, 0x1d, 0x38, 0x76, 0xbf, 0x24, 0x3d, 0xc8, 0x3c, 0x5a,
	0xdd, 0x93, 0x9f, 0x70, 0x9a, 0x27, 0xd5, 0xd6, 0x0c, 0x71, 0xea, 0x13, 0x90, 0x06, 0xc8, 0x7d,
	0xe7, 0x6a, 0xd0, 0x73, 0x0c, 0xd7, 0x76, 0x2f, 0x67, 0x95, 0x49, 0xff, 0xba, 0x94, 0x79, 0x20,
	0x3d, 0x5a, 0xdd, 0xbb, 0x2b, 0x32, 0x9d, 0xe1, 0x44, 0x4d, 0x20, 0xa4, 0x09, 0x36, 0x52, 0x85,
	0xe2, 0xe4, 0xc2, 0x19, 0x7b, 0x54, 0x4c, 0x50, 0x96, 0x09, 0xba, 0x9d, 0x22, 0x48, 0xbf, 0x70,
	0xc6, 0x34, 0xc6, 0x42, 0x0e, 0x60, 0x33, 0x44, 0xd4, 0xde, 0x39, 0x93, 0xb3, 0xc4, 0xe4, 0xdc,
	0x4a, 0x91, 0xa3, 0xf6, 0xce, 0x69, 0x92, 0x89, 0x34, 0x61, 0xf3, 0xd5, 0xe0, 0x74, 0x60, 0x38,
	0xee, 0xe5, 0x45, 0x63, 0x7c, 0x3a, 0x61, 0x92, 0x72, 0x4c, 0xd2, 0xbd, 0x84, 0xa4, 0x23, 0x91,
	0x92, 0x26, 0x19, 0xd1, 0x4e, 0x01, 0xe8, 0xab, 0xb5, 0x9c, 0x62, 0xa7, 0x23, 0x81, 0x90, 0x26,
	0xd8, 0xc8, 0x1e, 0xe4, 0x2f, 0x2f, 0xce, 0xa6, 0x76, 0xdf, 0x29, 0xe5, 0x99, 0x84, 0x52, 0x42,
	0x42, 0xd7, 0x9b, 0xa7, 0x3e, 0x21, 0x39, 0x86, 0xed, 0xc1, 0x78, 0xe6, 0xda, 0xc3, 0x61, 0xc5,
	0x76, 0x5d, 0x67, 0x7a, 0x4d, 0x9d, 0xd9, 0xe5, 0xd0, 0x2d, 0xad, 0x30, 0x01, 0xbf, 0x92, 0x10,
	0xd0, 0x98, 0x43, 0x4c, 0xe7, 0x8a, 0x20, 0xbf, 0x0d, 0x3b, 0x67, 0x8e, 0xcb, 0xb1, 0x8e, 0x3d,
	0x9b, 0xbd, 0x9a, 0x4c, 0xfb, 0x6c, 0x7d, 0x05, 0x26, 0xfc, 0xc3, 0x84, 0xf0, 0x7a, 0x82, 0x9c,
	0xa6, 0x88, 0x20, 0x7d, 0xb8, 0x99, 0x9c, 0xf1, 0xed, 0x07, 0x4c, 0xfe, 0x47, 0xef, 0x20, 0x1f,
	0x0d, 0x99, 0x2e, 0x88, 0x7c, 0x1f, 0x80, 0x1b, 0x4a, 0xed, 0x9d, 0x97, 0x56, 0x53, 0xa2, 0xae,
	0x1b, 0x90, 0x50, 0x81, 0x1c, 0x3d, 0x7b, 0x79, 0xd1, 0xb7, 0x5d, 0x47, 0x08, 0xdc, 0xb5, 0x85,
	0x19, 0xd0, 0x65, 0xe4, 0x34, 0xc1, 0x86, 0xa2, 0xce, 0x66, 0xa3, 0x68, 0xc4, 0xad, 0xa7, 0x88,
	0xaa, 0x0b, 0x84, 0x34, 0xc1, 0x46, 0xf6, 0x61, 0xc3, 0xc7, 0x7c, 0x73, 0x15, 0x99, 0xa4, 0x3b,
	0xa9, 0x92, 0x70, 0x61, 0x71, 0x26, 0x2e, 0x67, 0x7f, 0x38, 0x79, 0x15, 0x68, 0xb4, 0x91, 0x2e,
	0xc7, 0xa7, 0xa3, 0x71, 0x26, 0x4c, 0x6e, 0x0e, 0xf9, 0xea, 0xc8, 0x29, 0x66, 0xae, 0x07, 0x64,
	0x34, 0xc6, 0x82, 0xca, 0x9c, 0xd8, 0xbd, 0x73, 0xee, 0x45, 0x26, 0x65, 0x33, 0x45, 0x19, 0x9f,
	0xc6, 0xc6, 0x45, 0xc5, 0x98, 0x30, 0xb5, 0x7b, 0x43, 0xc7, 0x9e, 0x62, 0x6a, 0x05, 0xcb, 0x22,
	0x0b, 0x52, 0xbb, 0x8a, 0xd4, 0x5e, 0x6a, 0x27, 0x18, 0xd1, 0x6b, 0x0c, 0x44, 0x42, 0x7f, 0x71,
	0x5b, 0x0b, 0x52, 0x9b, 0x09, 0x63, 0xa9, 0x1d, 0x67, 0x23, 0x14, 0x36, 0xf5, 0xd3, 0xd3, 0xe1,
	0x60, 0x2c, 0x96, 0xd3, 0x6d, 0x26, 0xeb, 0x5b, 0x69, 0x55, 0x50, 0xa4, 0xa7, 0x49, 0x76, 0xd2,
	0x80, 0x22, 0x07, 0x7d, 0xe5, 0x6e, 0x30, 0x81, 0x0f, 0x17, 0x0b, 0x64, 0xf6, 0x8f, 0x32, 0x92,
	0x7d, 0x58, 0x9f, 0x3a, 0x27, 0x93, 0x89, 0x6b, 0x5c, 0x7b, 0xaa, 0xed, 0x30, 0x49, 0x0f, 0x52,
	0x24, 0x51, 0x9f, 0x96, 0x46, 0xd9, 0x88, 0x0e, 0x72, 0x00, 0xf8, 0x4a, 0xed, 0xa6, 0x14, 0x8b,
	0x98, 0x28, 0x66, 0xb7, 0x38, 0x33, 0x69, 0x81, 0x3c, 0x1b, 0xd9, 0x53, 0xb7, 0x39, 0x18, 0x9f,
	0xab, 0x97, 0xee, 0x4b, 0xea, 0x7c, 0x55, 0xba, 0x95, 0xb2, 0x4a, 0x23, 0x46, 0x48, 0x13, 0xac,
	0x09, 0x71, 0x58, 0x15, 0x6e, 0xbf, 0x8b, 0x38, 0xa6, 0x5d, 0x9c, 0x95, 0x7c, 0x09, 0x1b, 0x01,
	0xc6, 0xeb, 0xee, 0x9d, 0x14, 0xc3, 0x19, 0x51, 0x3a, 0x1a, 0x67, 0x24, 0x5f, 0xc0, 0xda, 0x70,
	0xd2, 0x3b, 0x37, 0x86, 0x13, 0x97, 0x99, 0xed, 0x2e, 0x13, 0x74, 0x33, 0x29, 0x68, 0x38, 0x71,
	0x9b, 0x93, 0xde, 0x39, 0x8d, 0x90, 0x63, 0x06, 0xf9, 0x63, 0xdf, 0xf0, 0xf7, 0x52, 0x32, 0xc8,
	0x97, 0xc0, 0xca, 0x42, 0x8c, 0x09, 0xd3, 0xd9, 0x1d, 0x5c, 0xcc, 0x1a, 0x23, 0xfb, 0xcc, 0xf1,
	0x42, 0xe1, 0x7e, 0x4a, 0x3a, 0x9b, 0x01, 0x19, 0x8d, 0xb1, 0x90, 0x2e, 0x6c, 0x87, 0x08, 0x75,
	0x2e, 0x26, 0x53, 0x6f, 0x4d, 0x0f, 0x52, 0x4c, 0x6d, 0xc6, 0x88, 0xe9, 0x5c, 0x76, 0xcc, 0xee,
	0x97, 0xae, 0x7b, 0x51, 0x1b, 0xcf, 0xbc, 0x42, 0xcb, 0x64, 0x3e, 0x4c, 0xc9, 0xee, 0x03, 0x91,
	0x92, 0x26, 0x19, 0x51, 0xc9, 0x08, 0xe8, 0x9b, 0x4d, 0x49, 0x51, 0xf2, 0x20, 0x46, 0x4c, 0xe7,
	0xb2, 0x63, 0x88, 0x9d, 0x39, 0xae, 0xe1, 0x4c, 0xaf, 0x9c, 0xa9, 0x39, 0x18, 0x39, 0x18, 0xb1,
	0x1f, 0xa7, 0x88, 0xac, 0xc7, 0x08, 0x69, 0x82, 0x35, 0x21, 0x0e, 0x23, 0xb6, 0xfc, 0x2e, 0xe2,
	0x58, 0xc4, 0xc6, 0x59, 0x49, 0x07, 0x36, 0xf9, 0x6e, 0x79, 0xe8, 0x4c, 0x67, 0x83, 0xc9, 0x18,
	0xd5, 0xfb, 0x0e, 0x93, 0xa7, 0xa4, 0x6d, 0xb7, 0x21, 0x25, 0x4d, 0x32, 0x27, 0x25, 0xa2, 0x86,
	0x9f, 0xbc, 0x93, 0x44, 0x76, 0x3e, 0x4b, 0x30, 0x13, 0x1d, 0xc8, 0x49, 0x04, 0x61, 0x6e, 0x79,
	0xcc, 0x44, 0xde, 0x9f, 0xbb, 0x1f, 0x08, 0xf2, 0xe6, 0xb0, 0x12, 0x03, 0xb6, 0xec, 0xfe, 0x95,
	0xd1, 0x7b, 0xe9, 0xf4, 0x2f, 0x87, 0x4e, 0x73, 0x30, 0xf3, 0xa2, 0xf1, 0xa7, 0xf9, 0x94, 0x5c,
	0x55, 0xa3, 0xc4, 0x74, 0x1e, 0x37, 0x39, 0x02, 0x12, 0x83, 0x71, 0xe1, 0x3f, 0xcb, 0xa7, 0x1c,
	0x5d, 0xe2, 0x32, 0xbd, 0x38, 0x9f, 0x23, 0x82, 0x54, 0x60, 0xcd, 0xee, 0x5f, 0x75, 0x86, 0xf6,
	0x75, 0x75, 0x72, 0x39, 0x76, 0x4b, 0x3f, 0xcf, 0xa7, 0x6c, 0x39, 0xaa, 0x40, 0x45, 0x23, 0x3c,
	0xe4, 0x05, 0x6c, 0x88, 0x63, 0xd4, 0xec, 0x17, 0x0b, 0x56, 0x2b, 0x12, 0xd2, 0x38, 0x27, 0x39,
	0x80, 0xa2, 0xf3, 0xda, 0x65, 0x9b, 0xa4, 0xf3, 0xd5, 0xa5, 0x33, 0x73, 0x4b, 0xbf, 0xcc, 0xa7,
	0x38, 0x43, 0x8b, 0xd0, 0xd1, 0x18, 0x9f, 0xf2, 0x13, 0x09, 0xf2, 0xfc, 0xa2, 0x41, 0xee, 0x41,
	0xb6, 0x37, 0xf2, 0xee, 0x21, 0xc5, 0xbd, 0x35, 0x41, 0x52, 0x8d, 0xe2, 0x04, 0x29, 0x41, 0xfe,
	0xca, 0x73, 0x23, 0xbb, 0x76, 0x14, 0xa8, 0x3f, 0x24, 0x3b, 0xb0, 0xec, 0x4e, 0xed, 0xf1, 0xa0,
	0xcf, 0xae, 0x11, 0x05, 0xca, 0x47, 0xc8, 0x71, 0x36, 0x9d, 0x5c, 0x5e, 0x0c, 0xfa, 0xec, 0x5e,
	0x90, 0xa3, 0xfe, 0x10, 0x67, 0x9c, 0xe9, 0xb4, 0x37, 0xe9, 0x3b, 0xec, 0x9c, 0x9f, 0xa3, 0xfe,
	0x90, 0x7c, 0x04, 0x1b, 0x2f, 0x1d, 0x7b, 0xea, 0x5a, 0x27, 0x8e, 0xed, 0x5a, 0xa7, 0x43, 0xfb,
	0x8c, 0x1d, 0xde, 0x57, 0xe8, 0x3a, 0x83, 0x2b, 0x8e, 0xed, 0xee, 0x0f, 0xed, 0x33, 0x65, 0x04,
	0x4b, 0x58, 0x25, 0x89, 0x0c, 0xd9, 0xf1, 0xe5, 0x88, 0x69, 0x9d, 0xa3, 0xf8, 0x93, 0x3c, 0x83,
	0xe5, 0x19, 0xdb, 0x93, 0x4b, 0x19, 0xb6, 0x94, 0xd0, 0x4f, 0x07, 0x9a, 0x4a, 0x4d, 0xab, 0xa2,
	0xa9, 0xa6, 0x65, 0x34, 0x75, 0xd3, 0xaa, 0xea, 0x35, 0x8d, 0x72, 0x62, 0x72, 0x07, 0x0a, 0x27,
	0xde, 0xc1, 0x65, 0x36, 0xe6, 0xeb, 0x08, 0x01, 0xe5, 0x5f, 0xb2, 0x90, 0xe7, 0xe7, 0x9a, 0x28,
	0x25, 0x7e, 0x58, 0xa4, 0x24, 0xf7, 0x00, 0x5c, 0x67, 0x74, 0x31, 0xb5, 0xdd, 0xcb, 0xa9, 0xc3,
	0x54, 0xc8, 0x50, 0x01, 0x61, 0x66, 0x9c, 0x0c, 0x5d, 0xfb, 0xcc, 0x29, 0x65, 0x99, 0xd2, 0xfe,
	0x90, 0x3c, 0x01, 0x72, 0x7a, 0x39, 0x1c, 0x56, 0x5f, 0xda, 0xd3, 0x33, 0xa7, 0x6a, 0x5f, 0xd8,
	0xbd, 0x81, 0x8b, 0x37, 0x2a, 0x24, 0x9a, 0x33, 0x43, 0x3e, 0x81, 0xcd, 0xa9, 0x33, 0xb2, 0x07,
	0xe3, 0xc1, 0xf8, 0x2c, 0x20, 0xcf, 0x31, 0xf2, 0xe4, 0x04, 0xf9, 0x08, 0x8a, 0xf6, 0x95, 0x33,
	0xb5, 0xcf, 0x9c, 0xea, 0xe5, 0x74, 0xea, 0x8c, 0xdd, 0xd2, 0x32, 0x23, 0x8d, 0xa1, 0xa8, 0x7f,
	0xef, 0xba, 0x37, 0x74, 0xbc, 0x58, 0xcf, 0x33, 0x1a, 0x01, 0x21, 0x8f, 0x60, 0xe3, 0x64, 0x34,
	0x33, 0xec, 0x53, 0xc7, 0xbd, 0xf6, 0xce, 0x3e, 0xa5, 0x15, 0x46, 0x14, 0x87, 0xc9, 0x2d, 0x58,
	0x39, 0x19, 0xcd, 0xd0, 0x5b, 0xb3, 0x52, 0x81, 0x91, 0x04, 0x63, 0xf2, 0x3c, 0x70, 0x12, 0x30,
	0x27, 0x3d, 0x98, 0xe7, 0xa4, 0x8a, 0x6a, 0x9a, 0x1a, 0x3d, 0x8e, 0xfa, 0x49, 0x85, 0x35, 0x67,
	0x6c, 0x9f, 0x0c, 0xf9, 0xc1, 0xab, 0xb4, 0x1a, 0x73, 0xb2, 0xd6, 0x56, 0x2b, 0x4d, 0xcd, 0xaa,
	0xe8, 0x94, 0xea, 0x47, 0x96, 0x61, 0xaa, 0x66, 0xd7, 0xa0, 0x11, 0x16, 0xe5, 0x7f, 0x24, 0x58,
	0xf6, 0x0e, 0x3b, 0xa8, 0xa3, 0x77, 0x3b, 0x1e, 0xf4, 0xb9, 0x2b, 0x83, 0x31, 0xf9, 0x16, 0xac,
	0xdb, 0xd3, 0x91, 0x29, 0x3a, 0x53, 0x7a, 0x94, 0xa1, 0x51, 0x90, 0x7c, 0x06, 0x37, 0x9c, 0xf1,
	0xd5, 0x60, 0x3a, 0x19, 0x8f, 0x9c, 0xb1, 0x2b, 0x50, 0x67, 0x19, 0xf5, 0xfc, 0x49, 0xb4, 0xe2,
	0x6c, 0x72, 0xea, 0xbe, 0xb2, 0xa7, 0x0e, 0xaf, 0x8d, 0x2c, 0x45, 0x0a, 0x34, 0x0e, 0x63, 0x72,
	0x0d, 0x2e, 0xd4, 0x7e, 0x7f, 0xca, 0x32, 0xa5, 0x40, 0xf9, 0x88, 0x7c, 0x37, 0xb0, 0xe0, 0x32,
	0xb3, 0xc0, 0xfd, 0x79, 0x16, 0xac, 0x69, 0x87, 0x8d, 0xaa, 0x16, 0x31, 0xa0, 0x62, 0xc2, 0xda,
	0x97, 0x4f, 0x9f, 0xef, 0x7d, 0x69, 0xbd, 0x83, 0x09, 0xe6, 0xa8, 0x99, 0x99, 0xab, 0xa6, 0xf2,
	0x27, 0x12, 0xac, 0x68, 0xaf, 0x5d, 0x67, 0xdc, 0x77, 0x90, 0x6d, 0xc9, 0xbd, 0xbe, 0x70, 0x4a,
	0xd2, 0x03, 0xe9, 0x51, 0x71, 0x6f, 0x3b, 0xd0, 0xac, 0x43, 0xf5, 0x2f, 0xb5, 0xaa, 0x69, 0x1e,
	0x77, 0x34, 0xca, 0x28, 0xc8, 0x33, 0x00, 0x3c, 0xf0, 0x04, 0x09, 0x9b, 0x7d, 0x54, 0xdc, 0xbb,
	0x11, 0xd0, 0x63, 0x96, 0x36, 0xf5, 0xea, 0x8b, 0xfd, 0xa6, 0x5a, 0xa7, 0x02, 0x21, 0xb9, 0x0f,
	0xab, 0x76, 0xcf, 0x1d, 0x4c, 0xc6, 0x96, 0x3b, 0x18, 0xa1, 0xa9, 0xb3, 0x18, 0xa5, 0x1e, 0x84,
	0x3b, 0xab, 0xf2, 0x5f, 0x12, 0x6c, 0xcf, 0x6b, 0x86, 0x90, 0x6f, 0xc3, 0xb2, 0xb7, 0x3a, 0xde,
	0x70, 0xd9, 0x08, 0x3e, 0xc6, 0x8f, 0xbf, 0x7c, 0x9a, 0x94, 0x21, 0xcf, 0x93, 0x9a, 0xa9, 0x25,
	0xb6, 0x66, 0xfc, 0x5b, 0xb9, 0x4f, 0x40, 0x1e, 0xc2, 0xd2, 0x6c, 0x38, 0x71, 0x99, 0x1e, 0xab,
	0x7b, 0xeb, 0xa1, 0xfe, 0xc3, 0x89, 0x4b, 0xd9, 0x14, 0x79, 0x0c, 0x2b, 0x0e, 0x37, 0x0f, 0x6f,
	0x92, 0x6c, 0x86, 0x21, 0xcb, 0x27, 0x68, 0x40, 0x42, 0x9e, 0xc3, 0xda, 0x8f, 0x9e, 0x3e, 0xdf,
	0xfb, 0x91, 0xc5, 0x95, 0xf5, 0xba, 0x21, 0xa1, 0x65, 0x44, 0x0f, 0xd2, 0x55, 0x46, 0xea, 0x0d,
	0x94, 0x3f, 0x95, 0x80, 0x24, 0xbb, 0x37, 0xa4, 0x0c, 0xcb, 0x9e, 0x79, 0x78, 0x81, 0x27, 0xe1,
	0xba, 0xb5, 0x43, 0xb5, 0x6a, 0x36, 0xf4, 0x36, 0xe5, 0x14, 0x7e, 0x4d, 0xcd, 0x84, 0x35, 0xf5,
	0x16, 0xac, 0x5c, 0xf0, 0x9b, 0x3c, 0xab, 0x5a, 0x05, 0x1a, 0x8c, 0xe3, 0xbe, 0xf0, 0x2a, 0xbd,
	0xe8, 0x8b, 0x7f, 0x94, 0x60, 0x6b, 0xce, 0x65, 0x71, 0x61, 0xe0, 0x25, 0x55, 0x88, 0xd5, 0xe7,
	0x58, 0xd5, 0xfd, 0x1e, 0xe4, 0x30, 0x34, 0x1c, 0x56, 0x2e, 0x8b, 0xc2, 0xe5, 0xc6, 0xaf, 0x21,
	0xbc, 0x1e, 0x50, 0xcd, 0xec, 0xd2, 0xb6, 0x97, 0x10, 0x1e, 0x47, 0x5c, 0xff, 0x5c, 0x42, 0xff,
	0x37, 0x12, 0x6c, 0x26, 0xfa, 0x58, 0xef, 0x65, 0x50, 0x71, 0xa5, 0x99, 0xf9, 0x2b, 0xcd, 0xa6,
	0xac, 0x74, 0x29, 0x75, 0xa5, 0xb9, 0xff, 0xeb, 0x4a, 0x97, 0x13, 0x2b, 0xfd, 0x6f, 0x09, 0x36,
	0x62, 0x3d, 0x18, 0x71, 0xdb, 0xf7, 0x9c, 0x14, 0x6c, 0xfb, 0x77, 0xa0, 0x30, 0x63, 0x67, 0xd9,
	0xee, 0x74, 0xc8, 0x97, 0x15, 0x02, 0xb8, 0x8f, 0x9c, 0x0e, 0x86, 0x4e, 0xab, 0xff, 0x6c, 0xc6,
	0x97, 0x57, 0xa0, 0x02, 0x42, 0xee, 0x02, 0x9c, 0x4e, 0xa6, 0x3d, 0x27, 0x8c, 0x9a, 0x02, 0x2d,
	0x30, 0x04, 0x55, 0x41, 0x93, 0xcd, 0xdc, 0xa9, 0xed, 0x3a, 0x67, 0xd7, 0xdc, 0x25, 0xc1, 0x98,
	0x3c, 0x02, 0xd9, 0x9d, 0x0e, 0xce, 0xce, 0x9c, 0x29, 0x63, 0xb6, 0x46, 0x83, 0x31, 0x5b, 0x4c,
	0x81, 0x16, 0x39, 0x8e, 0x22, 0x5a, 0x83, 0x71, 0x92, 0xd2, 0x7e, 0xcd, 0x3a, 0x79, 0x31, 0x4a,
	0xfb, 0xb5, 0xf2, 0xc7, 0x42, 0xda, 0x84, 0xed, 0x27, 0xf2, 0x03, 0x58, 0xe7, 0x0d, 0x28, 0xbe,
	0xdd, 0x78, 0xce, 0xde, 0x09, 0xac, 0xde, 0xed, 0xd4, 0xa9, 0x5a, 0xd3, 0xf8, 0x3e, 0x13, 0x25,
	0xc6, 0x45, 0x0c, 0xed, 0x99, 0x7b, 0x6a, 0x0f, 0x86, 0xbc, 0x6e, 0x06, 0xe3, 0x48, 0x4c, 0x64,
	0xa3, 0x31, 0xa1, 0x3c, 0x8a, 0x17, 0x2f, 0xef, 0x46, 0x83, 0xb1, 0xe2, 0x1f, 0xd1, 0x0a, 0xec,
	0x50, 0xa6, 0xfc, 0x5d, 0x16, 0x6e, 0xcc, 0xed, 0x8c, 0x12, 0x02, 0x4b, 0xb3, 0x19, 0xcb, 0x2c,
	0xfc, 0x2e, 0xfb, 0x1d, 0x49, 0x63, 0xae, 0x4f, 0x90, 0xc6, 0x75, 0x20, 0xbd, 0xc9, 0x78, 0xec,
	0xf4, 0xdc, 0xb6, 0xe3, 0xbe, 0x9a, 0x4c, 0xcf, 0x4d, 0xac, 0xe0, 0x59, 0xb6, 0xdc, 0xdd, 0xf0,
	0x34, 0xa8, 0xb7, 0xdb, 0x5a, 0xd5, 0x6c, 0x6b, 0x5e, 0x11, 0x9f, 0xc3, 0x42, 0xbe, 0x07, 0x6b,
	0xaf, 0x06, 0xa7, 0x03, 0xbc, 0x92, 0xb7, 0xf0, 0x80, 0xb7, 0xc4, 0x36, 0x81, 0xb0, 0x74, 0x1d,
	0x35, 0xf6, 0x1b, 0x6a, 0xd7, 0x3c, 0x68, 0x61, 0x64, 0x46, 0x48, 0xc9, 0xe7, 0xb0, 0x8a, 0x8b,
	0xd0, 0xc6, 0xbd, 0xe9, 0xf5, 0x85, 0xcb, 0xfc, 0x2e, 0x6e, 0x1f, 0xc8, 0xa9, 0xb5, 0xab, 0xf4,
	0xb8, 0x63, 0x52, 0x91, 0x30, 0x62, 0xcb, 0xe5, 0x58, 0x7e, 0x3d, 0x84, 0xb5, 0xd1, 0x04, 0x8f,
	0xf3, 0x33, 0x6b, 0x6c, 0x8f, 0x1c, 0xee, 0xfe, 0x55, 0x8e, 0xb5, 0xed, 0x91, 0xe3, 0x6d, 0xb1,
	0x36, 0x6e, 0xb1, 0x2b, 0xfe, 0x16, 0x8b, 0x23, 0x52, 0x81, 0x8d, 0x9e, 0x77, 0x2a, 0x6a, 0x3b,
	0xae, 0xc1, 0x92, 0xae, 0xc0, 0x54, 0x12, 0xda, 0xc0, 0x5d, 0x4a, 0xb5, 0x36, 0xda, 0x03, 0x23,
	0x40, 0xa3, 0x71, 0x06, 0xb2, 0x0d, 0xb9, 0x13, 0xe6, 0x07, 0x60, 0xa2, 0xbd, 0x81, 0x52, 0x09,
	0x1d, 0x2c, 0xb6, 0xa0, 0x71, 0xd3, 0x99, 0x3a, 0xb3, 0x2a, 0x9a, 0xcd, 0x0b, 0xb4, 0x70, 0xd3,
	0xa1, 0x9a, 0xc1, 0x72, 0xd9, 0x27, 0x50, 0xde, 0x64, 0x42, 0x21, 0x62, 0x8b, 0x32, 0xc5, 0x93,
	0xd2, 0xfb, 0x7b, 0x72, 0x51, 0xd9, 0x22, 0xb0, 0x34, 0x18, 0x39, 0x03, 0x7e, 0x52, 0x66, 0xbf,
	0x71, 0xad, 0x83, 0x5e, 0x8f, 0x9f, 0xf6, 0x0b, 0xd4, 0x1b, 0x78, 0x94, 0xb3, 0x01, 0x3f, 0xbe,
	0xb0, 0xdf, 0x09, 0xa7, 0x2c, 0x2f, 0x72, 0x4a, 0x3e, 0xe2, 0x94, 0xc7, 0xb0, 0x42, 0x1d, 0x7b,
	0xd8, 0x69, 0xb6, 0xda, 0xcc, 0x5d, 0x45, 0x61, 0x23, 0xa5, 0x9a, 0xda, 0xc4, 0x09, 0x1a, 0x90,
	0x7c, 0x13, 0x3e, 0x54, 0xd4, 0x70, 0xff, 0x12, 0x3a, 0xb8, 0xef, 0xe5, 0xac, 0x57, 0x11, 0x11,
	0x7e, 0xbf, 0x76, 0xe1, 0x16, 0xf8, 0x00, 0x56, 0xfb, 0xce, 0x55, 0x77, 0x3c, 0x78, 0x8d, 0x35,
	0x8a, 0x39, 0x20, 0x4b, 0x45, 0x88, 0x28, 0xb0, 0xc6, 0xdb, 0xb6, 0x95, 0x6b, 0xd7, 0x99, 0xb1,
	0x64, 0xcd, 0xd2, 0x08, 0xa6, 0xfc, 0x46, 0x58, 0xd6, 0xc2, 0x76, 0xef, 0x7b, 0xa9, 0xfe, 0x1f,
	0x12, 0xdc, 0x59, 0xf4, 0x58, 0x11, 0x2e, 0xa2, 0x11, 0x5b, 0x44, 0x83, 0x5d, 0xf4, 0xf0, 0xf8,
	0xd3, 0x0e, 0xf6, 0x72, 0x7f, 0x48, 0x9e, 0x87, 0x2a, 0x78, 0x45, 0x26, 0xec, 0x18, 0x25, 0xbe,
	0x82, 0x54, 0x81, 0x42, 0x68, 0x98, 0xb1, 0xf3, 0xda, 0x35, 0xb8, 0x5c, 0xef, 0x82, 0x24, 0x42,
	0xe4, 0xfb, 0xb0, 0x32, 0xb9, 0x70, 0xc6, 0x55, 0xef, 0x7e, 0x19, 0x3d, 0x1d, 0x47, 0x85, 0xeb,
	0x9c, 0x8c, 0x06, 0x0c, 0xca, 0x21, 0xdc, 0x4a, 0x7f, 0xde, 0x58, 0xb8, 0xd8, 0x70, 0xe3, 0x36,
	0xc6, 0xfe, 0x86, 0x18, 0x00, 0xca, 0x9f, 0x4b, 0x70, 0x77, 0xe1, 0xbb, 0x09, 0x1a, 0x4b, 0xf4,
	0x4a, 0x2e, 0x5c, 0xb2, 0xf8, 0xd5, 0xcc, 0xa2, 0xaf, 0x66, 0x63, 0x5f, 0x65, 0xd7, 0xb5, 0xe8,
	0x97, 0xf8, 0x91, 0x22, 0x0e, 0x2b, 0xbb, 0xd1, 0x9d, 0x24, 0x68, 0xc4, 0x2b, 0xbf, 0x13, 0x2d,
	0x56, 0x7e, 0x53, 0x7d, 0xa1, 0x29, 0x84, 0x00, 0xcb, 0xbc, 0x2d, 0xc0, 0xfe, 0x42, 0x82, 0xdb,
	0x0b, 0x3a, 0xed, 0x6f, 0xf9, 0x8e, 0xcc, 0x33, 0x02, 0xf7, 0xf7, 0x99, 0x6b, 0x8f, 0x2e, 0x78,
	0xa6, 0x24, 0xf0, 0xf0, 0xe4, 0x94, 0x65, 0x05, 0xe0, 0x43, 0xf1, 0xc0, 0x86, 0xb7, 0x24, 0x7d,
	0x7f, 0xbf, 0xd9, 0x68, 0x6b, 0xfc, 0xce, 0x28, 0x9e, 0x9c, 0x94, 0x7d, 0x28, 0xa5, 0xb5, 0xee,
	0xdf, 0x2b, 0x97, 0x5e, 0xc2, 0x6e, 0x4a, 0xb7, 0x7d, 0xe1, 0x2a, 0x9f, 0xfa, 0x9a, 0x7b, 0xb6,
	0xbc, 0x1d, 0xd7, 0x9c, 0x6a, 0x15, 0xdd, 0xef, 0x67, 0x70, 0x8d, 0x0f, 0xc2, 0x28, 0x4e, 0xf6,
	0xf5, 0xdf, 0x4b, 0xe7, 0xcf, 0xc3, 0xb5, 0xc7, 0x1b, 0xfa, 0x8b, 0x94, 0x16, 0x6d, 0x16, 0xef,
	0xdc, 0xbf, 0xd7, 0xf7, 0xed, 0xd0, 0x66, 0xb1, 0x9e, 0xfd, 0x37, 0x16, 0x81, 0x3d, 0x90, 0xe3,
	0xbd, 0xf8, 0x39, 0x8d, 0xa5, 0x2f, 0xa0, 0x88, 0xc5, 0x6b, 0xc8, 0x3a, 0xf5, 0xae, 0x77, 0x17,
	0xce, 0xa4, 0xdf, 0x57, 0x63, 0xc4, 0xca, 0x5f, 0x09, 0xd7, 0x20, 0xa1, 0xe3, 0x3f, 0xb7, 0x83,
	0xc5, 0xee, 0xba, 0x86, 0xd8, 0xc5, 0x5a, 0x74, 0x29, 0x9e, 0x93, 0x27, 0xd9, 0x74, 0x6b, 0x2c,
	0xbd, 0xcd, 0x1a, 0xff, 0x2c, 0x01, 0x84, 0x0f, 0x00, 0xb8, 0x7f, 0xf7, 0x7c, 0x47, 0x15, 0x28,
	0xfb, 0x8d, 0x87, 0xfb, 0x91, 0xed, 0x3a, 0xd3, 0x81, 0x3d, 0xe4, 0x15, 0x29, 0x47, 0x05, 0x84,
	0x7c, 0xcc, 0x1b, 0x00, 0xd9, 0x98, 0xee, 0x2d, 0x4e, 0x82, 0xc7, 0x0b, 0xde, 0x01, 0xd8, 0x86,
	0x9c, 0x3b, 0x70, 0x87, 0xfe, 0x15, 0xc0, 0x1b, 0xa0, 0x51, 0x2e, 0xa7, 0x43, 0x56, 0xbc, 0x0b,
	0x14, 0x7f, 0x22, 0x32, 0xea, 0x3f, 0xe3, 0xc7, 0x3b, 0xfc, 0xc9, 0xae, 0x08, 0x2f, 0x27, 0xaf,
	0xd8, 0xee, 0xe8, 0xf5, 0xa9, 0x82, 0xb1, 0xd2, 0x08, 0xb7, 0x3d, 0x61, 0x29, 0x9f, 0x02, 0x84,
	0xef, 0x18, 0xa5, 0x25, 0x76, 0x5b, 0xdf, 0x0a, 0x94, 0x13, 0x1e, 0x3d, 0x04, 0x32, 0xe5, 0x77,
	0x61, 0x3d, 0x9c, 0x41, 0x87, 0x45, 0x17, 0x2f, 0x25, 0x16, 0xef, 0x1b, 0x2c, 0x23, 0x18, 0xec,
	0x59, 0x7c, 0xb7, 0x0b, 0x73, 0x58, 0x68, 0x44, 0xc7, 0xb7, 0x3a, 0xc5, 0x0d, 0x73, 0x28, 0xfe,
	0x24, 0xb3, 0x30, 0xf8, 0x7f, 0x00, 0xeb, 0xae, 0xa8, 0x33, 0x6f, 0x61, 0xec, 0xcc, 0x59, 0xab,
	0xda, 0x3b, 0xa7, 0x51, 0x62, 0xe5, 0xdf, 0x24, 0x58, 0xf1, 0x3d, 0xf5, 0xd6, 0xd5, 0xfa, 0xae,
	0xce, 0xbc, 0x87, 0xab, 0xb3, 0x73, 0x5c, 0xbd, 0x14, 0xba, 0x1a, 0xaf, 0x29, 0x43, 0xfb, 0xda,
	0x0c, 0xaf, 0xe3, 0xc1, 0x98, 0x35, 0xe5, 0xc6, 0x83, 0x91, 0x8d, 0x29, 0xc5, 0xae, 0x17, 0x5e,
	0x40, 0x44, 0x41, 0x3f, 0x58, 0xbc, 0x93, 0x23, 0xfe, 0x54, 0xfe, 0x40, 0x82, 0x95, 0xce, 0xd0,
	0xbe, 0x3e, 0x1c, 0x38, 0xaf, 0xf0, 0x6c, 0x89, 0x02, 0x83, 0xf5, 0xf0, 0x51, 0xa8, 0x60, 0x46,
	0x54, 0x10, 0xd5, 0x99, 0xcc, 0x06, 0x2c, 0xe3, 0xfd, 0xe6, 0x07, 0x1f, 0xe3, 0x69, 0xd4, 0xb7,
	0x05, 0x8f, 0xa7, 0xcd, 0x84, 0x05, 0x68, 0x40, 0x82, 0x5b, 0xdd, 0x6e, 0xca, 0x03, 0x04, 0x1a,
	0x7a, 0xc6, 0xc7, 0xa1, 0xa1, 0x43, 0x84, 0x5d, 0xb7, 0x5d, 0x7b, 0xea, 0x06, 0xa7, 0xc1, 0x1c,
	0x0d, 0x01, 0xd6, 0x51, 0x1f, 0xf7, 0x4d, 0xaf, 0x1b, 0xc6, 0xce, 0x0e, 0x7c, 0x88, 0x2a, 0x5e,
	0xf0, 0x85, 0x27, 0x54, 0xf4, 0x2d, 0x42, 0x03, 0x12, 0xe5, 0x2f, 0x25, 0x20, 0x6a, 0xf2, 0x11,
	0xe4, 0x6d, 0xda, 0x85, 0x26, 0xcd, 0x44, 0x4c, 0x1a, 0x0d, 0x9f, 0x6c, 0x22, 0x7c, 0x9e, 0xc5,
	0x0b, 0xd3, 0xbb, 0x25, 0xc6, 0x53, 0xc8, 0xf3, 0xa7, 0x0c, 0xf4, 0xf5, 0xb9, 0x73, 0xed, 0x5f,
	0x8a, 0xcf, 0x9d, 0x6b, 0x74, 0xe3, 0x95, 0x3d, 0xbc, 0xf4, 0x33, 0xd0, 0x1b, 0x28, 0x7f, 0x24,
	0x9c, 0xbf, 0xe6, 0x3e, 0xfe, 0x2c, 0xcc, 0xa8, 0x17, 0x73, 0x5f, 0x97, 0xbc, 0xb4, 0x9a, 0xab,
	0x32, 0x27, 0x99, 0xf7, 0xa2, 0xa4, 0xfc, 0x93, 0xd0, 0x9d, 0x14, 0x5f, 0x7b, 0x16, 0x6a, 0xf0,
	0x11, 0x14, 0x7b, 0x48, 0x64, 0xc4, 0x82, 0x20, 0x86, 0xe2, 0x89, 0x8f, 0x21, 0xde, 0xa2, 0x84,
	0x88, 0x88, 0xc3, 0x78, 0x53, 0x8f, 0x3c, 0x6c, 0x79, 0xd1, 0x71, 0x43, 0x5c, 0x4d, 0xca, 0x7b,
	0x96, 0xf2, 0x87, 0x12, 0xac, 0x45, 0x34, 0x8f, 0xc6, 0x47, 0x66, 0x41, 0x7c, 0x64, 0x17, 0xc4,
	0xc7, 0x52, 0x22, 0x3e, 0xee, 0x40, 0xe1, 0x22, 0x50, 0xd0, 0x7b, 0xdc, 0x08, 0x01, 0xe5, 0xab,
	0x48, 0x3a, 0x45, 0x1e, 0xc9, 0xfe, 0x9f, 0x02, 0x56, 0xf9, 0x3d, 0xd8, 0x99, 0xff, 0xb8, 0xb6,
	0xd0, 0x79, 0xb7, 0x60, 0xf9, 0x6a, 0x32, 0xbc, 0x1c, 0x79, 0xa5, 0x25, 0xf7, 0x6b, 0x99, 0xc7,
	0x4f, 0x29, 0x47, 0x70, 0x6f, 0xe6, 0xb1, 0xcc, 0x1b, 0xc8, 0xe1, 0xde, 0xec, 0x3f, 0xd7, 0xf9,
	0x04, 0x8a, 0x1e, 0x1e, 0xd2, 0x23, 0xcf, 0xdf, 0xf8, 0xf1, 0xd1, 0x57, 0xae, 0x8b, 0x11, 0x56,
	0x92, 0x1e, 0x64, 0xf1, 0xe3, 0xfe, 0x18, 0xe7, 0x5e, 0xba, 0xee, 0x05, 0x9b, 0xcb, 0x78, 0x73,
	0xfe, 0x58, 0x39, 0x09, 0x77, 0x98, 0xf8, 0x7b, 0xfa, 0x37, 0x76, 0xbc, 0x6a, 0x86, 0xdf, 0x88,
	0x3f, 0xb0, 0x63, 0xae, 0x8e, 0x66, 0x67, 0x81, 0x87, 0xbc, 0xc1, 0xa2, 0xfb, 0x8e, 0xf2, 0x9f,
	0x52, 0x8a, 0x38, 0x54, 0xf9, 0xbd, 0xc5, 0x61, 0x5a, 0x4d, 0x9d, 0xaf, 0xa8, 0xd3, 0xbb, 0x42,
	0x19, 0x86, 0xd3, 0xe3, 0x3e, 0x8f, 0xa1, 0x98, 0x56, 0x02, 0xd2, 0x42, 0x42, 0x2f, 0x5a, 0xe3,
	0x30, 0x7b, 0x69, 0xeb, 0x9d, 0x1b, 0xbc, 0xfe, 0x22, 0x61, 0x8e, 0xbf, 0xb4, 0x45, 0x50, 0x94,
	0x28, 0x20, 0x4c, 0xa2, 0xf7, 0x24, 0x17, 0x87, 0x15, 0x15, 0x56, 0xf1, 0xba, 0xe8, 0x37, 0x5e,
	0x93, 0x27, 0xc6, 0x07, 0xb0, 0x7a, 0x12, 0x12, 0xf0, 0xed, 0x4b, 0x84, 0x94, 0xef, 0xc2, 0xcd,
	0xd4, 0xff, 0x22, 0x58, 0x78, 0x8c, 0x9f, 0xa4, 0x31, 0xbe, 0x2d, 0x42, 0x3e, 0xf7, 0x74, 0x0a,
	0xdf, 0x8d, 0x30, 0xb4, 0xb7, 0x23, 0x8f, 0x28, 0x5c, 0x39, 0x2a, 0x12, 0x2a, 0xb5, 0x30, 0xc1,
	0x62, 0x5f, 0x7b, 0x8f, 0x5b, 0x43, 0xf9, 0xeb, 0x3c, 0x64, 0xab, 0xad, 0x1a, 0x59, 0x87, 0x02,
	0xef, 0xcd, 0x6a, 0xbf, 0x29, 0x4b, 0xe2, 0xd0, 0x90, 0x33, 0x64, 0x15, 0xf2, 0x7a, 0x47, 0x6b,
	0xd7, 0xb4, 0x43, 0x39, 0xeb, 0x0f, 0xd4, 0xea, 0x0b, 0x79, 0x89, 0x11, 0x6a, 0x66, 0xb7, 0x73,
	0xd4, 0xd8, 0x6f, 0xc8, 0x39, 0x22, 0xc3, 0x5a, 0x30, 0x44, 0x82, 0x65, 0xa4, 0xe6, 0xbd, 0x5f,
	0x39, 0x4f, 0x76, 0x61, 0xcb, 0x30, 0x55, 0x6a, 0x36, 0xda, 0x86, 0xa9, 0x36, 0x9b, 0xbc, 0x15,
	0x2f, 0xaf, 0x90, 0x1d, 0x20, 0x86, 0xa9, 0x77, 0x62, 0x78, 0x81, 0x94, 0x60, 0x3b, 0x8a, 0x51,
	0xcd, 0xe8, 0x36, 0x4d, 0x19, 0x90, 0xa3, 0xae, 0x99, 0x1c, 0xed, 0xa8, 0x86, 0x71, 0xa4, 0xd3,
	0x9a, 0xbc, 0x4a, 0x6e, 0xc2, 0x8d, 0x24, 0x8e, 0xaa, 0xac, 0x21, 0x4b, 0xb7, 0x53, 0x53, 0x4d,
	0xcd, 0xbb, 0x0e, 0x76, 0x54, 0xaa, 0xb6, 0x0c, 0x79, 0x9d, 0xac, 0xc1, 0x0a, 0x53, 0xba, 0x6e,
	0xb4, 0xe4, 0x22, 0xd9, 0x80, 0x55, 0x7f, 0x84, 0x6c, 0x1b, 0x64, 0x13, 0xd6, 0xbb, 0x9d, 0xa6,
	0xae, 0xd6, 0xea, 0x46, 0x6b, 0xbf, 0xa9, 0x1f, 0xc9, 0x32, 0xd9, 0x06, 0x39, 0x02, 0x21, 0xe1,
	0x26, 0x72, 0x56, 0xd4, 0xea, 0x0b, 0x5f, 0x7b, 0x82, 0x9c, 0xd5, 0xa6, 0xa6, 0x52, 0xb4, 0x46,
	0xa3, 0xbd, 0xaf, 0xcb, 0x5b, 0x68, 0xa0, 0x00, 0x42, 0xae, 0x6d, 0x24, 0xe2, 0x37, 0x6a, 0xcf,
	0xe2, 0xf2, 0x0d, 0x52, 0x04, 0xe0, 0x10, 0x92, 0xec, 0xe0, 0x98, 0xdb, 0x10, 0xc7, 0xbb, 0x68,
	0x74, 0xef, 0x2a, 0x6b, 0x1c, 0x1b, 0x72, 0x09, 0x65, 0x06, 0x43, 0x24, 0xb8, 0xc9, 0xec, 0xdc,
	0x52, 0xa9, 0x69, 0x35, 0x1b, 0xed, 0x17, 0x96, 0xda, 0x35, 0x0f, 0x2c, 0xf4, 0xeb, 0xad, 0x79,
	0x13, 0xc8, 0x71, 0x9b, 0xdc, 0x80, 0x4d, 0x61, 0x82, 0x5b, 0xf9, 0x0e, 0x9a, 0x06, 0xef, 0x50,
	0x78, 0x97, 0x92, 0xef, 0xe2, 0x02, 0xfd, 0x11, 0x72, 0xdd, 0x43, 0xc0, 0x6c, 0x74, 0x0c, 0xab,
	0xd1, 0x52, 0xeb, 0x9a, 0x21, 0xdf, 0x47, 0x13, 0x0b, 0x80, 0x45, 0xb5, 0x8e, 0x4e, 0x4d, 0xf9,
	0x01, 0x21, 0x50, 0x3c, 0x30, 0xcd, 0x4e, 0xad, 0x6d, 0x58, 0x9e, 0x0b, 0xe4, 0x87, 0xf8, 0xc9,
	0x28, 0x86, 0x32, 0x15, 0x54, 0xb1, 0xae, 0x99, 0x96, 0xa1, 0xd1, 0x43, 0x8d, 0x5a, 0x66, 0xa3,
	0xa5, 0x31, 0xdd, 0x3f, 0x9e, 0x37, 0x81, 0x1c, 0x65, 0x0c, 0x12, 0x9c, 0x40, 0xbb, 0x5b, 0x87,
	0x1a, 0x35, 0x1a, 0x7a, 0x9b, 0xb1, 0x7c, 0x67, 0xee, 0x0c, 0xf2, 0x7c, 0x82, 0x1e, 0x4c, 0xa0,
	0x8f, 0xc9, 0x0e, 0x6c, 0xaa, 0xb5, 0x43, 0xcb, 0xa8, 0x1e, 0x68, 0xb5, 0x6e, 0x53, 0xb3, 0x9a,
	0x0d, 0xc3, 0x94, 0x7f, 0x9a, 0x27, 0x77, 0xa1, 0x94, 0xc0, 0xfd, 0xc5, 0xfd, 0x2c, 0x4f, 0xb6,
	0xa0, 0x88, 0xd3, 0x9d, 0xa6, 0x7a, 0x6c, 0x55, 0xf5, 0x6e, 0xdb, 0x94, 0x7f, 0x8e, 0xb1, 0x4e,
	0xa2, 0xa0, 0xa5, 0xf6, 0xce, 0xe5, 0x5f, 0xe4, 0xc9, 0x36, 0x6c, 0x68, 0x3f, 0x34, 0x31, 0x1e,
	0x50, 0xcb, 0xae, 0x66, 0x98, 0xf2, 0x2f, 0xf3, 0xe5, 0x7f, 0x95, 0x60, 0x67, 0xfe, 0x8b, 0x34,
	0x46, 0xc8, 0x41, 0xa5, 0xe6, 0xf7, 0x5b, 0xf4, 0x17, 0xf2, 0x07, 0x18, 0xe5, 0x08, 0x99, 0x5a,
	0xab, 0xa3, 0x51, 0xd5, 0xec, 0x52, 0xcd, 0xd2, 0x28, 0xd5, 0xa9, 0x2c, 0x31, 0x53, 0x57, 0x6a,
	0x16, 0x06, 0x18, 0xc7, 0x32, 0x3e, 0x56, 0x69, 0x76, 0x7d, 0xba, 0x2c, 0x33, 0x7f, 0xa5, 0x66,
	0x35, 0x2a, 0x9a, 0x5a, 0xd5, 0xdb, 0x1c, 0x5e, 0xf2, 0x25, 0x57, 0xf5, 0xf6, 0x7e, 0xa3, 0x6e,
	0xed, 0x37, 0x9a, 0x3e, 0x47, 0x0e, 0x6d, 0xc6, 0xf4, 0x38, 0x36, 0x4c, 0xad, 0xc5, 0xd1, 0x65,
	0xb2, 0x05, 0x1b, 0x88, 0xea, 0xe6, 0x81, 0x46, 0x39, 0x98, 0x2f, 0x7f, 0x9d, 0x83, 0xed, 0x79,
	0xff, 0x46, 0xe2, 0xad, 0xc5, 0x88, 0xac, 0x85, 0x43, 0x54, 0xeb, 0xa8, 0x0d, 0x8a, 0x90, 0xe4,
	0xe9, 0x66, 0x58, 0x87, 0x7a, 0xd3, 0x54, 0xeb, 0x5a, 0xb0, 0x0c, 0x0e, 0xf3, 0x46, 0x74, 0xb0,
	0x12, 0xa6, 0x81, 0x11, 0xd1, 0x60, 0xc9, 0x97, 0xda, 0xaa, 0x76, 0x03, 0xfd, 0x3f, 0x84, 0xfb,
	0xec, 0xdb, 0x6d, 0xab, 0x8d, 0xeb, 0x33, 0xd5, 0xaa, 0x69, 0x1d, 0x5b, 0x35, 0x5d, 0xa7, 0xd6,
	0x71, 0xb0, 0x9c, 0x05, 0x44, 0xbe, 0x91, 0xf2, 0x73, 0x89, 0xda, 0x51, 0x49, 0x2b, 0x8b, 0x88,
	0x7c, 0x49, 0x05, 0x81, 0xe8, 0x38, 0x4d, 0x27, 0x58, 0x44, 0xe4, 0x4b, 0x5a, 0x9d, 0x4b, 0x14,
	0xd3, 0x69, 0x6d, 0x11, 0x91, 0x2f, 0x69, 0x1d, 0xb3, 0x86, 0x99, 0x4e, 0x37, 0x75, 0x6a, 0xed,
	0x77, 0x0d, 0xdf, 0x01, 0x32, 0xa6, 0x20, 0xce, 0xb0, 0xcc, 0x11, 0x26, 0x36, 0xfd, 0x09, 0xad,
	0xa9, 0x55, 0xc5, 0x09, 0x42, 0xee, 0xc2, 0xcd, 0x50, 0x56, 0x9c, 0x6f, 0x2b, 0x3a, 0x1d, 0xe7,
	0xde, 0x26, 0x77, 0xa0, 0x14, 0x7c, 0x2f, 0x3e, 0x7b, 0x83, 0x28, 0x70, 0x2f, 0x26, 0x3b, 0x4e,
	0xb3, 0x53, 0xfe, 0xfd, 0x0c, 0xec, 0xa6, 0xfc, 0xab, 0x8c, 0x17, 0x22, 0x95, 0x48, 0x2c, 0xb2,
	0x50, 0xaa, 0x44, 0x42, 0x49, 0xf2, 0x52, 0xa2, 0x32, 0x27, 0xd9, 0x78, 0x44, 0x56, 0x62, 0x81,
	0x9a, 0xf5, 0xe1, 0x68, 0xa0, 0x2e, 0x79, 0x86, 0xad, 0x58, 0xd5, 0xe3, 0x6a, 0x53, 0xf3, 0x4a,
	0x82, 0x1f, 0x9a, 0xcc, 0x7e, 0x15, 0xab, 0xd1, 0x36, 0x35, 0xba, 0xaf, 0x56, 0xb5, 0x20, 0x1c,
	0x59, 0xe6, 0x56, 0xac, 0x8a, 0x5e, 0x3b, 0x0e, 0xa2, 0x8f, 0x63, 0xac, 0x09, 0xeb, 0x07, 0xdb,
	0x6d, 0xd8, 0x0d, 0xe8, 0xd4, 0x76, 0x4d, 0x9c, 0x2c, 0x94, 0xbf, 0x80, 0xed, 0x79, 0xff, 0xee,
	0x83, 0x06, 0xe0, 0x38, 0xdf, 0x7a, 0x3e, 0x40, 0xd9, 0xb5, 0x86, 0x21, 0x62, 0x52, 0x79, 0x1f,
	0xd6, 0xc4, 0x66, 0x1a, 0x01, 0x58, 0xee, 0xb6, 0x71, 0x24, 0x4b, 0x64, 0x05, 0x96, 0xd8, 0xaf,
	0x0c, 0x6e, 0x4a, 0xf8, 0x0b, 0x37, 0x15, 0x5d, 0xce, 0xa2, 0x6c, 0x36, 0x64, 0xde, 0xd0, 0x8f,
	0xda, 0x72, 0xae, 0xfc, 0x21, 0xac, 0x0a, 0xff, 0xd9, 0x42, 0x0a, 0x90, 0x3b, 0x7e, 0xfa, 0xec,
	0xd3, 0x1f, 0xca, 0x92, 0xf7, 0xf3, 0xf9, 0xaf, 0x3e, 0x95, 0x33, 0xe5, 0x27, 0x50, 0x08, 0xfe,
	0x31, 0x00, 0xbf, 0xe4, 0x69, 0x2c, 0x4b, 0xf8, 0xdb, 0x7b, 0xab, 0x97, 0x33, 0x48, 0xaf, 0xa1,
	0x1c, 0x39, 0x5b, 0xfe, 0xf7, 0x1c, 0xdc, 0x4a, 0x7f, 0xd2, 0x47, 0x35, 0x2a, 0x15, 0x1a, 0xf1,
	0xf1, 0x2e, 0x6c, 0x21, 0xc4, 0x6b, 0xaf, 0xd5, 0x68, 0x1f, 0xaa, 0xcd, 0x46, 0x4d, 0x96, 0x70,
	0xf3, 0x12, 0x27, 0xa8, 0xd6, 0xd1, 0x54, 0x53, 0xce, 0xa0, 0xff, 0x45, 0xbc, 0xad, 0x69, 0x35,
	0xeb, 0x48, 0x6d, 0x98, 0x72, 0x16, 0xcd, 0xc5, 0xc4, 0x63, 0x7d, 0xab, 0x34, 0xd5, 0x36, 0x1e,
	0x89, 0xb8, 0x18, 0x86, 0xb5, 0x03, 0x3c, 0x87, 0x2e, 0x8a, 0xe0, 0xfb, 0x9a, 0x59, 0x3d, 0xb0,
	0x2a, 0xde, 0x31, 0xe9, 0x3e, 0xdc, 0x9e, 0x33, 0xc9, 0xd8, 0x91, 0x20, 0xef, 0x6b, 0x1d, 0x10,
	0x74, 0x9a, 0xdd, 0x7a, 0xa3, 0x2d, 0xaf, 0x90, 0x5b, 0xb0, 0x13, 0x99, 0xa0, 0x5a, 0x55, 0xaf,
	0xb7, 0x1b, 0xbf, 0xa5, 0xc9, 0x85, 0x60, 0xf5, 0x38, 0xc7, 0xdc, 0x04, 0x11, 0x8d, 0xd9, 0x47,
	0xe4, 0xd5, 0x40, 0xf6, 0xb1, 0xc1, 0x76, 0x55, 0x94, 0x62, 0x68, 0xa6, 0x5c, 0x8c, 0xf0, 0xef,
	0xab, 0x8d, 0xa6, 0x2c, 0x47, 0x14, 0x45, 0x28, 0xac, 0xb0, 0x56, 0xa5, 0x65, 0xc8, 0x9b, 0x8b,
	0x08, 0x9a, 0x5a, 0x4d, 0x26, 0xe4, 0x21, 0xdc, 0x4d, 0x23, 0x60, 0xa9, 0x2c, 0x6f, 0x91, 0x6f,
	0xc3, 0x87, 0x69, 0x24, 0xc6, 0x51, 0x03, 0x2d, 0x83, 0x25, 0x4b, 0xde, 0x26, 0x65, 0xf8, 0xe8,
	0x2d, 0x84, 0xbc, 0xca, 0xc9, 0x37, 0x16, 0x7d, 0x17, 0xeb, 0x86, 0x29, 0xef, 0x90, 0xc7, 0xf0,
	0x71, 0xba, 0x6a, 0x15, 0xdc, 0x0b, 0x3b, 0xfa, 0x91, 0x46, 0x2d, 0x3c, 0xff, 0xca, 0xbb, 0xe4,
	0x09, 0x94, 0xdf, 0x89, 0xbc, 0xda, 0xd4, 0x0d, 0x4d, 0x2e, 0x61, 0xf5, 0x9d, 0xe3, 0x64, 0xb4,
	0xb9, 0xde, 0xe5, 0x8e, 0xbe, 0x1d, 0x09, 0x9f, 0x4e, 0xd7, 0x38, 0xf0, 0x0c, 0x7f, 0xa7, 0xfc,
	0x29, 0x1e, 0x43, 0x85, 0x7f, 0xa2, 0xc0, 0xc3, 0x57, 0x4d, 0x3f, 0x6a, 0xe3, 0x31, 0x34, 0xd8,
	0x48, 0x03, 0x80, 0x31, 0x49, 0xe5, 0x3f, 0x93, 0x60, 0x4d, 0xfc, 0x47, 0x02, 0xdc, 0xc3, 0xc5,
	0x71, 0x5b, 0x6f, 0x6b, 0x5e, 0xd9, 0x13, 0xd1, 0xa3, 0x8e, 0xea, 0xa5, 0x43, 0x0c, 0xec, 0x18,
	0x98, 0xe8, 0x31, 0x11, 0x47, 0x1d, 0x75, 0x4f, 0xce, 0x62, 0x0c, 0xc5, 0x51, 0x24, 0x5f, 0x8a,
	0x8b, 0x31, 0x0e, 0x54, 0xaa, 0xd5, 0xe4, 0x5c, 0xd9, 0x82, 0x55, 0xe1, 0x1f, 0x15, 0x7c, 0x15,
	0xf8, 0x90, 0xeb, 0x45, 0xa0, 0x28, 0x80, 0xaa, 0x66, 0xc8, 0x52, 0x8c, 0xd0, 0x7c, 0xd1, 0xe8,
	0x78, 0x07, 0x1c, 0x01, 0x3c, 0xd2, 0x3a, 0x72, 0xb6, 0x3c, 0x86, 0x62, 0xf4, 0xf1, 0x1e, 0xa9,
	0x42, 0x84, 0xdd, 0x58, 0x3e, 0x88, 0x62, 0x78, 0x40, 0x92, 0x25, 0x76, 0x48, 0x0f, 0xb0, 0xbd,
	0xba, 0x9c, 0x89, 0x22, 0x9f, 0xd6, 0xe5, 0x6c, 0x14, 0xf9, 0xac, 0x2e, 0x2f, 0x95, 0x7f, 0x1d,
	0x36, 0x62, 0x4f, 0xe4, 0xb8, 0x0f, 0x84, 0x10, 0xaf, 0xab, 0xb2, 0x84, 0x16, 0x0c, 0x61, 0xaf,
	0x02, 0xcb, 0x99, 0xf2, 0x8f, 0x25, 0x58, 0xf1, 0x5f, 0xe6, 0xc9, 0x2e, 0x6c, 0xfa, 0xbf, 0xbd,
	0x50, 0xc2, 0xcb, 0xc9, 0x8f, 0xdf, 0x64, 0xc4, 0x89, 0x6e, 0xbb, 0x51, 0xd5, 0x5b, 0x38, 0xf1,
	0xd7, 0x6f, 0x32, 0x64, 0x07, 0xe4, 0x28, 0x87, 0x59, 0x93, 0xff, 0xe6, 0x0d, 0x6e, 0x51, 0x1b,
	0x3e, 0x5e, 0x35, 0xab, 0xd5, 0x5a, 0x4b, 0x95, 0xff, 0xf6, 0x4d, 0x86, 0x6c, 0xc1, 0xba, 0x00,
	0x7f, 0x56, 0x97, 0xff, 0x3e, 0x2a, 0xc3, 0x13, 0xfe, 0x59, 0x5d, 0xfe, 0x87, 0x79, 0xb2, 0x3f,
	0xab, 0xcb, 0x3f, 0x79, 0x93, 0x29, 0x97, 0x21, 0xcf, 0x6f, 0x94, 0x18, 0x8d, 0xfc, 0x27, 0x0b,
	0xbd, 0x0f, 0xf0, 0xd2, 0xc2, 0x01, 0xa3, 0x5b, 0x95, 0xa5, 0x72, 0x13, 0x76, 0xe6, 0xbf, 0x29,
	0xb3, 0xeb, 0x4e, 0x47, 0x6b, 0x23, 0x29, 0x3b, 0xfd, 0xc9, 0xb0, 0xe6, 0x8f, 0xf7, 0xbb, 0xcd,
	0xa6, 0x67, 0xfe, 0x00, 0x41, 0xe9, 0xd9, 0x72, 0x1b, 0x6e, 0xcc, 0x7d, 0xfe, 0xf6, 0xee, 0x46,
	0x46, 0x20, 0x6b, 0x1b, 0x35, 0x67, 0xc3, 0xb6, 0x6e, 0xf2, 0x9a, 0x99, 0xf1, 0x6e, 0x4c, 0x0c,
	0xe5, 0x3b, 0x76, 0xb9, 0x06, 0xb7, 0xd2, 0x9f, 0x37, 0xd9, 0xae, 0xa8, 0x1b, 0x96, 0xa1, 0xef,
	0x63, 0x7d, 0xc5, 0xda, 0x28, 0xf9, 0xd8, 0x81, 0x4a, 0x6b, 0x1c, 0xcb, 0x94, 0x3f, 0x01, 0x92,
	0x7c, 0x6a, 0xc4, 0x0c, 0xa8, 0xd1, 0xaa, 0xc5, 0xb3, 0x97, 0x4f, 0xc9, 0x52, 0x59, 0x81, 0x35,
	0xb1, 0xfb, 0x4f, 0xf2, 0x90, 0x6d, 0xb4, 0xea, 0xde, 0x76, 0x78, 0xd8, 0xa8, 0x69, 0xba, 0x9c,
	0x29, 0x77, 0x22, 0x5d, 0x66, 0x7f, 0x91, 0x04, 0x8a, 0x5c, 0x7f, 0x2c, 0xf7, 0x8d, 0x43, 0xcd,
	0xcb, 0x0b, 0x0f, 0xb3, 0xfc, 0x22, 0x20, 0x67, 0xb0, 0x24, 0x70, 0x10, 0xef, 0x21, 0x5a, 0x4d,
	0xce, 0xfe, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xec, 0x82, 0xe0, 0x6e, 0x3b, 0x00, 0x00,
}
