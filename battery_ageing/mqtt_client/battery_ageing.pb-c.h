/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: battery_ageing.proto */

#ifndef PROTOBUF_C_battery_5fageing_2eproto__INCLUDED
#define PROTOBUF_C_battery_5fageing_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BMessage BMessage;
typedef struct _AMessage AMessage;


/* --- enums --- */


/* --- messages --- */

struct  _BMessage
{
  ProtobufCMessage base;
  char *m;
  char *n;
};
#define BMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bmessage__descriptor) \
    , NULL, NULL }


struct  _AMessage
{
  ProtobufCMessage base;
  int32_t a;
  protobuf_c_boolean has_b;
  int32_t b;
  /*
   *  repeated BMessage msg=5;
   */
  size_t n_d;
  int32_t *d;
};
#define AMESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&amessage__descriptor) \
    , 0, 0,0, 0,NULL }


/* BMessage methods */
void   bmessage__init
                     (BMessage         *message);
size_t bmessage__get_packed_size
                     (const BMessage   *message);
size_t bmessage__pack
                     (const BMessage   *message,
                      uint8_t             *out);
size_t bmessage__pack_to_buffer
                     (const BMessage   *message,
                      ProtobufCBuffer     *buffer);
BMessage *
       bmessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   bmessage__free_unpacked
                     (BMessage *message,
                      ProtobufCAllocator *allocator);
/* AMessage methods */
void   amessage__init
                     (AMessage         *message);
size_t amessage__get_packed_size
                     (const AMessage   *message);
size_t amessage__pack
                     (const AMessage   *message,
                      uint8_t             *out);
size_t amessage__pack_to_buffer
                     (const AMessage   *message,
                      ProtobufCBuffer     *buffer);
AMessage *
       amessage__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   amessage__free_unpacked
                     (AMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BMessage_Closure)
                 (const BMessage *message,
                  void *closure_data);
typedef void (*AMessage_Closure)
                 (const AMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor bmessage__descriptor;
extern const ProtobufCMessageDescriptor amessage__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_battery_5fageing_2eproto__INCLUDED */
